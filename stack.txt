parser.y: warning: 1 nonterminal useless in grammar [-Wother]
parser.y: warning: 1 rule useless in grammar [-Wother]
parser.y:2018.1-10: warning: nonterminal useless in grammar: class_name [-Wother]
 2018 | class_name: NAME {
      | ^~~~~~~~~~
Starting parse
Entering state 0
Stack now 0
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 11 75
Reducing stack by rule 12 (line 172):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 11 76 135
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 11 76 135 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 11 76 135 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 11 76 135 185 222 251
Reducing stack by rule 23 (line 299):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 11 76 135 190
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 20 (line 274):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 189
Stack now 0 11 76 135 189
Reducing stack by rule 18 (line 250):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 188
Stack now 0 11 76 135 188
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 227
Stack now 0 11 76 135 188 227
Reducing stack by rule 15 (line 231):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 11 76 136
Reading a token
Next token is token ARROW_OPER ()
Shifting token ARROW_OPER ()
Entering state 191
Stack now 0 11 76 136 191
Reading a token
Next token is token NONE ()
Shifting token NONE ()
Entering state 231
Stack now 0 11 76 136 191 231
Reducing stack by rule 14 (line 225):
   $1 = token NONE ()
-> $$ = nterm func_ret_type ()
Entering state 232
Stack now 0 11 76 136 191 232
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 257
Stack now 0 11 76 136 191 232 257
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 11 76 136 191 232 257 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 11 76 136 191 232 257 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 11 76 136 191 232 257 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 11 76 136 191 232 257 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 11 76 136 191 232 257 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 11 76 136 191 232 257 198 235 258 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 11 76 136 191 232 257 198 235 258 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258
Reading a token
Next token is token FOR ()
Shifting token FOR ()
Entering state 5
Stack now 0 11 76 136 191 232 257 198 235 258 258 5
Reducing stack by rule 76 (line 892):
   $1 = token FOR ()
-> $$ = nterm for_scope ()
Entering state 47
Stack now 0 11 76 136 191 232 257 198 235 258 258 47
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 64
Reading a token
Next token is token IN ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 60
Next token is token IN ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 59
Next token is token IN ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 58
Next token is token IN ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 57
Next token is token IN ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 56
Next token is token IN ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 97
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97
Next token is token IN ()
Shifting token IN ()
Entering state 153
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153
Reading a token
Next token is token RANGE ()
Shifting token RANGE ()
Entering state 204
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 239
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239
Reading a token
Next token is token LEN ()
Shifting token LEN ()
Entering state 25
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 85
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 142
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 142
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 195
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 25 85 142 195
Reducing stack by rule 138 (line 1590):
   $1 = token LEN ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 264
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 264
Reducing stack by rule 79 (line 918):
   $1 = nterm test ()
-> $$ = nterm for_test ()
Entering state 263
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 263
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 282
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 204 239 263 282
Reducing stack by rule 77 (line 902):
   $1 = token RANGE ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm for_test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm range_stmt ()
Entering state 205
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 97 153 205
Reducing stack by rule 75 (line 871):
   $1 = nterm expr ()
   $2 = token IN ()
   $3 = nterm range_stmt ()
-> $$ = nterm for_core ()
Entering state 96
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 152
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152
Reducing stack by rule 1 (line 92):
-> $$ = nterm M ()
Entering state 203
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208
Reading a token
Next token is token ATOM_KEYWORDS ()
Shifting token ATOM_KEYWORDS ()
Entering state 13
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 13
Reducing stack by rule 149 (line 1721):
   $1 = token ATOM_KEYWORDS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258
Reading a token
Next token is token FOR ()
Shifting token FOR ()
Entering state 5
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 5
Reducing stack by rule 76 (line 892):
   $1 = token FOR ()
-> $$ = nterm for_scope ()
Entering state 47
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 64
Reading a token
Next token is token IN ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 60
Next token is token IN ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 59
Next token is token IN ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 58
Next token is token IN ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 57
Next token is token IN ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 56
Next token is token IN ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 97
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97
Next token is token IN ()
Shifting token IN ()
Entering state 153
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153
Reading a token
Next token is token RANGE ()
Shifting token RANGE ()
Entering state 204
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 239
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 264
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 264
Reducing stack by rule 79 (line 918):
   $1 = nterm test ()
-> $$ = nterm for_test ()
Entering state 263
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 283
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283
Reading a token
Next token is token LEN ()
Shifting token LEN ()
Entering state 25
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 85
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 142
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 142
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 195
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 25 85 142 195
Reducing stack by rule 138 (line 1590):
   $1 = token LEN ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 64
Reading a token
Next token is token MINUS ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 60
Next token is token MINUS ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 119
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 64
Reading a token
Next token is token MINUS ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 169
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 169
Next token is token MINUS ()
Reducing stack by rule 119 (line 1252):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 119
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 169
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59 119 169
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 119 (line 1252):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 291
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 291
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 296
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 204 239 263 283 291 296
Reducing stack by rule 78 (line 909):
   $1 = token RANGE ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm for_test ()
   $4 = token COMMA ()
   $5 = nterm test ()
   $6 = token CLOSE_BRACKET ()
-> $$ = nterm range_stmt ()
Entering state 205
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 97 153 205
Reducing stack by rule 75 (line 871):
   $1 = nterm expr ()
   $2 = token IN ()
   $3 = nterm range_stmt ()
-> $$ = nterm for_core ()
Entering state 96
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 152
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152
Reducing stack by rule 1 (line 92):
-> $$ = nterm M ()
Entering state 203
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235
Reading a token
Next token is token IF ()
Shifting token IF ()
Entering state 3
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 3
Reducing stack by rule 63 (line 729):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Entering state 43
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 64
Reading a token
Next token is token GREATER_THAN ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 60
Next token is token GREATER_THAN ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 59
Next token is token GREATER_THAN ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 58
Next token is token GREATER_THAN ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 57
Next token is token GREATER_THAN ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 56
Next token is token GREATER_THAN ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55
Next token is token GREATER_THAN ()
Shifting token GREATER_THAN ()
Entering state 106
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 106
Reducing stack by rule 99 (line 1037):
   $1 = token GREATER_THAN ()
-> $$ = nterm comp_op ()
Entering state 113
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 64
Reading a token
Next token is token PLUS ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 60
Next token is token PLUS ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 118
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 168
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59 118 168
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 118 (line 1217):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 163
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 55 113 163
Reducing stack by rule 97 (line 1013):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 94
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94
Next token is token COLON ()
Shifting token COLON ()
Entering state 149
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149
Reducing stack by rule 1 (line 92):
-> $$ = nterm M ()
Entering state 201
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 64
Reading a token
Next token is token EQUAL ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 60
Next token is token EQUAL ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 59
Next token is token EQUAL ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 58
Next token is token EQUAL ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 57
Next token is token EQUAL ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 56
Next token is token EQUAL ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 55
Next token is token EQUAL ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 53
Next token is token EQUAL ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 51
Next token is token EQUAL ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 99
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 64
Reading a token
Next token is token PLUS ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 60
Next token is token PLUS ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 118
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 168
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59 118 168
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 118 (line 1217):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 155
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 48 99 155
Reducing stack by rule 37 (line 435):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 64
Reading a token
Next token is token PLUS ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 60
Next token is token PLUS ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 118
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 168
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59 118 168
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 118 (line 1217):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 64
Reading a token
Next token is token EQUAL ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 60
Next token is token EQUAL ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 59
Next token is token EQUAL ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 58
Next token is token EQUAL ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 57
Next token is token EQUAL ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 56
Next token is token EQUAL ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 55
Next token is token EQUAL ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 53
Next token is token EQUAL ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 51
Next token is token EQUAL ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 99
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 155
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 48 99 155
Reducing stack by rule 37 (line 435):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 64
Reading a token
Next token is token EQUAL ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 60
Next token is token EQUAL ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 59
Next token is token EQUAL ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 58
Next token is token EQUAL ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 57
Next token is token EQUAL ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 56
Next token is token EQUAL ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 55
Next token is token EQUAL ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 53
Next token is token EQUAL ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 51
Next token is token EQUAL ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 99
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99
Reading a token
Next token is token ATOM_KEYWORDS ()
Shifting token ATOM_KEYWORDS ()
Entering state 13
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 13
Reducing stack by rule 149 (line 1721):
   $1 = token ATOM_KEYWORDS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 155
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 48 99 155
Reducing stack by rule 37 (line 435):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 236
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 43 94 149 201 236
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 58 (line 681):
   $1 = nterm if_scope ()
   $2 = nterm test ()
   $3 = token COLON ()
   $4 = nterm M ()
   $5 = nterm suite ()
-> $$ = nterm if_stmt ()
Entering state 42
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 42
Reducing stack by rule 53 (line 662):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 258
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 238
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 47 96 152 203 238
Reading a token
Next token is token IF ()
Reducing stack by rule 73 (line 828):
   $1 = nterm for_scope ()
   $2 = nterm for_core ()
   $3 = token COLON ()
   $4 = nterm M ()
   $5 = nterm suite ()
-> $$ = nterm for_stmt ()
Entering state 46
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 46
Reducing stack by rule 55 (line 669):
   $1 = nterm for_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258
Next token is token IF ()
Shifting token IF ()
Entering state 3
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 3
Reducing stack by rule 63 (line 729):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Entering state 43
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43
Reading a token
Next token is token NOT ()
Shifting token NOT ()
Entering state 6
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 71
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 6 71
Reducing stack by rule 92 (line 989):
   $1 = token NOT ()
   $2 = nterm not_test ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 94
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94
Next token is token COLON ()
Shifting token COLON ()
Entering state 149
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149
Reducing stack by rule 1 (line 92):
-> $$ = nterm M ()
Entering state 201
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235
Reading a token
Next token is token BREAK ()
Shifting token BREAK ()
Entering state 7
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 7
Reducing stack by rule 45 (line 615):
   $1 = token BREAK ()
-> $$ = nterm break_stmt ()
Entering state 37
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 37
Reducing stack by rule 42 (line 604):
   $1 = nterm break_stmt ()
-> $$ = nterm flow_stmt ()
Entering state 36
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 36
Reducing stack by rule 31 (line 352):
   $1 = nterm flow_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 33
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 236
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 43 94 149 201 236
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 58 (line 681):
   $1 = nterm if_scope ()
   $2 = nterm test ()
   $3 = token COLON ()
   $4 = nterm M ()
   $5 = nterm suite ()
-> $$ = nterm if_stmt ()
Entering state 42
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 42
Reducing stack by rule 53 (line 662):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 258
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 238
Stack now 0 11 76 136 191 232 257 198 235 258 258 47 96 152 203 238
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 73 (line 828):
   $1 = nterm for_scope ()
   $2 = nterm for_core ()
   $3 = token COLON ()
   $4 = nterm M ()
   $5 = nterm suite ()
-> $$ = nterm for_stmt ()
Entering state 46
Stack now 0 11 76 136 191 232 257 198 235 258 258 46
Reducing stack by rule 55 (line 669):
   $1 = nterm for_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 11 76 136 191 232 257 198 235 258 258 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 11 76 136 191 232 257 198 235 258 258 258
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 11 76 136 191 232 257 198 235 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 11 76 136 191 232 257 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 11 76 136 191 232 257 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 271
Stack now 0 11 76 136 191 232 257 271
Reducing stack by rule 9 (line 141):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token ARROW_OPER ()
   $5 = nterm func_ret_type ()
   $6 = token COLON ()
   $7 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 30
Stack now 0 30
Reducing stack by rule 56 (line 673):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 11 75
Reducing stack by rule 12 (line 172):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 11 76 135
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 186
Stack now 0 31 11 76 135 186
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 224
Stack now 0 31 11 76 135 186 224
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 11 76 135 186 224 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 11 76 135 186 224 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 11 76 135 186 224 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 11 76 135 186 224 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 11 76 135 186 224 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 20
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20
Reading a token
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 17
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 17
Reducing stack by rule 130 (line 1363):
   $1 = token MINUS ()
-> $$ = nterm factor_choice ()
Entering state 62
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 126
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 62 126
Reducing stack by rule 127 (line 1344):
   $1 = nterm factor_choice ()
   $2 = nterm factor ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 80
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 80
Next token is token COMMA ()
Reducing stack by rule 159 (line 1791):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 132
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 180
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 180
Next token is token COMMA ()
Reducing stack by rule 161 (line 1815):
   $1 = nterm testlist_list ()
   $2 = token COMMA ()
   $3 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 132
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 180
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 180
Next token is token COMMA ()
Reducing stack by rule 161 (line 1815):
   $1 = nterm testlist_list ()
   $2 = token COMMA ()
   $3 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 132
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 180
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 180
Next token is token COMMA ()
Reducing stack by rule 161 (line 1815):
   $1 = nterm testlist_list ()
   $2 = token COMMA ()
   $3 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 132
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132
Reading a token
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 17
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 17
Reducing stack by rule 130 (line 1363):
   $1 = token MINUS ()
-> $$ = nterm factor_choice ()
Entering state 62
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 126
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 62 126
Reducing stack by rule 127 (line 1344):
   $1 = nterm factor_choice ()
   $2 = nterm factor ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 180
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68 132 180
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 161 (line 1815):
   $1 = nterm testlist_list ()
   $2 = token COMMA ()
   $3 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 68
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 157 (line 1778):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 84
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 84
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 141
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 20 84 141
Reducing stack by rule 143 (line 1660):
   $1 = token SQUARE_OPEN ()
   $2 = nterm testlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 11 76 135 186 224 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 11 76 135 186 224 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 11 76 135 186 224 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 11 76 135 186 224 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 11 76 135 186 224 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 11 76 135 186 224 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 11 76 135 186 224 198 235 258 64 128
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2065):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 177
Reducing stack by rule 173 (line 2046):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2039):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 175
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 175
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 216
Stack now 0 31 11 76 135 186 224 198 235 258 64 128 175 216
Reducing stack by rule 154 (line 1760):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 11 76 135 186 224 198 235 258 64 131
Reducing stack by rule 135 (line 1389):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 11 76 135 186 224 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1791):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1778):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 11 76 135 186 224 198 235 258 67
Reducing stack by rule 36 (line 432):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 11 76 135 186 224 198 235 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 11 76 135 186 224 198 235 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 11 76 135 186 224 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 11 76 135 186 224 198 235 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 11 76 135 186 224 198 235 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 11 76 135 186 224 198 235 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1738):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 66
Reducing stack by rule 148 (line 1718):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 11 76 135 186 224 198 235 258 258 26 86 143 196
Reducing stack by rule 139 (line 1611):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 11 76 135 186 224 198 235 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1791):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1778):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 11 76 135 186 224 198 235 258 258 67
Reducing stack by rule 36 (line 432):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 11 76 135 186 224 198 235 258 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 11 76 135 186 224 198 235 258 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 11 76 135 186 224 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 11 76 135 186 224 198 235 258 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 11 76 135 186 224 198 235 258 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 53
Next token is token COLON ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 51
Next token is token COLON ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 23
Reducing stack by rule 147 (line 1713):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 577):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 48 100 157 208 242
Reducing stack by rule 38 (line 518):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258
Reading a token
Next token is token FOR ()
Shifting token FOR ()
Entering state 5
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 5
Reducing stack by rule 76 (line 892):
   $1 = token FOR ()
-> $$ = nterm for_scope ()
Entering state 47
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 64
Reading a token
Next token is token IN ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 60
Next token is token IN ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 59
Next token is token IN ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 58
Next token is token IN ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 57
Next token is token IN ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 56
Next token is token IN ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 97
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97
Next token is token IN ()
Shifting token IN ()
Entering state 153
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153
Reading a token
Next token is token RANGE ()
Shifting token RANGE ()
Entering state 204
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 239
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239
Reading a token
Next token is token LEN ()
Shifting token LEN ()
Entering state 25
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 85
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 142
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 142
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 195
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 25 85 142 195
Reducing stack by rule 138 (line 1590):
   $1 = token LEN ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 264
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 264
Reducing stack by rule 79 (line 918):
   $1 = nterm test ()
-> $$ = nterm for_test ()
Entering state 263
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 263
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 282
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 204 239 263 282
Reducing stack by rule 77 (line 902):
   $1 = token RANGE ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm for_test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm range_stmt ()
Entering state 205
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 97 153 205
Reducing stack by rule 75 (line 871):
   $1 = nterm expr ()
   $2 = token IN ()
   $3 = nterm range_stmt ()
-> $$ = nterm for_core ()
Entering state 96
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 152
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152
Reducing stack by rule 1 (line 92):
-> $$ = nterm M ()
Entering state 203
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64
Reading a token
Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 130
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 64
Reading a token
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 59
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 58
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 56
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 51
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 179
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 179
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 218
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64 130 179 218
Reducing stack by rule 136 (line 1518):
   $1 = nterm atom_expr ()
   $2 = token SQUARE_OPEN ()
   $3 = nterm test ()
   $4 = token SQUARE_CLOSE ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 26 86 143 196
Reducing stack by rule 139 (line 1611):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1791):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1778):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 67
Reducing stack by rule 36 (line 432):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 238
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 47 96 152 203 238
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 73 (line 828):
   $1 = nterm for_scope ()
   $2 = nterm for_core ()
   $3 = token COLON ()
   $4 = nterm M ()
   $5 = nterm suite ()
-> $$ = nterm for_stmt ()
Entering state 46
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 46
Reducing stack by rule 55 (line 669):
   $1 = nterm for_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 258
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 11 76 135 186 224 198 235 258 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 11 76 135 186 224 198 235 258 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 11 76 135 186 224 198 235 258 272
Reducing stack by rule 178 (line 2079):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 11 76 135 186 224 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 11 76 135 186 224 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 253
Stack now 0 31 11 76 135 186 224 253
Reducing stack by rule 10 (line 152):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = token OPEN_BRACKET ()
   $4 = token CLOSE_BRACKET ()
   $5 = token COLON ()
   $6 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 30
Stack now 0 31 30
Reducing stack by rule 56 (line 673):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31
Reading a token
Next token is token IF ()
Shifting token IF ()
Entering state 3
Stack now 0 31 31 3
Reducing stack by rule 63 (line 729):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Entering state 43
Stack now 0 31 31 43
Reading a token
Next token is token D_NAME ()
Shifting token D_NAME ()
Entering state 92
Stack now 0 31 31 43 92
Reading a token
Next token is token EQUAL_EQUAL ()
Shifting token EQUAL_EQUAL ()
Entering state 147
Stack now 0 31 31 43 92 147
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 197
Stack now 0 31 31 43 92 147 197
Reducing stack by rule 62 (line 717):
   $1 = token D_NAME ()
   $2 = token EQUAL_EQUAL ()
   $3 = token STRING ()
-> $$ = nterm d_expr ()
Entering state 93
Stack now 0 31 31 43 93
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 148
Stack now 0 31 31 43 93 148
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 43 93 148 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 43 93 148 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 43 93 148 198 235 2
Reducing stack by rule 146 (line 1686):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 43 93 148 198 235 65
Reducing stack by rule 134 (line 1386):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 43 93 148 198 235 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 43 93 148 198 235 64 128
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 172
Stack now 0 31 31 43 93 148 198 235 64 128 172
Reducing stack by rule 153 (line 1753):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 43 93 148 198 235 64 131
Reducing stack by rule 135 (line 1389):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 43 93 148 198 235 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1370):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 43 93 148 198 235 63
Reducing stack by rule 128 (line 1356):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 43 93 148 198 235 61
Reducing stack by rule 120 (line 1287):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 43 93 148 198 235 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1214):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 43 93 148 198 235 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1178):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 43 93 148 198 235 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1141):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 43 93 148 198 235 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1105):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 43 93 148 198 235 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1069):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 43 93 148 198 235 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1010):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 43 93 148 198 235 54
Reducing stack by rule 93 (line 995):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 43 93 148 198 235 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 966):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 43 93 148 198 235 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 943):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 43 93 148 198 235 49
Reducing stack by rule 83 (line 937):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 43 93 148 198 235 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1791):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 43 93 148 198 235 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1778):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 43 93 148 198 235 67
Reducing stack by rule 36 (line 432):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 43 93 148 198 235 35
Reducing stack by rule 30 (line 349):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 43 93 148 198 235 34
Reducing stack by rule 28 (line 339):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 43 93 148 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 43 93 148 198 235 33 90
Reducing stack by rule 27 (line 334):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 43 93 148 198 235 32
Reducing stack by rule 24 (line 323):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 43 93 148 198 235 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2076):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 43 93 148 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 43 93 148 198 235 259 274
Reducing stack by rule 81 (line 928):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 200
Stack now 0 31 31 43 93 148 200
Reducing stack by rule 61 (line 711):
   $1 = nterm if_scope ()
   $2 = nterm d_expr ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Entering state 42
Stack now 0 31 31 42
Reducing stack by rule 53 (line 662):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 31 41
Reducing stack by rule 25 (line 326):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31 31
Reading a token
Now at end of input.
Reducing stack by rule 5 (line 114):
   $1 = nterm stmt ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 31 89
Reducing stack by rule 7 (line 120):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 89
Reducing stack by rule 7 (line 120):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 29
Stack now 0 29
Reducing stack by rule 3 (line 105):
   $1 = nterm snippet ()
-> $$ = nterm file ()
Entering state 28
Stack now 0 28
Now at end of input.
Shifting token "end of file" ()
Entering state 88
Stack now 0 28 88
Stack now 0 28 88
Cleanup: popping token "end of file" ()
Cleanup: popping nterm file ()
