Starting parse
Entering state 0
Reading a token: Next token is token CLASS ()
Shifting token CLASS ()
Entering state 12
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 87
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 158
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 13
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 88
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 159
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 13 88 159
Entering state 229
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 13 88 159
Entering state 228
Reducing stack by rule 12 (line 221):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 13 88 159
Entering state 227
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 266
Reducing stack by rule 11 (line 217):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 12 87 158 216 255 13 88
Entering state 160
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 231
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 270
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 297
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 204
Reducing stack by rule 155 (line 520):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token CURLY_OPEN ()
Shifting token CURLY_OPEN ()
Entering state 25
Reading a token: Next token is token CURLY_CLOSE ()
Shifting token CURLY_CLOSE ()
Entering state 101
Reducing stack by rule 140 (line 497):
   $1 = token CURLY_OPEN ()
   $2 = token CURLY_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 13 88 160 231 270 297
Entering state 310
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 321
Reducing stack by rule 212 (line 606):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm func_body_suite ()
Stack now 0 12 87 158 216 255 13 88 160 231
Entering state 272
Reducing stack by rule 7 (line 210):
   $1 = token DEF ()
   $2 = token NAME ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm func_body_suite ()
-> $$ = nterm funcdef ()
Stack now 0 12 87 158 216 255
Entering state 30
Reducing stack by rule 61 (line 320):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 12 87 158 216 255
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255
Entering state 282
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 13
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 88
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 159
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 13 88 159
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 13 88 159
Entering state 228
Reducing stack by rule 12 (line 221):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 13 88 159 227 267
Entering state 229
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 13 88 159
Entering state 227
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 266
Reducing stack by rule 11 (line 217):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 12 87 158 216 255 282 13 88
Entering state 160
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 231
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 270
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 297
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 37
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 282 13 88 160 231 270 297
Entering state 310
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 321
Reducing stack by rule 212 (line 606):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm func_body_suite ()
Stack now 0 12 87 158 216 255 282 13 88 160 231
Entering state 272
Reducing stack by rule 7 (line 210):
   $1 = token DEF ()
   $2 = token NAME ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm func_body_suite ()
-> $$ = nterm funcdef ()
Stack now 0 12 87 158 216 255 282
Entering state 30
Reducing stack by rule 61 (line 320):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 12 87 158 216 255 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 282
Entering state 282
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 13
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 88
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 159
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 228
Reducing stack by rule 12 (line 221):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 229
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 12 87 158 216 255 282 282 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 12 87 158 216 255 282 282 13 88 159
Entering state 227
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 266
Reducing stack by rule 11 (line 217):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 12 87 158 216 255 282 282 13 88
Entering state 160
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 231
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 270
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 297
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 206
Next token is token COMMA ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 208
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 250
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 26
Reading a token: Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 109
Reducing stack by rule 138 (line 495):
   $1 = token SQUARE_OPEN ()
   $2 = token SQUARE_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 208 250
Entering state 279
Reducing stack by rule 197 (line 585):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 20
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 94
Reducing stack by rule 153 (line 515):
   $1 = nterm namedexpr_test ()
-> $$ = nterm named_or_star ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 98
Next token is token COMMA ()
Reducing stack by rule 151 (line 512):
   $1 = nterm named_or_star ()
-> $$ = nterm named_or_star_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 97
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 167
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 94
Reducing stack by rule 153 (line 515):
   $1 = nterm namedexpr_test ()
-> $$ = nterm named_or_star ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20 97 167
Entering state 234
Reducing stack by rule 152 (line 513):
   $1 = nterm named_or_star_list ()
   $2 = token COMMA ()
   $3 = nterm named_or_star ()
-> $$ = nterm named_or_star_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 97
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 149 (line 509):
   $1 = nterm named_or_star_list ()
-> $$ = nterm testlist_comp ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149 20
Entering state 96
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 166
Reducing stack by rule 135 (line 492):
   $1 = token OPEN_BRACKET ()
   $2 = nterm testlist_comp ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm atom ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 37
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231 270 297
Entering state 310
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 321
Reducing stack by rule 212 (line 606):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm func_body_suite ()
Stack now 0 12 87 158 216 255 282 282 13 88 160 231
Entering state 272
Reducing stack by rule 7 (line 210):
   $1 = token DEF ()
   $2 = token NAME ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm func_body_suite ()
-> $$ = nterm funcdef ()
Stack now 0 12 87 158 216 255 282 282
Entering state 30
Reducing stack by rule 61 (line 320):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 12 87 158 216 255 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 12 87 158 216 255 282 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 12 87 158 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 12 87 158
Entering state 224
Reducing stack by rule 191 (line 576):
   $1 = token CLASS ()
   $2 = token NAME ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm classdef ()
Stack now 0
Entering state 72
Reducing stack by rule 62 (line 321):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Stack now 0
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0
Entering state 31
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 13
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 88
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 159
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 31 13 88 159
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 31 13 88 159
Entering state 228
Reducing stack by rule 12 (line 221):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 31 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 31 13 88 159 227 267
Entering state 229
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 31 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 31 13 88 159
Entering state 227
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 266
Reducing stack by rule 11 (line 217):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 31 13 88
Entering state 160
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 231
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 270
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 297
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token CURLY_OPEN ()
Shifting token CURLY_OPEN ()
Entering state 25
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 102
Next token is token COLON ()
Shifting token COLON ()
Entering state 173
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 19
Reducing stack by rule 142 (line 499):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 69
Reading a token: Next token is token CURLY_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 65
Next token is token CURLY_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 64
Next token is token CURLY_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 63
Next token is token CURLY_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 62
Next token is token CURLY_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 61
Next token is token CURLY_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 60
Next token is token CURLY_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 57
Next token is token CURLY_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 55
Next token is token CURLY_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 53
Next token is token CURLY_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 37 116 25 102 173
Entering state 237
Reducing stack by rule 183 (line 562):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = nterm test ()
-> $$ = nterm A ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 105
Next token is token CURLY_CLOSE ()
Reducing stack by rule 185 (line 565):
   $1 = nterm A ()
-> $$ = nterm A_list ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 106
Next token is token CURLY_CLOSE ()
Reducing stack by rule 178 (line 555):
   $1 = nterm A_list ()
-> $$ = nterm dictorsetmaker ()
Stack now 0 31 13 88 160 231 270 297 37 116 25
Entering state 104
Next token is token CURLY_CLOSE ()
Shifting token CURLY_CLOSE ()
Entering state 174
Reducing stack by rule 139 (line 496):
   $1 = token CURLY_OPEN ()
   $2 = nterm dictorsetmaker ()
   $3 = token CURLY_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token CURLY_OPEN ()
Shifting token CURLY_OPEN ()
Entering state 25
Reading a token: Next token is token CURLY_CLOSE ()
Shifting token CURLY_CLOSE ()
Entering state 101
Reducing stack by rule 140 (line 497):
   $1 = token CURLY_OPEN ()
   $2 = token CURLY_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 282
Reading a token: Next token is token WHILE ()
Shifting token WHILE ()
Entering state 6
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6
Entering state 79
Next token is token COLON ()
Shifting token COLON ()
Entering state 154
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 3
Reducing stack by rule 145 (line 502):
   $1 = token TYPE_HINT ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 3
Reducing stack by rule 145 (line 502):
   $1 = token TYPE_HINT ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 18
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 146 (line 504):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 71
Reducing stack by rule 143 (line 500):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 69
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 282
Reading a token: Next token is token FOR ()
Shifting token FOR ()
Entering state 7
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 69
Reading a token: Next token is token IN ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 65
Next token is token IN ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 64
Next token is token IN ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 63
Next token is token IN ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 62
Next token is token IN ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 61
Next token is token IN ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 81
Reducing stack by rule 171 (line 545):
   $1 = nterm expr ()
-> $$ = nterm expr_or_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 84
Reducing stack by rule 169 (line 542):
   $1 = nterm expr_or_star_expr ()
-> $$ = nterm expr_or_star_expr_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 83
Next token is token IN ()
Reducing stack by rule 167 (line 539):
   $1 = nterm expr_or_star_expr_list ()
-> $$ = nterm exprlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7
Entering state 82
Next token is token IN ()
Shifting token IN ()
Entering state 155
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 185
Reducing stack by rule 175 (line 551):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 187
Next token is token COLON ()
Reducing stack by rule 173 (line 548):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155
Entering state 220
Next token is token COLON ()
Shifting token COLON ()
Entering state 260
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token IF ()
Shifting token IF ()
Entering state 5
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 69
Reading a token: Next token is token IN ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 65
Next token is token IN ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 64
Next token is token IN ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 63
Next token is token IN ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 62
Next token is token IN ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 61
Next token is token IN ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 60
Next token is token IN ()
Shifting token IN ()
Entering state 124
Reducing stack by rule 102 (line 402):
   $1 = token IN ()
-> $$ = nterm comp_op ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60
Entering state 134
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 69
Reading a token: Next token is token AND ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 65
Next token is token AND ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 64
Next token is token AND ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 63
Next token is token AND ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 62
Next token is token AND ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 61
Next token is token AND ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 60
Next token is token AND ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 60 134
Entering state 194
Reducing stack by rule 94 (line 385):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 57
Next token is token AND ()
Reducing stack by rule 90 (line 371):
   $1 = nterm not_test ()
-> $$ = nterm not_test_star ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 56
Next token is token AND ()
Shifting token AND ()
Entering state 123
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 69
Reading a token: Next token is token LESS_THAN ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 65
Next token is token LESS_THAN ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 64
Next token is token LESS_THAN ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 63
Next token is token LESS_THAN ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 62
Next token is token LESS_THAN ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 61
Next token is token LESS_THAN ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 60
Next token is token LESS_THAN ()
Shifting token LESS_THAN ()
Entering state 126
Reducing stack by rule 95 (line 395):
   $1 = token LESS_THAN ()
-> $$ = nterm comp_op ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60
Entering state 134
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123 60 134
Entering state 194
Reducing stack by rule 94 (line 385):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 56 123
Entering state 191
Next token is token COLON ()
Reducing stack by rule 88 (line 368):
   $1 = nterm not_test_star ()
   $2 = token AND ()
   $3 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5
Entering state 77
Next token is token COLON ()
Shifting token COLON ()
Entering state 153
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255 5 77 153
Entering state 218
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 67 (line 330):
   $1 = token IF ()
   $2 = nterm namedexpr_test ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255
Entering state 49
Reducing stack by rule 58 (line 317):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255
Entering state 282
Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 7 82 155 220 260
Entering state 288
Reading a token: Next token is token IF ()
Reducing stack by rule 73 (line 338):
   $1 = token FOR ()
   $2 = nterm exprlist ()
   $3 = token IN ()
   $4 = nterm testlist ()
   $5 = token COLON ()
   $6 = nterm suite ()
-> $$ = nterm for_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282
Entering state 51
Reducing stack by rule 60 (line 319):
   $1 = nterm for_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282
Entering state 282
Next token is token IF ()
Shifting token IF ()
Entering state 5
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 69
Reading a token: Next token is token IS ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 65
Next token is token IS ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 64
Next token is token IS ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 63
Next token is token IS ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 62
Next token is token IS ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 61
Next token is token IS ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 60
Next token is token IS ()
Shifting token IS ()
Entering state 133
Reading a token: Next token is token TYPE_HINT ()
Reducing stack by rule 104 (line 404):
   $1 = token IS ()
-> $$ = nterm comp_op ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60
Entering state 134
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 3
Reducing stack by rule 145 (line 502):
   $1 = token TYPE_HINT ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 60 134
Entering state 194
Reducing stack by rule 94 (line 385):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5
Entering state 77
Next token is token COLON ()
Shifting token COLON ()
Entering state 153
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token BREAK ()
Shifting token BREAK ()
Entering state 9
Reducing stack by rule 46 (line 295):
   $1 = token BREAK ()
-> $$ = nterm break_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 41
Reducing stack by rule 43 (line 291):
   $1 = nterm break_stmt ()
-> $$ = nterm flow_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 40
Reducing stack by rule 25 (line 247):
   $1 = nterm flow_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 33
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 5 77 153
Entering state 218
Reading a token: Next token is token NAME ()
Reducing stack by rule 67 (line 330):
   $1 = token IF ()
   $2 = nterm namedexpr_test ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282
Entering state 49
Reducing stack by rule 58 (line 317):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282
Entering state 282
Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 37
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 282
Reading a token: Next token is token FOR ()
Shifting token FOR ()
Entering state 7
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 69
Reading a token: Next token is token IN ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 65
Next token is token IN ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 64
Next token is token IN ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 63
Next token is token IN ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 62
Next token is token IN ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 61
Next token is token IN ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 81
Reducing stack by rule 171 (line 545):
   $1 = nterm expr ()
-> $$ = nterm expr_or_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 84
Reducing stack by rule 169 (line 542):
   $1 = nterm expr_or_star_expr ()
-> $$ = nterm expr_or_star_expr_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 83
Next token is token IN ()
Reducing stack by rule 167 (line 539):
   $1 = nterm expr_or_star_expr_list ()
-> $$ = nterm exprlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7
Entering state 82
Next token is token IN ()
Shifting token IN ()
Entering state 155
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 206
Next token is token COMMA ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 208
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 250
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 26
Reading a token: Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 109
Reducing stack by rule 138 (line 495):
   $1 = token SQUARE_OPEN ()
   $2 = token SQUARE_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149 208 250
Entering state 279
Reducing stack by rule 197 (line 585):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 185
Reducing stack by rule 175 (line 551):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 187
Next token is token COLON ()
Reducing stack by rule 173 (line 548):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155
Entering state 220
Next token is token COLON ()
Shifting token COLON ()
Entering state 260
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 38
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 38 120
Entering state 188
Reducing stack by rule 39 (line 280):
   $1 = nterm expr_choice_list ()
   $2 = token COMMA ()
   $3 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 69
Reading a token: Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 65
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 64
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 63
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 62
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 61
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 60
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 57
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 55
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 53
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 38
Next token is token ASSIGN_OPERATOR ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 37
Next token is token ASSIGN_OPERATOR ()
Shifting token ASSIGN_OPERATOR ()
Entering state 115
Reducing stack by rule 42 (line 287):
   $1 = token ASSIGN_OPERATOR ()
-> $$ = nterm augassign ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37
Entering state 119
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 185
Reducing stack by rule 175 (line 551):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 187
Next token is token NEWLINE ()
Reducing stack by rule 173 (line 548):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 37 119
Entering state 186
Reducing stack by rule 30 (line 254):
   $1 = nterm testlist_star_expr ()
   $2 = nterm augassign ()
   $3 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 282
Reading a token: Next token is token IF ()
Shifting token IF ()
Entering state 5
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 69
Reading a token: Next token is token NOT ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 65
Next token is token NOT ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 64
Next token is token NOT ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 63
Next token is token NOT ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 62
Next token is token NOT ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 61
Next token is token NOT ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 60
Next token is token NOT ()
Shifting token NOT ()
Entering state 125
Reading a token: Next token is token IN ()
Shifting token IN ()
Entering state 192
Reducing stack by rule 103 (line 403):
   $1 = token NOT ()
   $2 = token IN ()
-> $$ = nterm comp_op ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60
Entering state 134
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 69
Reading a token: Next token is token OR ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 65
Next token is token OR ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 64
Next token is token OR ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 63
Next token is token OR ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 62
Next token is token OR ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 61
Next token is token OR ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 60
Next token is token OR ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 60 134
Entering state 194
Reducing stack by rule 94 (line 385):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 57
Next token is token OR ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 55
Next token is token OR ()
Reducing stack by rule 86 (line 358):
   $1 = nterm and_test ()
-> $$ = nterm and_test_star ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 54
Next token is token OR ()
Shifting token OR ()
Entering state 122
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 69
Reading a token: Next token is token LESS_THAN ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 65
Next token is token LESS_THAN ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 64
Next token is token LESS_THAN ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 63
Next token is token LESS_THAN ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 62
Next token is token LESS_THAN ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 61
Next token is token LESS_THAN ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 60
Next token is token LESS_THAN ()
Shifting token LESS_THAN ()
Entering state 126
Reducing stack by rule 95 (line 395):
   $1 = token LESS_THAN ()
-> $$ = nterm comp_op ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60
Entering state 134
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122 60 134
Entering state 194
Reducing stack by rule 94 (line 385):
   $1 = nterm expr ()
   $2 = nterm comp_op ()
   $3 = nterm comparison ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 54 122
Entering state 190
Next token is token COLON ()
Reducing stack by rule 84 (line 355):
   $1 = nterm and_test_star ()
   $2 = token OR ()
   $3 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5
Entering state 77
Next token is token COLON ()
Shifting token COLON ()
Entering state 153
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 69
Reading a token: Next token is token SQUARE_CLOSE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 65
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 64
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 63
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 62
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 61
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 60
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 57
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 55
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 53
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 212
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 162 (line 533):
   $1 = nterm test ()
-> $$ = nterm subscript ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 214
Next token is token SQUARE_CLOSE ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69 151
Entering state 213
Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 253
Reducing stack by rule 157 (line 522):
   $1 = token SQUARE_OPEN ()
   $2 = nterm subscriptlist ()
   $3 = token SQUARE_CLOSE ()
-> $$ = nterm trailer ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282 5 77 153
Entering state 218
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 67 (line 330):
   $1 = token IF ()
   $2 = nterm namedexpr_test ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282
Entering state 49
Reducing stack by rule 58 (line 317):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282
Entering state 282
Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282 7 82 155 220 260
Entering state 288
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 73 (line 338):
   $1 = token FOR ()
   $2 = nterm exprlist ()
   $3 = token IN ()
   $4 = nterm testlist ()
   $5 = token COLON ()
   $6 = nterm suite ()
-> $$ = nterm for_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282
Entering state 51
Reducing stack by rule 60 (line 319):
   $1 = nterm for_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282
Entering state 282
Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 6 79 154
Entering state 219
Reading a token: Next token is token RETURN ()
Reducing stack by rule 71 (line 335):
   $1 = token WHILE ()
   $2 = nterm namedexpr_test ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm while_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282
Entering state 50
Reducing stack by rule 59 (line 318):
   $1 = nterm while_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282
Entering state 282
Next token is token RETURN ()
Shifting token RETURN ()
Entering state 11
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 38
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11 38 120
Entering state 188
Reducing stack by rule 39 (line 280):
   $1 = nterm expr_choice_list ()
   $2 = token COMMA ()
   $3 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282 11
Entering state 86
Reducing stack by rule 49 (line 300):
   $1 = token RETURN ()
   $2 = nterm testlist_star_expr ()
-> $$ = nterm return_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 43
Reducing stack by rule 45 (line 293):
   $1 = nterm return_stmt ()
-> $$ = nterm flow_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 40
Reducing stack by rule 25 (line 247):
   $1 = nterm flow_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 13 88 160 231 270 297
Entering state 310
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 321
Reducing stack by rule 212 (line 606):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm func_body_suite ()
Stack now 0 31 13 88 160 231
Entering state 272
Reducing stack by rule 7 (line 210):
   $1 = token DEF ()
   $2 = token NAME ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm func_body_suite ()
-> $$ = nterm funcdef ()
Stack now 0 31
Entering state 30
Reducing stack by rule 61 (line 320):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 31
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31
Entering state 31
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 13
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 88
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 159
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 31 31 13 88 159
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 31 31 13 88 159
Entering state 228
Reducing stack by rule 12 (line 221):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 31 31 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token COMMA ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 31 31 13 88 159 227 267
Entering state 229
Next token is token COMMA ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 31 31 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 31 31 13 88 159
Entering state 227
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 267
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 225
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 16 (line 229):
   $1 = token NAME ()
-> $$ = nterm tfpdef ()
Stack now 0 31 31 13 88 159 227 267
Entering state 229
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 14 (line 225):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 31 31 13 88 159 227 267
Entering state 294
Reducing stack by rule 13 (line 222):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 31 31 13 88 159
Entering state 227
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 266
Reducing stack by rule 11 (line 217):
   $1 = token OPEN_BRACKET ()
   $2 = nterm typedargslist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 31 31 13 88
Entering state 160
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 231
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 270
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 297
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 38
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 38 120
Entering state 188
Reducing stack by rule 39 (line 280):
   $1 = nterm expr_choice_list ()
   $2 = token COMMA ()
   $3 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 69
Reading a token: Next token is token COMMA ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 64
Next token is token COMMA ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 63
Next token is token COMMA ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 62
Next token is token COMMA ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 55
Next token is token COMMA ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 53
Next token is token COMMA ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 206
Next token is token COMMA ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 208
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 250
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149 208 250
Entering state 279
Reducing stack by rule 197 (line 585):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 31 13 88 160 231 270 297 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 13 88 160 231 270 297
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 26
Reading a token: Next token is token SQUARE_CLOSE ()
Shifting token SQUARE_CLOSE ()
Entering state 109
Reducing stack by rule 138 (line 495):
   $1 = token SQUARE_OPEN ()
   $2 = token SQUARE_CLOSE ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282
Entering state 282
Reading a token: Next token is token WHILE ()
Shifting token WHILE ()
Entering state 6
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 69
Reading a token: Next token is token COLON ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 65
Next token is token COLON ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 64
Next token is token COLON ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 63
Next token is token COLON ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 62
Next token is token COLON ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 61
Next token is token COLON ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 60
Next token is token COLON ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 57
Next token is token COLON ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 55
Next token is token COLON ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 53
Next token is token COLON ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 78
Reducing stack by rule 80 (line 349):
   $1 = nterm test ()
-> $$ = nterm namedexpr_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6
Entering state 79
Next token is token COLON ()
Shifting token COLON ()
Entering state 154
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 216
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 255
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 37
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 282
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 69
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 65
Next token is token EQUAL ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 64
Next token is token EQUAL ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 63
Next token is token EQUAL ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 62
Next token is token EQUAL ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 55
Next token is token EQUAL ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 53
Next token is token EQUAL ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 38
Next token is token EQUAL ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 37
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 116
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 69
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 150
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 210
Reducing stack by rule 134 (line 489):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 69
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 149
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 69
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 63
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 62
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 206
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 198 (line 586):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 209
Reducing stack by rule 196 (line 584):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 208
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 194 (line 581):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69 149
Entering state 207
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 249
Reducing stack by rule 156 (line 521):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116 69
Entering state 152
Reducing stack by rule 133 (line 488):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 69
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 130 (line 480):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 68
Reducing stack by rule 126 (line 474):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 66
Reducing stack by rule 118 (line 457):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 453):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 64
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 443):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 63
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 433):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 62
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 423):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 107 (line 413):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 93 (line 384):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 58
Reducing stack by rule 92 (line 381):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 367):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 55
Next token is token NEWLINE ()
Reducing stack by rule 83 (line 354):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 53
Next token is token NEWLINE ()
Reducing stack by rule 81 (line 351):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 52
Reducing stack by rule 40 (line 283):
   $1 = nterm test ()
-> $$ = nterm expr_choice ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 39
Reducing stack by rule 38 (line 279):
   $1 = nterm expr_choice ()
-> $$ = nterm expr_choice_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 38
Next token is token NEWLINE ()
Reducing stack by rule 36 (line 275):
   $1 = nterm expr_choice_list ()
-> $$ = nterm testlist_star_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 183
Next token is token NEWLINE ()
Reducing stack by rule 32 (line 258):
   $1 = nterm testlist_star_expr ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282 37 116
Entering state 182
Reducing stack by rule 33 (line 259):
   $1 = nterm testlist_star_expr ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 36
Reducing stack by rule 31 (line 255):
   $1 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 35
Reducing stack by rule 24 (line 246):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 34
Reducing stack by rule 22 (line 242):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 113
Reducing stack by rule 21 (line 239):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 32
Reducing stack by rule 18 (line 233):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 282
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 214 (line 610):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255 282
Entering state 299
Reducing stack by rule 215 (line 611):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154 216 255
Entering state 283
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 301
Reducing stack by rule 76 (line 342):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 6 79 154
Entering state 219
Reading a token: Next token is token RETURN ()
Reducing stack by rule 71 (line 335):
   $1 = token WHILE ()
   $2 = nterm namedexpr_test ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm while_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282
Entering state 50
Reducing stack by rule 59 (line 318):
   $1 = nterm while_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282
Entering state 47
Reducing stack by rule 19 (line 234):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 13 88 160 231 270 297 282 282
Entering state 282
Next token is token RETURN ()
Shifting token RETURN ()
Entering state 11
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 4
Reducing stack by rule 141 (line 498):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 282 11
Entering state 70
Reducing stack by rule 132 (line 487):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 282 11
Entering state 69
Reading a token: Next token is token SQUARE_OPEN ()
Shifting token SQUARE_OPEN ()
Entering state 151
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 211
Reading a token: Next token is token COLON ()
Reducing stack by rule 163 (line 534):
   $1 = token COLON ()
-> $$ = nterm subscript ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 282 11 69 151
Entering state 215
Reducing stack by rule 160 (line 530):
   $1 = nterm subscript ()
-> $$ = nterm subscriptlist_list ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 282 11 69 151
Entering state 214
Next token is token COLON ()
Reducing stack by rule 158 (line 527):
   $1 = nterm subscriptlist_list ()
-> $$ = nterm subscriptlist ()
Stack now 0 31 31 13 88 160 231 270 297 282 282 282 11 69 151
Entering state 213
Next token is token COLON ()
Error: syntax error at line number 47 offending token: :
