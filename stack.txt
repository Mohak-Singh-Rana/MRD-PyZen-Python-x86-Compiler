parser.y: warning: 1 nonterminal useless in grammar [-Wother]
parser.y: warning: 1 rule useless in grammar [-Wother]
parser.y:2173.1-10: warning: nonterminal useless in grammar: class_name [-Wother]
 2173 | class_name: NAME {
      | ^~~~~~~~~~
Starting parse
Entering state 0
Stack now 0
Reading a token
Next token is token CLASS ()
Shifting token CLASS ()
Entering state 10
Stack now 0 10
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 73
Stack now 0 10 73
Reading a token
Next token is token COLON ()
Reducing stack by rule 164 (line 2053):
   $1 = token NAME ()
-> $$ = nterm class_declare ()
Entering state 74
Stack now 0 10 74
Next token is token COLON ()
Shifting token COLON ()
Entering state 134
Stack now 0 10 74 134
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 183
Stack now 0 10 74 134 183
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 221
Stack now 0 10 74 134 183 221
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 10 74 134 183 221 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 10 74 134 183 221 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 10 74 134 183 221 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 10 74 134 183 221 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 10 74 134 183 221 11 76 135 187
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 226
Stack now 0 10 74 134 183 221 11 76 135 187 226
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 10 74 134 183 221 11 76 135 187 226 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 10 74 134 183 221 11 76 135 187 226 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 10 74 134 183 221 11 76 135 187 226 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 10 74 134 183 221 11 76 135 187 226 190
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 189
Stack now 0 10 74 134 183 221 11 76 135 187 226 189
Reducing stack by rule 18 (line 265):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 10 74 134 183 221 11 76 135 187 226 254
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 270
Stack now 0 10 74 134 183 221 11 76 135 187 226 254 270
Reducing stack by rule 16 (line 249):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm typedargslist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 10 74 134 183 221 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 10 74 134 183 221 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 10 74 134 183 221 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 10 74 134 183 221 11 76 136 192 198 235
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 23
Reducing stack by rule 147 (line 1848):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 10 74 134 183 221 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 10 74 134 183 221 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 249
Stack now 0 10 74 134 183 221 249
Reducing stack by rule 169 (line 2164):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 10 74 134 183 221 250
Reading a token
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 267
Stack now 0 10 74 134 183 221 250 267
Reducing stack by rule 167 (line 2154):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Entering state 184
Stack now 0 10 74 134 184
Reducing stack by rule 163 (line 2032):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Entering state 69
Stack now 0 69
Reducing stack by rule 57 (line 755):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31
Reading a token
Next token is token CLASS ()
Shifting token CLASS ()
Entering state 10
Stack now 0 31 10
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 73
Stack now 0 31 10 73
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 133
Stack now 0 31 10 73 133
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 10 73 133 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 10 73 133 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 73 133 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 10 73 133 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 10 73 133 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 10 73 133 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 10 73 133 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 10 73 133 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 10 73 133 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 10 73 133 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 10 73 133 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 10 73 133 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 10 73 133 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 10 73 133 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 10 73 133 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 10 73 133 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 182
Stack now 0 31 10 73 133 182
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 220
Stack now 0 31 10 73 133 182 220
Reducing stack by rule 166 (line 2091):
   $1 = token NAME ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm argument ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm class_declare ()
Entering state 74
Stack now 0 31 10 74
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 134
Stack now 0 31 10 74 134
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 183
Stack now 0 31 10 74 134 183
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 221
Stack now 0 31 10 74 134 183 221
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 10 74 134 183 221 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 10 74 134 183 221 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 10 74 134 183 221 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 10 74 134 183 221 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 31 10 74 134 183 221 11 76 135 187
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 226
Stack now 0 31 10 74 134 183 221 11 76 135 187 226
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 190
Reading a token
Next token is token COMMA ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 189
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 189
Reducing stack by rule 18 (line 265):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228 190
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 255
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 228 255
Reducing stack by rule 19 (line 273):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 270
Stack now 0 31 10 74 134 183 221 11 76 135 187 226 254 270
Reducing stack by rule 16 (line 249):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm typedargslist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 31 10 74 134 183 221 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 31 10 74 134 183 221 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 10 74 134 183 221 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 129
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 129
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 178
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 129 178
Reducing stack by rule 137 (line 1650):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 173
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 214
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 177
Reducing stack by rule 173 (line 2201):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2194):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 245
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 245
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 265
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 245 265
Reducing stack by rule 155 (line 1901):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm arglist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 10 74 134 183 221 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 31 10 74 134 183 221 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 249
Stack now 0 31 10 74 134 183 221 249
Reducing stack by rule 169 (line 2164):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 31 10 74 134 183 221 250
Reading a token
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 267
Stack now 0 31 10 74 134 183 221 250 267
Reducing stack by rule 167 (line 2154):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Entering state 184
Stack now 0 31 10 74 134 184
Reducing stack by rule 163 (line 2032):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Entering state 69
Stack now 0 31 69
Reducing stack by rule 57 (line 755):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31
Reading a token
Next token is token CLASS ()
Shifting token CLASS ()
Entering state 10
Stack now 0 31 31 10
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 73
Stack now 0 31 31 10 73
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 133
Stack now 0 31 31 10 73 133
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 10 73 133 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 73 133 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 73 133 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 73 133 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 73 133 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 73 133 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 73 133 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 73 133 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 73 133 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 73 133 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 73 133 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 73 133 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 73 133 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 73 133 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 73 133 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 10 73 133 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 182
Stack now 0 31 31 10 73 133 182
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 220
Stack now 0 31 31 10 73 133 182 220
Reducing stack by rule 166 (line 2091):
   $1 = token NAME ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm argument ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm class_declare ()
Entering state 74
Stack now 0 31 31 10 74
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 134
Stack now 0 31 31 10 74 134
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 183
Stack now 0 31 31 10 74 134 183
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 221
Stack now 0 31 31 10 74 134 183 221
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 31 10 74 134 183 221 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 31 10 74 134 183 221 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 31 10 74 134 183 221 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 31 10 74 134 183 221 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 31 31 10 74 134 183 221 11 76 135 187
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 226
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 190
Reading a token
Next token is token COMMA ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 189
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 189
Reducing stack by rule 18 (line 265):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228 190
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 255
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 228 255
Reducing stack by rule 19 (line 273):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 270
Stack now 0 31 31 10 74 134 183 221 11 76 135 187 226 254 270
Reducing stack by rule 16 (line 249):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm typedargslist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 31 31 10 74 134 183 221 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 31 31 10 74 134 183 221 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208
Reading a token
Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 23
Reducing stack by rule 147 (line 1848):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 129
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 129
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 178
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 129 178
Reducing stack by rule 137 (line 1650):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 173
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 214
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 177
Reducing stack by rule 173 (line 2201):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2194):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 245
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 245
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 265
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 128 173 214 245 265
Reducing stack by rule 155 (line 1901):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm arglist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 31 31 10 74 134 183 221 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 249
Stack now 0 31 31 10 74 134 183 221 249
Reducing stack by rule 169 (line 2164):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 31 31 10 74 134 183 221 250
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 31 10 74 134 183 221 250 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 31 10 74 134 183 221 250 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 31 10 74 134 183 221 250 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 31 10 74 134 183 221 250 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 31 31 10 74 134 183 221 250 11 76 135 187
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 225
Stack now 0 31 31 10 74 134 183 221 250 11 76 135 187 225
Reducing stack by rule 17 (line 258):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 31 31 10 74 134 183 221 250 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 31 31 10 74 134 183 221 250 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 268
Stack now 0 31 31 10 74 134 183 221 250 268
Reducing stack by rule 170 (line 2167):
   $1 = nterm funcdef_plus ()
   $2 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 31 31 10 74 134 183 221 250
Reading a token
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 267
Stack now 0 31 31 10 74 134 183 221 250 267
Reducing stack by rule 167 (line 2154):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Entering state 184
Stack now 0 31 31 10 74 134 184
Reducing stack by rule 163 (line 2032):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Entering state 69
Stack now 0 31 31 69
Reducing stack by rule 57 (line 755):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 31 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31 31
Reading a token
Next token is token CLASS ()
Shifting token CLASS ()
Entering state 10
Stack now 0 31 31 31 10
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 73
Stack now 0 31 31 31 10 73
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 133
Stack now 0 31 31 31 10 73 133
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 10 73 133 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 73 133 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 73 133 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 73 133 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 73 133 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 73 133 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 73 133 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 73 133 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 73 133 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 73 133 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 73 133 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 73 133 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 73 133 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 73 133 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 73 133 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 10 73 133 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 182
Stack now 0 31 31 31 10 73 133 182
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 220
Stack now 0 31 31 31 10 73 133 182 220
Reducing stack by rule 166 (line 2091):
   $1 = token NAME ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm argument ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm class_declare ()
Entering state 74
Stack now 0 31 31 31 10 74
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 134
Stack now 0 31 31 31 10 74 134
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 183
Stack now 0 31 31 31 10 74 134 183
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 221
Stack now 0 31 31 31 10 74 134 183 221
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 31 31 10 74 134 183 221 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 31 31 10 74 134 183 221 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 31 31 10 74 134 183 221 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 31 31 10 74 134 183 221 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 226
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 190
Reading a token
Next token is token COMMA ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 189
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 189
Reducing stack by rule 18 (line 265):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 190
Reading a token
Next token is token COMMA ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 255
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 255
Reducing stack by rule 19 (line 273):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 185
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 222
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 251
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 185 222 251
Reducing stack by rule 23 (line 323):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Entering state 190
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 190
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 20 (line 295):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Entering state 255
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 228 255
Reducing stack by rule 19 (line 273):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Entering state 254
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 270
Stack now 0 31 31 31 10 74 134 183 221 11 76 135 187 226 254 270
Reducing stack by rule 16 (line 249):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm typedargslist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 31 31 31 10 74 134 183 221 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100
Reading a token
Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 157
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157
Reading a token
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 208
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 242
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 48 100 157 208 242
Reducing stack by rule 38 (line 581):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 129
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 129
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 178
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 129 178
Reducing stack by rule 137 (line 1650):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 173
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173
Reading a token
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 214
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 64
Reading a token
Next token is token COMMA ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 174
Next token is token COMMA ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 177
Reducing stack by rule 173 (line 2201):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 217
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 247
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176 217 247
Reducing stack by rule 174 (line 2211):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2194):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 245
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 245
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 265
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 128 173 214 245 265
Reducing stack by rule 155 (line 1901):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm arglist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 31 31 31 10 74 134 183 221 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 249
Stack now 0 31 31 31 10 74 134 183 221 249
Reducing stack by rule 169 (line 2164):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 31 31 31 10 74 134 183 221 250
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 31 31 10 74 134 183 221 250 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 31 31 10 74 134 183 221 250 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 31 31 10 74 134 183 221 250 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 135
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 187
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 135 187
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 225
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 135 187 225
Reducing stack by rule 17 (line 258):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Entering state 136
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 192
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258
Reading a token
Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86
Reading a token
Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 27
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 27 87
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 144
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 27 87 144
Reducing stack by rule 140 (line 1742):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 64
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 143
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 143
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 196
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 26 86 143 196
Reducing stack by rule 139 (line 1733):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 233
Stack now 0 31 31 31 10 74 134 183 221 250 11 76 136 192 233
Reducing stack by rule 8 (line 127):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 268
Stack now 0 31 31 31 10 74 134 183 221 250 268
Reducing stack by rule 170 (line 2167):
   $1 = nterm funcdef_plus ()
   $2 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Entering state 250
Stack now 0 31 31 31 10 74 134 183 221 250
Reading a token
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 267
Stack now 0 31 31 31 10 74 134 183 221 250 267
Reducing stack by rule 167 (line 2154):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Entering state 184
Stack now 0 31 31 31 10 74 134 184
Reducing stack by rule 163 (line 2032):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Entering state 69
Stack now 0 31 31 31 69
Reducing stack by rule 57 (line 755):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 31 31 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31 31 31
Reading a token
Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Stack now 0 31 31 31 31 11
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 75
Stack now 0 31 31 31 31 11 75
Reducing stack by rule 12 (line 180):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Entering state 76
Stack now 0 31 31 31 31 11 76
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 135
Stack now 0 31 31 31 31 11 76 135
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 186
Stack now 0 31 31 31 31 11 76 135 186
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 224
Stack now 0 31 31 31 31 11 76 135 186 224
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 31 31 11 76 135 186 224 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 31 31 11 76 135 186 224 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 64
Reading a token
Next token is token EQUAL ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 60
Next token is token EQUAL ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 59
Next token is token EQUAL ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 58
Next token is token EQUAL ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 57
Next token is token EQUAL ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 56
Next token is token EQUAL ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 55
Next token is token EQUAL ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 53
Next token is token EQUAL ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 51
Next token is token EQUAL ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 158
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 210
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 14
Reading a token
Next token is token COMMA ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 64
Next token is token COMMA ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 174
Next token is token COMMA ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 177
Reducing stack by rule 173 (line 2201):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 217
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 14
Reading a token
Next token is token COMMA ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 64
Next token is token COMMA ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 174
Next token is token COMMA ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 247
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 247
Reducing stack by rule 174 (line 2211):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 217
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 247
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176 217 247
Reducing stack by rule 174 (line 2211):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2194):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 175
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 175
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 216
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 128 175 216
Reducing stack by rule 154 (line 1895):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 244
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 48 100 158 210 244
Reducing stack by rule 39 (line 635):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = nterm test ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 129
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64 129
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 178
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64 129 178
Reducing stack by rule 137 (line 1650):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64 128
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 172
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64 128 172
Reducing stack by rule 153 (line 1888):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 64
Reading a token
Next token is token COLON ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 60
Next token is token COLON ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 59
Next token is token COLON ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 58
Next token is token COLON ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 57
Next token is token COLON ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 56
Next token is token COLON ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 55
Next token is token COLON ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 53
Next token is token COLON ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 51
Next token is token COLON ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48
Next token is token COLON ()
Shifting token COLON ()
Entering state 100
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 64
Reading a token
Next token is token EQUAL ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 60
Next token is token EQUAL ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 59
Next token is token EQUAL ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 58
Next token is token EQUAL ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 57
Next token is token EQUAL ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 56
Next token is token EQUAL ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 55
Next token is token EQUAL ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 53
Next token is token EQUAL ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 51
Next token is token EQUAL ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 158
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 210
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 14
Reading a token
Next token is token COMMA ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 64
Next token is token COMMA ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 60
Next token is token COMMA ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 59
Next token is token COMMA ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 58
Next token is token COMMA ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 57
Next token is token COMMA ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 56
Next token is token COMMA ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 55
Next token is token COMMA ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 53
Next token is token COMMA ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 51
Next token is token COMMA ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 174
Next token is token COMMA ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 177
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 177
Reducing stack by rule 173 (line 2201):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 217
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 14
Reading a token
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 151 (line 1873):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Entering state 66
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 66
Reducing stack by rule 148 (line 1853):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 64
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 55
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 53
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 51
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 174
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 174
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 175 (line 2227):
   $1 = nterm test ()
-> $$ = nterm argument ()
Entering state 247
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176 217 247
Reducing stack by rule 174 (line 2211):
   $1 = nterm argument_list ()
   $2 = token COMMA ()
   $3 = nterm argument ()
-> $$ = nterm argument_list ()
Entering state 176
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 176
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 171 (line 2194):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Entering state 175
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 175
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 216
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 128 175 216
Reducing stack by rule 154 (line 1895):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 156
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 156
Next token is token NEWLINE ()
Reducing stack by rule 40 (line 654):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Entering state 244
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 48 100 158 210 244
Reducing stack by rule 39 (line 635):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = nterm test ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64
Reading a token
Next token is token DOT ()
Shifting token DOT ()
Entering state 129
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64 129
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 178
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64 129 178
Reducing stack by rule 137 (line 1650):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64 128
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 172
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64 128 172
Reducing stack by rule 153 (line 1888):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 272
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 258 272
Reducing stack by rule 178 (line 2246):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 31 31 11 76 135 186 224 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 253
Stack now 0 31 31 31 31 11 76 135 186 224 253
Reducing stack by rule 10 (line 160):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = token OPEN_BRACKET ()
   $4 = token CLOSE_BRACKET ()
   $5 = token COLON ()
   $6 = nterm suite ()
-> $$ = nterm funcdef ()
Entering state 30
Stack now 0 31 31 31 31 30
Reducing stack by rule 56 (line 752):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 31 31 31 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31 31 31 31
Reading a token
Next token is token IF ()
Shifting token IF ()
Entering state 3
Stack now 0 31 31 31 31 31 3
Reducing stack by rule 63 (line 808):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Entering state 43
Stack now 0 31 31 31 31 31 43
Reading a token
Next token is token D_NAME ()
Shifting token D_NAME ()
Entering state 92
Stack now 0 31 31 31 31 31 43 92
Reading a token
Next token is token EQUAL_EQUAL ()
Shifting token EQUAL_EQUAL ()
Entering state 147
Stack now 0 31 31 31 31 31 43 92 147
Reading a token
Next token is token STRING ()
Shifting token STRING ()
Entering state 197
Stack now 0 31 31 31 31 31 43 92 147 197
Reducing stack by rule 62 (line 796):
   $1 = token D_NAME ()
   $2 = token EQUAL_EQUAL ()
   $3 = token STRING ()
-> $$ = nterm d_expr ()
Entering state 93
Stack now 0 31 31 31 31 31 43 93
Reading a token
Next token is token COLON ()
Shifting token COLON ()
Entering state 148
Stack now 0 31 31 31 31 31 43 93 148
Reading a token
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 198
Stack now 0 31 31 31 31 31 43 93 148 198
Reading a token
Next token is token INDENT ()
Shifting token INDENT ()
Entering state 235
Stack now 0 31 31 31 31 31 43 93 148 198 235
Reading a token
Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Stack now 0 31 31 31 31 31 43 93 148 198 235 2
Reducing stack by rule 146 (line 1821):
   $1 = token NAME ()
-> $$ = nterm atom ()
Entering state 65
Stack now 0 31 31 31 31 31 43 93 148 198 235 65
Reducing stack by rule 134 (line 1465):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 31 43 93 148 198 235 64
Reading a token
Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 128
Stack now 0 31 31 31 31 31 43 93 148 198 235 64 128
Reading a token
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 172
Stack now 0 31 31 31 31 31 43 93 148 198 235 64 128 172
Reducing stack by rule 153 (line 1888):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Entering state 131
Stack now 0 31 31 31 31 31 43 93 148 198 235 64 131
Reducing stack by rule 135 (line 1468):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Entering state 64
Stack now 0 31 31 31 31 31 43 93 148 198 235 64
Reading a token
Next token is token NEWLINE ()
Reducing stack by rule 132 (line 1449):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Entering state 63
Stack now 0 31 31 31 31 31 43 93 148 198 235 63
Reducing stack by rule 128 (line 1435):
   $1 = nterm power ()
-> $$ = nterm factor ()
Entering state 61
Stack now 0 31 31 31 31 31 43 93 148 198 235 61
Reducing stack by rule 120 (line 1366):
   $1 = nterm factor ()
-> $$ = nterm term ()
Entering state 60
Stack now 0 31 31 31 31 31 43 93 148 198 235 60
Next token is token NEWLINE ()
Reducing stack by rule 117 (line 1293):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Entering state 59
Stack now 0 31 31 31 31 31 43 93 148 198 235 59
Next token is token NEWLINE ()
Reducing stack by rule 115 (line 1257):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Entering state 58
Stack now 0 31 31 31 31 31 43 93 148 198 235 58
Next token is token NEWLINE ()
Reducing stack by rule 113 (line 1220):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Entering state 57
Stack now 0 31 31 31 31 31 43 93 148 198 235 57
Next token is token NEWLINE ()
Reducing stack by rule 111 (line 1184):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Entering state 56
Stack now 0 31 31 31 31 31 43 93 148 198 235 56
Next token is token NEWLINE ()
Reducing stack by rule 109 (line 1148):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Entering state 55
Stack now 0 31 31 31 31 31 43 93 148 198 235 55
Next token is token NEWLINE ()
Reducing stack by rule 96 (line 1089):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Entering state 54
Stack now 0 31 31 31 31 31 43 93 148 198 235 54
Reducing stack by rule 93 (line 1074):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Entering state 53
Stack now 0 31 31 31 31 31 43 93 148 198 235 53
Next token is token NEWLINE ()
Reducing stack by rule 88 (line 1045):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Entering state 51
Stack now 0 31 31 31 31 31 43 93 148 198 235 51
Next token is token NEWLINE ()
Reducing stack by rule 84 (line 1022):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Entering state 49
Stack now 0 31 31 31 31 31 43 93 148 198 235 49
Reducing stack by rule 83 (line 1016):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Entering state 48
Stack now 0 31 31 31 31 31 43 93 148 198 235 48
Next token is token NEWLINE ()
Reducing stack by rule 159 (line 1932):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Entering state 68
Stack now 0 31 31 31 31 31 43 93 148 198 235 68
Next token is token NEWLINE ()
Reducing stack by rule 157 (line 1919):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Entering state 67
Stack now 0 31 31 31 31 31 43 93 148 198 235 67
Reducing stack by rule 36 (line 495):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Entering state 35
Stack now 0 31 31 31 31 31 43 93 148 198 235 35
Reducing stack by rule 30 (line 376):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Entering state 34
Stack now 0 31 31 31 31 31 43 93 148 198 235 34
Reducing stack by rule 28 (line 366):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Entering state 33
Stack now 0 31 31 31 31 31 43 93 148 198 235 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Stack now 0 31 31 31 31 31 43 93 148 198 235 33 90
Reducing stack by rule 27 (line 361):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Entering state 32
Stack now 0 31 31 31 31 31 43 93 148 198 235 32
Reducing stack by rule 24 (line 350):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Entering state 258
Stack now 0 31 31 31 31 31 43 93 148 198 235 258
Reading a token
Next token is token DEDENT ()
Reducing stack by rule 177 (line 2243):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Entering state 259
Stack now 0 31 31 31 31 31 43 93 148 198 235 259
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 274
Stack now 0 31 31 31 31 31 43 93 148 198 235 259 274
Reducing stack by rule 81 (line 1007):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Entering state 200
Stack now 0 31 31 31 31 31 43 93 148 200
Reducing stack by rule 61 (line 790):
   $1 = nterm if_scope ()
   $2 = nterm d_expr ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Entering state 42
Stack now 0 31 31 31 31 31 42
Reducing stack by rule 53 (line 741):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Entering state 41
Stack now 0 31 31 31 31 31 41
Reducing stack by rule 25 (line 353):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Entering state 31
Stack now 0 31 31 31 31 31 31
Reading a token
Now at end of input.
Reducing stack by rule 5 (line 115):
   $1 = nterm stmt ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 31 31 31 31 89
Reducing stack by rule 7 (line 121):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 31 31 31 89
Reducing stack by rule 7 (line 121):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 31 31 89
Reducing stack by rule 7 (line 121):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 31 89
Reducing stack by rule 7 (line 121):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 89
Stack now 0 31 89
Reducing stack by rule 7 (line 121):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Entering state 29
Stack now 0 29
Reducing stack by rule 3 (line 106):
   $1 = nterm snippet ()
-> $$ = nterm file ()
Entering state 28
Stack now 0 28
Now at end of input.
Shifting token "end of file" ()
Entering state 88
Stack now 0 28 88
Stack now 0 28 88
Cleanup: popping token "end of file" ()
Cleanup: popping nterm file ()
