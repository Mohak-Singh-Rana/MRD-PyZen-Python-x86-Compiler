Grammar

    0 $accept: file $end

    1 M: ε

    2 N: ε

    3 file: snippet

    4 snippet: NEWLINE
    5        | stmt
    6        | NEWLINE snippet
    7        | stmt snippet

    8 funcdef: DEF NAME parameters COLON func_body_suite
    9        | DEF NAME parameters ARROW_OPER TYPE_HINT COLON func_body_suite
   10        | DEF NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON func_body_suite
   11        | DEF NAME OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite

   12 parameters: OPEN_BRACKET typedargslist CLOSE_BRACKET

   13 typedargslist: typedarg
   14              | typedargslist COMMA typedarg

   15 typedarg: tfpdef
   16         | tfpdef EQUAL test

   17 tfpdef: NAME
   18       | NAME COLON TYPE_HINT

   19 stmt: simple_stmt
   20     | compound_stmt

   21 simple_stmt: small_stmt_list SEMI_COLON NEWLINE
   22            | small_stmt_list NEWLINE

   23 small_stmt_list: small_stmt
   24                | small_stmt_list SEMI_COLON small_stmt

   25 small_stmt: expr_stmt
   26           | flow_stmt
   27           | global_stmt

   28 expr_stmt: test annassign
   29          | test ASSIGN_OPERATOR test
   30          | test
   31          | test EQUAL test

   32 annassign: COLON test
   33          | COLON test EQUAL test

   34 flow_stmt: break_stmt
   35          | continue_stmt
   36          | return_stmt

   37 break_stmt: BREAK

   38 continue_stmt: CONTINUE

   39 return_stmt: RETURN
   40            | RETURN test

   41 global_stmt: GLOBAL NAME
   42            | global_stmt COMMA NAME

   43 compound_stmt: if_stmt
   44              | while_stmt
   45              | for_stmt
   46              | funcdef
   47              | classdef

   48 if_stmt: IF test COLON M suite
   49        | IF test COLON M suite N ELSE COLON M suite
   50        | IF test COLON M suite N nts_star

   51 while_stmt: WHILE M test COLON M suite
   52           | WHILE M test COLON M suite N ELSE COLON M suite

   53 for_stmt: FOR expr IN test COLON suite
   54         | FOR expr IN test COLON suite ELSE COLON suite

   55 suite: simple_stmt
   56      | NEWLINE INDENT stmt_plus DEDENT
   57      | NEWLINE INDENT stmt_plus NEWLINE DEDENT

   58 nts_star: ELIF test COLON M suite
   59         | ELIF test COLON M suite N nts_star
   60         | ELIF test COLON M suite N ELSE COLON M suite

   61 test: or_test

   62 or_test: and_test
   63        | and_test_star OR and_test

   64 and_test_star: and_test_star OR and_test
   65              | and_test

   66 and_test: not_test
   67         | not_test_star AND not_test

   68 not_test_star: not_test_star AND not_test
   69              | not_test

   70 not_test: NOT not_test
   71         | comparison

   72 comparison: expr
   73           | expr comp_op comparison

   74 comp_op: LESS_THAN
   75        | GREATER_THAN
   76        | EQUAL_EQUAL
   77        | GREATER_THAN_EQUAL
   78        | LESS_THAN_EQUAL
   79        | NOT_EQUAL_ARROW
   80        | NOT_EQUAL
   81        | IN
   82        | NOT IN
   83        | IS
   84        | IS NOT

   85 expr: xor_expr
   86     | xor_expr BIT_OR expr

   87 xor_expr: and_expr
   88         | and_expr BIT_XOR xor_expr

   89 and_expr: shift_expr
   90         | shift_expr BIT_AND and_expr

   91 shift_expr: arith_expr
   92           | arith_expr SHIFT_OPER shift_expr

   93 arith_expr: term
   94           | arith_expr PLUS term
   95           | arith_expr MINUS term

   96 term: factor
   97     | term term_choice factor

   98 term_choice: MULTIPLY
   99            | ATTHERATE
  100            | DIVIDE
  101            | REMAINDER
  102            | FLOOR_DIV_OPER

  103 factor: factor_choice factor
  104       | power

  105 factor_choice: PLUS
  106              | MINUS
  107              | NEGATION

  108 power: atom_expr
  109      | atom_expr POWER_OPERATOR factor

  110 atom_expr: atom
  111          | atom_expr trailer
  112          | atom_expr DOT NAME

  113 atom: OPEN_BRACKET testlist CLOSE_BRACKET
  114     | OPEN_BRACKET CLOSE_BRACKET
  115     | SQUARE_OPEN testlist SQUARE_CLOSE
  116     | SQUARE_OPEN SQUARE_CLOSE
  117     | CURLY_OPEN CURLY_CLOSE
  118     | NAME
  119     | NUMBER
  120     | STRING_PLUS
  121     | ATOM_KEYWORDS
  122     | TYPE_HINT

  123 STRING_PLUS: STRING
  124            | STRING STRING_PLUS

  125 trailer: OPEN_BRACKET CLOSE_BRACKET
  126        | OPEN_BRACKET arglist CLOSE_BRACKET
  127        | SQUARE_OPEN test SQUARE_CLOSE

  128 testlist: testlist_list
  129         | testlist_list COMMA

  130 testlist_list: test
  131              | testlist_list COMMA test

  132 classdef: CLASS NAME COLON suite
  133         | CLASS NAME OPEN_BRACKET CLOSE_BRACKET COLON suite
  134         | CLASS NAME OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

  135 arglist: argument_list
  136        | argument_list COMMA

  137 argument_list: argument
  138              | argument_list COMMA argument

  139 argument: test
  140         | test EQUAL test

  141 func_body_suite: simple_stmt
  142                | NEWLINE INDENT stmt_plus DEDENT
  143                | NEWLINE INDENT stmt_plus NEWLINE DEDENT

  144 stmt_plus: stmt
  145          | stmt stmt_plus


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NEWLINE <elem> (258) 4 6 21 22 56 57 142 143
    INDENT <elem> (259) 56 57 142 143
    DEDENT <elem> (260) 56 57 142 143
    ASSIGN_OPERATOR <elem> (261) 29
    POWER_OPERATOR <elem> (262) 109
    SHIFT_OPER <elem> (263) 92
    FLOOR_DIV_OPER <elem> (264) 102
    ARROW_OPER <elem> (265) 9 10
    TYPE_HINT <elem> (266) 9 10 18 122
    NAME <elem> (267) 8 9 10 11 17 18 41 42 112 118 132 133 134
    IF <elem> (268) 48 49 50
    ELSE <elem> (269) 49 52 54 60
    ELIF <elem> (270) 58 59 60
    WHILE <elem> (271) 51 52
    FOR <elem> (272) 53 54
    IN <elem> (273) 53 54 81 82
    AND <elem> (274) 67 68
    OR <elem> (275) 63 64
    NOT <elem> (276) 70 82 84
    BREAK <elem> (277) 37
    CONTINUE <elem> (278) 38
    RETURN <elem> (279) 39 40
    CLASS <elem> (280) 132 133 134
    DEF <elem> (281) 8 9 10 11
    GLOBAL <elem> (282) 41
    ATOM_KEYWORDS <elem> (283) 121
    STRING <elem> (284) 123 124
    NUMBER <elem> (285) 119
    OPEN_BRACKET <elem> (286) 10 11 12 113 114 125 126 133 134
    CLOSE_BRACKET <elem> (287) 10 11 12 113 114 125 126 133 134
    EQUAL <elem> (288) 16 31 33 140
    SEMI_COLON <elem> (289) 21 24
    COLON <elem> (290) 8 9 10 11 18 32 33 48 49 50 51 52 53 54 58 59 60 132 133 134
    COMMA <elem> (291) 14 42 129 131 136 138
    PLUS <elem> (292) 94 105
    MINUS <elem> (293) 95 106
    MULTIPLY <elem> (294) 98
    DIVIDE <elem> (295) 100
    REMAINDER <elem> (296) 101
    ATTHERATE <elem> (297) 99
    NEGATION <elem> (298) 107
    BIT_AND <elem> (299) 90
    BIT_OR <elem> (300) 86
    BIT_XOR <elem> (301) 88
    DOT <elem> (302) 112
    CURLY_OPEN <elem> (303) 117
    CURLY_CLOSE <elem> (304) 117
    SQUARE_OPEN <elem> (305) 115 116 127
    SQUARE_CLOSE <elem> (306) 115 116 127
    LESS_THAN <elem> (307) 74
    GREATER_THAN <elem> (308) 75
    EQUAL_EQUAL <elem> (309) 76
    GREATER_THAN_EQUAL <elem> (310) 77
    LESS_THAN_EQUAL <elem> (311) 78
    NOT_EQUAL_ARROW <elem> (312) 79
    NOT_EQUAL <elem> (313) 80
    IS <elem> (314) 83 84


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    M <elem> (61)
        on left: 1
        on right: 48 49 50 51 52 58 59 60
    N <elem> (62)
        on left: 2
        on right: 49 50 52 59 60
    file <elem> (63)
        on left: 3
        on right: 0
    snippet <elem> (64)
        on left: 4 5 6 7
        on right: 3 6 7
    funcdef <elem> (65)
        on left: 8 9 10 11
        on right: 46
    parameters <elem> (66)
        on left: 12
        on right: 8 9
    typedargslist <elem> (67)
        on left: 13 14
        on right: 12 14
    typedarg <elem> (68)
        on left: 15 16
        on right: 13 14
    tfpdef <elem> (69)
        on left: 17 18
        on right: 15 16
    stmt <elem> (70)
        on left: 19 20
        on right: 5 7 144 145
    simple_stmt <elem> (71)
        on left: 21 22
        on right: 19 55 141
    small_stmt_list <elem> (72)
        on left: 23 24
        on right: 21 22 24
    small_stmt <elem> (73)
        on left: 25 26 27
        on right: 23 24
    expr_stmt <elem> (74)
        on left: 28 29 30 31
        on right: 25
    annassign <elem> (75)
        on left: 32 33
        on right: 28
    flow_stmt <elem> (76)
        on left: 34 35 36
        on right: 26
    break_stmt <elem> (77)
        on left: 37
        on right: 34
    continue_stmt <elem> (78)
        on left: 38
        on right: 35
    return_stmt <elem> (79)
        on left: 39 40
        on right: 36
    global_stmt <elem> (80)
        on left: 41 42
        on right: 27 42
    compound_stmt <elem> (81)
        on left: 43 44 45 46 47
        on right: 20
    if_stmt <elem> (82)
        on left: 48 49 50
        on right: 43
    while_stmt <elem> (83)
        on left: 51 52
        on right: 44
    for_stmt <elem> (84)
        on left: 53 54
        on right: 45
    suite <elem> (85)
        on left: 55 56 57
        on right: 48 49 50 51 52 53 54 58 59 60 132 133 134
    nts_star <elem> (86)
        on left: 58 59 60
        on right: 50 59
    test <elem> (87)
        on left: 61
        on right: 16 28 29 30 31 32 33 40 48 49 50 51 52 53 54 58 59 60 127 130 131 139 140
    or_test <elem> (88)
        on left: 62 63
        on right: 61
    and_test_star <elem> (89)
        on left: 64 65
        on right: 63 64
    and_test <elem> (90)
        on left: 66 67
        on right: 62 63 64 65
    not_test_star <elem> (91)
        on left: 68 69
        on right: 67 68
    not_test <elem> (92)
        on left: 70 71
        on right: 66 67 68 69 70
    comparison <elem> (93)
        on left: 72 73
        on right: 71 73
    comp_op <elem> (94)
        on left: 74 75 76 77 78 79 80 81 82 83 84
        on right: 73
    expr <elem> (95)
        on left: 85 86
        on right: 53 54 72 73 86
    xor_expr <elem> (96)
        on left: 87 88
        on right: 85 86 88
    and_expr <elem> (97)
        on left: 89 90
        on right: 87 88 90
    shift_expr <elem> (98)
        on left: 91 92
        on right: 89 90 92
    arith_expr <elem> (99)
        on left: 93 94 95
        on right: 91 92 94 95
    term <elem> (100)
        on left: 96 97
        on right: 93 94 95 97
    term_choice <elem> (101)
        on left: 98 99 100 101 102
        on right: 97
    factor <elem> (102)
        on left: 103 104
        on right: 96 97 103 109
    factor_choice <elem> (103)
        on left: 105 106 107
        on right: 103
    power <elem> (104)
        on left: 108 109
        on right: 104
    atom_expr <elem> (105)
        on left: 110 111 112
        on right: 108 109 111 112
    atom <elem> (106)
        on left: 113 114 115 116 117 118 119 120 121 122
        on right: 110
    STRING_PLUS <elem> (107)
        on left: 123 124
        on right: 120 124
    trailer <elem> (108)
        on left: 125 126 127
        on right: 111
    testlist <elem> (109)
        on left: 128 129
        on right: 113 115
    testlist_list <elem> (110)
        on left: 130 131
        on right: 128 129 131
    classdef <elem> (111)
        on left: 132 133 134
        on right: 47
    arglist <elem> (112)
        on left: 135 136
        on right: 126 134
    argument_list <elem> (113)
        on left: 137 138
        on right: 135 136 138
    argument <elem> (114)
        on left: 139 140
        on right: 137 138
    func_body_suite <elem> (115)
        on left: 141 142 143
        on right: 8 9 10 11
    stmt_plus <elem> (116)
        on left: 144 145
        on right: 56 57 142 143 145


State 0

    0 $accept: • file $end

    NEWLINE        shift, and go to state 1
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    file             go to state 23
    snippet          go to state 24
    funcdef          go to state 25
    stmt             go to state 26
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59


State 1

    4 snippet: NEWLINE •
    6        | NEWLINE • snippet

    NEWLINE        shift, and go to state 1
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 4 (snippet)

    snippet          go to state 60
    funcdef          go to state 25
    stmt             go to state 26
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59


State 2

  122 atom: TYPE_HINT •

    $default  reduce using rule 122 (atom)


State 3

  118 atom: NAME •

    $default  reduce using rule 118 (atom)


State 4

   48 if_stmt: IF • test COLON M suite
   49        | IF • test COLON M suite N ELSE COLON M suite
   50        | IF • test COLON M suite N nts_star

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 61
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 5

   51 while_stmt: WHILE • M test COLON M suite
   52           | WHILE • M test COLON M suite N ELSE COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 62


State 6

   53 for_stmt: FOR • expr IN test COLON suite
   54         | FOR • expr IN test COLON suite ELSE COLON suite

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    expr           go to state 63
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 7

   70 not_test: NOT • not_test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    not_test       go to state 64
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 8

   37 break_stmt: BREAK •

    $default  reduce using rule 37 (break_stmt)


State 9

   38 continue_stmt: CONTINUE •

    $default  reduce using rule 38 (continue_stmt)


State 10

   39 return_stmt: RETURN •
   40            | RETURN • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 39 (return_stmt)

    test           go to state 65
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 11

  132 classdef: CLASS • NAME COLON suite
  133         | CLASS • NAME OPEN_BRACKET CLOSE_BRACKET COLON suite
  134         | CLASS • NAME OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

    NAME  shift, and go to state 66


State 12

    8 funcdef: DEF • NAME parameters COLON func_body_suite
    9        | DEF • NAME parameters ARROW_OPER TYPE_HINT COLON func_body_suite
   10        | DEF • NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON func_body_suite
   11        | DEF • NAME OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite

    NAME  shift, and go to state 67


State 13

   41 global_stmt: GLOBAL • NAME

    NAME  shift, and go to state 68


State 14

  121 atom: ATOM_KEYWORDS •

    $default  reduce using rule 121 (atom)


State 15

  123 STRING_PLUS: STRING •
  124            | STRING • STRING_PLUS

    STRING  shift, and go to state 15

    $default  reduce using rule 123 (STRING_PLUS)

    STRING_PLUS  go to state 69


State 16

  119 atom: NUMBER •

    $default  reduce using rule 119 (atom)


State 17

  113 atom: OPEN_BRACKET • testlist CLOSE_BRACKET
  114     | OPEN_BRACKET • CLOSE_BRACKET

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    CLOSE_BRACKET  shift, and go to state 70
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 71
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58
    testlist       go to state 72
    testlist_list  go to state 73


State 18

  105 factor_choice: PLUS •

    $default  reduce using rule 105 (factor_choice)


State 19

  106 factor_choice: MINUS •

    $default  reduce using rule 106 (factor_choice)


State 20

  107 factor_choice: NEGATION •

    $default  reduce using rule 107 (factor_choice)


State 21

  117 atom: CURLY_OPEN • CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 74


State 22

  115 atom: SQUARE_OPEN • testlist SQUARE_CLOSE
  116     | SQUARE_OPEN • SQUARE_CLOSE

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22
    SQUARE_CLOSE   shift, and go to state 75

    test           go to state 71
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58
    testlist       go to state 76
    testlist_list  go to state 73


State 23

    0 $accept: file • $end

    $end  shift, and go to state 77


State 24

    3 file: snippet •

    $default  reduce using rule 3 (file)


State 25

   46 compound_stmt: funcdef •

    $default  reduce using rule 46 (compound_stmt)


State 26

    5 snippet: stmt •
    7        | stmt • snippet

    NEWLINE        shift, and go to state 1
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 5 (snippet)

    snippet          go to state 78
    funcdef          go to state 25
    stmt             go to state 26
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59


State 27

   19 stmt: simple_stmt •

    $default  reduce using rule 19 (stmt)


State 28

   21 simple_stmt: small_stmt_list • SEMI_COLON NEWLINE
   22            | small_stmt_list • NEWLINE
   24 small_stmt_list: small_stmt_list • SEMI_COLON small_stmt

    NEWLINE     shift, and go to state 79
    SEMI_COLON  shift, and go to state 80


State 29

   23 small_stmt_list: small_stmt •

    $default  reduce using rule 23 (small_stmt_list)


State 30

   25 small_stmt: expr_stmt •

    $default  reduce using rule 25 (small_stmt)


State 31

   26 small_stmt: flow_stmt •

    $default  reduce using rule 26 (small_stmt)


State 32

   34 flow_stmt: break_stmt •

    $default  reduce using rule 34 (flow_stmt)


State 33

   35 flow_stmt: continue_stmt •

    $default  reduce using rule 35 (flow_stmt)


State 34

   36 flow_stmt: return_stmt •

    $default  reduce using rule 36 (flow_stmt)


State 35

   27 small_stmt: global_stmt •
   42 global_stmt: global_stmt • COMMA NAME

    COMMA  shift, and go to state 81

    $default  reduce using rule 27 (small_stmt)


State 36

   20 stmt: compound_stmt •

    $default  reduce using rule 20 (stmt)


State 37

   43 compound_stmt: if_stmt •

    $default  reduce using rule 43 (compound_stmt)


State 38

   44 compound_stmt: while_stmt •

    $default  reduce using rule 44 (compound_stmt)


State 39

   45 compound_stmt: for_stmt •

    $default  reduce using rule 45 (compound_stmt)


State 40

   28 expr_stmt: test • annassign
   29          | test • ASSIGN_OPERATOR test
   30          | test •
   31          | test • EQUAL test

    ASSIGN_OPERATOR  shift, and go to state 82
    EQUAL            shift, and go to state 83
    COLON            shift, and go to state 84

    $default  reduce using rule 30 (expr_stmt)

    annassign  go to state 85


State 41

   61 test: or_test •

    $default  reduce using rule 61 (test)


State 42

   63 or_test: and_test_star • OR and_test
   64 and_test_star: and_test_star • OR and_test

    OR  shift, and go to state 86


State 43

   62 or_test: and_test •
   65 and_test_star: and_test •

    OR        reduce using rule 65 (and_test_star)
    $default  reduce using rule 62 (or_test)


State 44

   67 and_test: not_test_star • AND not_test
   68 not_test_star: not_test_star • AND not_test

    AND  shift, and go to state 87


State 45

   66 and_test: not_test •
   69 not_test_star: not_test •

    AND       reduce using rule 69 (not_test_star)
    $default  reduce using rule 66 (and_test)


State 46

   71 not_test: comparison •

    $default  reduce using rule 71 (not_test)


State 47

   72 comparison: expr •
   73           | expr • comp_op comparison

    IN                  shift, and go to state 88
    NOT                 shift, and go to state 89
    LESS_THAN           shift, and go to state 90
    GREATER_THAN        shift, and go to state 91
    EQUAL_EQUAL         shift, and go to state 92
    GREATER_THAN_EQUAL  shift, and go to state 93
    LESS_THAN_EQUAL     shift, and go to state 94
    NOT_EQUAL_ARROW     shift, and go to state 95
    NOT_EQUAL           shift, and go to state 96
    IS                  shift, and go to state 97

    $default  reduce using rule 72 (comparison)

    comp_op  go to state 98


State 48

   85 expr: xor_expr •
   86     | xor_expr • BIT_OR expr

    BIT_OR  shift, and go to state 99

    $default  reduce using rule 85 (expr)


State 49

   87 xor_expr: and_expr •
   88         | and_expr • BIT_XOR xor_expr

    BIT_XOR  shift, and go to state 100

    $default  reduce using rule 87 (xor_expr)


State 50

   89 and_expr: shift_expr •
   90         | shift_expr • BIT_AND and_expr

    BIT_AND  shift, and go to state 101

    $default  reduce using rule 89 (and_expr)


State 51

   91 shift_expr: arith_expr •
   92           | arith_expr • SHIFT_OPER shift_expr
   94 arith_expr: arith_expr • PLUS term
   95           | arith_expr • MINUS term

    SHIFT_OPER  shift, and go to state 102
    PLUS        shift, and go to state 103
    MINUS       shift, and go to state 104

    $default  reduce using rule 91 (shift_expr)


State 52

   93 arith_expr: term •
   97 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 105
    MULTIPLY        shift, and go to state 106
    DIVIDE          shift, and go to state 107
    REMAINDER       shift, and go to state 108
    ATTHERATE       shift, and go to state 109

    $default  reduce using rule 93 (arith_expr)

    term_choice  go to state 110


State 53

   96 term: factor •

    $default  reduce using rule 96 (term)


State 54

  103 factor: factor_choice • factor

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    factor         go to state 111
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 55

  104 factor: power •

    $default  reduce using rule 104 (factor)


State 56

  108 power: atom_expr •
  109      | atom_expr • POWER_OPERATOR factor
  111 atom_expr: atom_expr • trailer
  112          | atom_expr • DOT NAME

    POWER_OPERATOR  shift, and go to state 112
    OPEN_BRACKET    shift, and go to state 113
    DOT             shift, and go to state 114
    SQUARE_OPEN     shift, and go to state 115

    $default  reduce using rule 108 (power)

    trailer  go to state 116


State 57

  110 atom_expr: atom •

    $default  reduce using rule 110 (atom_expr)


State 58

  120 atom: STRING_PLUS •

    $default  reduce using rule 120 (atom)


State 59

   47 compound_stmt: classdef •

    $default  reduce using rule 47 (compound_stmt)


State 60

    6 snippet: NEWLINE snippet •

    $default  reduce using rule 6 (snippet)


State 61

   48 if_stmt: IF test • COLON M suite
   49        | IF test • COLON M suite N ELSE COLON M suite
   50        | IF test • COLON M suite N nts_star

    COLON  shift, and go to state 117


State 62

   51 while_stmt: WHILE M • test COLON M suite
   52           | WHILE M • test COLON M suite N ELSE COLON M suite

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 118
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 63

   53 for_stmt: FOR expr • IN test COLON suite
   54         | FOR expr • IN test COLON suite ELSE COLON suite

    IN  shift, and go to state 119


State 64

   70 not_test: NOT not_test •

    $default  reduce using rule 70 (not_test)


State 65

   40 return_stmt: RETURN test •

    $default  reduce using rule 40 (return_stmt)


State 66

  132 classdef: CLASS NAME • COLON suite
  133         | CLASS NAME • OPEN_BRACKET CLOSE_BRACKET COLON suite
  134         | CLASS NAME • OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

    OPEN_BRACKET  shift, and go to state 120
    COLON         shift, and go to state 121


State 67

    8 funcdef: DEF NAME • parameters COLON func_body_suite
    9        | DEF NAME • parameters ARROW_OPER TYPE_HINT COLON func_body_suite
   10        | DEF NAME • OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON func_body_suite
   11        | DEF NAME • OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite

    OPEN_BRACKET  shift, and go to state 122

    parameters  go to state 123


State 68

   41 global_stmt: GLOBAL NAME •

    $default  reduce using rule 41 (global_stmt)


State 69

  124 STRING_PLUS: STRING STRING_PLUS •

    $default  reduce using rule 124 (STRING_PLUS)


State 70

  114 atom: OPEN_BRACKET CLOSE_BRACKET •

    $default  reduce using rule 114 (atom)


State 71

  130 testlist_list: test •

    $default  reduce using rule 130 (testlist_list)


State 72

  113 atom: OPEN_BRACKET testlist • CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 124


State 73

  128 testlist: testlist_list •
  129         | testlist_list • COMMA
  131 testlist_list: testlist_list • COMMA test

    COMMA  shift, and go to state 125

    $default  reduce using rule 128 (testlist)


State 74

  117 atom: CURLY_OPEN CURLY_CLOSE •

    $default  reduce using rule 117 (atom)


State 75

  116 atom: SQUARE_OPEN SQUARE_CLOSE •

    $default  reduce using rule 116 (atom)


State 76

  115 atom: SQUARE_OPEN testlist • SQUARE_CLOSE

    SQUARE_CLOSE  shift, and go to state 126


State 77

    0 $accept: file $end •

    $default  accept


State 78

    7 snippet: stmt snippet •

    $default  reduce using rule 7 (snippet)


State 79

   22 simple_stmt: small_stmt_list NEWLINE •

    $default  reduce using rule 22 (simple_stmt)


State 80

   21 simple_stmt: small_stmt_list SEMI_COLON • NEWLINE
   24 small_stmt_list: small_stmt_list SEMI_COLON • small_stmt

    NEWLINE        shift, and go to state 127
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    small_stmt     go to state 128
    expr_stmt      go to state 30
    flow_stmt      go to state 31
    break_stmt     go to state 32
    continue_stmt  go to state 33
    return_stmt    go to state 34
    global_stmt    go to state 35
    test           go to state 40
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 81

   42 global_stmt: global_stmt COMMA • NAME

    NAME  shift, and go to state 129


State 82

   29 expr_stmt: test ASSIGN_OPERATOR • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 130
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 83

   31 expr_stmt: test EQUAL • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 131
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 84

   32 annassign: COLON • test
   33          | COLON • test EQUAL test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 132
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 85

   28 expr_stmt: test annassign •

    $default  reduce using rule 28 (expr_stmt)


State 86

   63 or_test: and_test_star OR • and_test
   64 and_test_star: and_test_star OR • and_test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    and_test       go to state 133
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 87

   67 and_test: not_test_star AND • not_test
   68 not_test_star: not_test_star AND • not_test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    not_test       go to state 134
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 88

   81 comp_op: IN •

    $default  reduce using rule 81 (comp_op)


State 89

   82 comp_op: NOT • IN

    IN  shift, and go to state 135


State 90

   74 comp_op: LESS_THAN •

    $default  reduce using rule 74 (comp_op)


State 91

   75 comp_op: GREATER_THAN •

    $default  reduce using rule 75 (comp_op)


State 92

   76 comp_op: EQUAL_EQUAL •

    $default  reduce using rule 76 (comp_op)


State 93

   77 comp_op: GREATER_THAN_EQUAL •

    $default  reduce using rule 77 (comp_op)


State 94

   78 comp_op: LESS_THAN_EQUAL •

    $default  reduce using rule 78 (comp_op)


State 95

   79 comp_op: NOT_EQUAL_ARROW •

    $default  reduce using rule 79 (comp_op)


State 96

   80 comp_op: NOT_EQUAL •

    $default  reduce using rule 80 (comp_op)


State 97

   83 comp_op: IS •
   84        | IS • NOT

    NOT  shift, and go to state 136

    $default  reduce using rule 83 (comp_op)


State 98

   73 comparison: expr comp_op • comparison

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    comparison     go to state 137
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 99

   86 expr: xor_expr BIT_OR • expr

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    expr           go to state 138
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 100

   88 xor_expr: and_expr BIT_XOR • xor_expr

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    xor_expr       go to state 139
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 101

   90 and_expr: shift_expr BIT_AND • and_expr

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    and_expr       go to state 140
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 102

   92 shift_expr: arith_expr SHIFT_OPER • shift_expr

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    shift_expr     go to state 141
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 103

   94 arith_expr: arith_expr PLUS • term

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    term           go to state 142
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 104

   95 arith_expr: arith_expr MINUS • term

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    term           go to state 143
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 105

  102 term_choice: FLOOR_DIV_OPER •

    $default  reduce using rule 102 (term_choice)


State 106

   98 term_choice: MULTIPLY •

    $default  reduce using rule 98 (term_choice)


State 107

  100 term_choice: DIVIDE •

    $default  reduce using rule 100 (term_choice)


State 108

  101 term_choice: REMAINDER •

    $default  reduce using rule 101 (term_choice)


State 109

   99 term_choice: ATTHERATE •

    $default  reduce using rule 99 (term_choice)


State 110

   97 term: term term_choice • factor

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    factor         go to state 144
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 111

  103 factor: factor_choice factor •

    $default  reduce using rule 103 (factor)


State 112

  109 power: atom_expr POWER_OPERATOR • factor

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    factor         go to state 145
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 113

  125 trailer: OPEN_BRACKET • CLOSE_BRACKET
  126        | OPEN_BRACKET • arglist CLOSE_BRACKET

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    CLOSE_BRACKET  shift, and go to state 146
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 147
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58
    arglist        go to state 148
    argument_list  go to state 149
    argument       go to state 150


State 114

  112 atom_expr: atom_expr DOT • NAME

    NAME  shift, and go to state 151


State 115

  127 trailer: SQUARE_OPEN • test SQUARE_CLOSE

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 152
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 116

  111 atom_expr: atom_expr trailer •

    $default  reduce using rule 111 (atom_expr)


State 117

   48 if_stmt: IF test COLON • M suite
   49        | IF test COLON • M suite N ELSE COLON M suite
   50        | IF test COLON • M suite N nts_star

    $default  reduce using rule 1 (M)

    M  go to state 153


State 118

   51 while_stmt: WHILE M test • COLON M suite
   52           | WHILE M test • COLON M suite N ELSE COLON M suite

    COLON  shift, and go to state 154


State 119

   53 for_stmt: FOR expr IN • test COLON suite
   54         | FOR expr IN • test COLON suite ELSE COLON suite

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 155
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 120

  133 classdef: CLASS NAME OPEN_BRACKET • CLOSE_BRACKET COLON suite
  134         | CLASS NAME OPEN_BRACKET • arglist CLOSE_BRACKET COLON suite

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    CLOSE_BRACKET  shift, and go to state 156
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 147
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58
    arglist        go to state 157
    argument_list  go to state 149
    argument       go to state 150


State 121

  132 classdef: CLASS NAME COLON • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 160
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 122

   10 funcdef: DEF NAME OPEN_BRACKET • CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON func_body_suite
   11        | DEF NAME OPEN_BRACKET • CLOSE_BRACKET COLON func_body_suite
   12 parameters: OPEN_BRACKET • typedargslist CLOSE_BRACKET

    NAME           shift, and go to state 161
    CLOSE_BRACKET  shift, and go to state 162

    typedargslist  go to state 163
    typedarg       go to state 164
    tfpdef         go to state 165


State 123

    8 funcdef: DEF NAME parameters • COLON func_body_suite
    9        | DEF NAME parameters • ARROW_OPER TYPE_HINT COLON func_body_suite

    ARROW_OPER  shift, and go to state 166
    COLON       shift, and go to state 167


State 124

  113 atom: OPEN_BRACKET testlist CLOSE_BRACKET •

    $default  reduce using rule 113 (atom)


State 125

  129 testlist: testlist_list COMMA •
  131 testlist_list: testlist_list COMMA • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 129 (testlist)

    test           go to state 168
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 126

  115 atom: SQUARE_OPEN testlist SQUARE_CLOSE •

    $default  reduce using rule 115 (atom)


State 127

   21 simple_stmt: small_stmt_list SEMI_COLON NEWLINE •

    $default  reduce using rule 21 (simple_stmt)


State 128

   24 small_stmt_list: small_stmt_list SEMI_COLON small_stmt •

    $default  reduce using rule 24 (small_stmt_list)


State 129

   42 global_stmt: global_stmt COMMA NAME •

    $default  reduce using rule 42 (global_stmt)


State 130

   29 expr_stmt: test ASSIGN_OPERATOR test •

    $default  reduce using rule 29 (expr_stmt)


State 131

   31 expr_stmt: test EQUAL test •

    $default  reduce using rule 31 (expr_stmt)


State 132

   32 annassign: COLON test •
   33          | COLON test • EQUAL test

    EQUAL  shift, and go to state 169

    $default  reduce using rule 32 (annassign)


State 133

   63 or_test: and_test_star OR and_test •
   64 and_test_star: and_test_star OR and_test •

    OR        reduce using rule 64 (and_test_star)
    $default  reduce using rule 63 (or_test)


State 134

   67 and_test: not_test_star AND not_test •
   68 not_test_star: not_test_star AND not_test •

    AND       reduce using rule 68 (not_test_star)
    $default  reduce using rule 67 (and_test)


State 135

   82 comp_op: NOT IN •

    $default  reduce using rule 82 (comp_op)


State 136

   84 comp_op: IS NOT •

    $default  reduce using rule 84 (comp_op)


State 137

   73 comparison: expr comp_op comparison •

    $default  reduce using rule 73 (comparison)


State 138

   86 expr: xor_expr BIT_OR expr •

    $default  reduce using rule 86 (expr)


State 139

   88 xor_expr: and_expr BIT_XOR xor_expr •

    $default  reduce using rule 88 (xor_expr)


State 140

   90 and_expr: shift_expr BIT_AND and_expr •

    $default  reduce using rule 90 (and_expr)


State 141

   92 shift_expr: arith_expr SHIFT_OPER shift_expr •

    $default  reduce using rule 92 (shift_expr)


State 142

   94 arith_expr: arith_expr PLUS term •
   97 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 105
    MULTIPLY        shift, and go to state 106
    DIVIDE          shift, and go to state 107
    REMAINDER       shift, and go to state 108
    ATTHERATE       shift, and go to state 109

    $default  reduce using rule 94 (arith_expr)

    term_choice  go to state 110


State 143

   95 arith_expr: arith_expr MINUS term •
   97 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 105
    MULTIPLY        shift, and go to state 106
    DIVIDE          shift, and go to state 107
    REMAINDER       shift, and go to state 108
    ATTHERATE       shift, and go to state 109

    $default  reduce using rule 95 (arith_expr)

    term_choice  go to state 110


State 144

   97 term: term term_choice factor •

    $default  reduce using rule 97 (term)


State 145

  109 power: atom_expr POWER_OPERATOR factor •

    $default  reduce using rule 109 (power)


State 146

  125 trailer: OPEN_BRACKET CLOSE_BRACKET •

    $default  reduce using rule 125 (trailer)


State 147

  139 argument: test •
  140         | test • EQUAL test

    EQUAL  shift, and go to state 170

    $default  reduce using rule 139 (argument)


State 148

  126 trailer: OPEN_BRACKET arglist • CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 171


State 149

  135 arglist: argument_list •
  136        | argument_list • COMMA
  138 argument_list: argument_list • COMMA argument

    COMMA  shift, and go to state 172

    $default  reduce using rule 135 (arglist)


State 150

  137 argument_list: argument •

    $default  reduce using rule 137 (argument_list)


State 151

  112 atom_expr: atom_expr DOT NAME •

    $default  reduce using rule 112 (atom_expr)


State 152

  127 trailer: SQUARE_OPEN test • SQUARE_CLOSE

    SQUARE_CLOSE  shift, and go to state 173


State 153

   48 if_stmt: IF test COLON M • suite
   49        | IF test COLON M • suite N ELSE COLON M suite
   50        | IF test COLON M • suite N nts_star

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 174
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 154

   51 while_stmt: WHILE M test COLON • M suite
   52           | WHILE M test COLON • M suite N ELSE COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 175


State 155

   53 for_stmt: FOR expr IN test • COLON suite
   54         | FOR expr IN test • COLON suite ELSE COLON suite

    COLON  shift, and go to state 176


State 156

  133 classdef: CLASS NAME OPEN_BRACKET CLOSE_BRACKET • COLON suite

    COLON  shift, and go to state 177


State 157

  134 classdef: CLASS NAME OPEN_BRACKET arglist • CLOSE_BRACKET COLON suite

    CLOSE_BRACKET  shift, and go to state 178


State 158

   56 suite: NEWLINE • INDENT stmt_plus DEDENT
   57      | NEWLINE • INDENT stmt_plus NEWLINE DEDENT

    INDENT  shift, and go to state 179


State 159

   55 suite: simple_stmt •

    $default  reduce using rule 55 (suite)


State 160

  132 classdef: CLASS NAME COLON suite •

    $default  reduce using rule 132 (classdef)


State 161

   17 tfpdef: NAME •
   18       | NAME • COLON TYPE_HINT

    COLON  shift, and go to state 180

    $default  reduce using rule 17 (tfpdef)


State 162

   10 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET • ARROW_OPER TYPE_HINT COLON func_body_suite
   11        | DEF NAME OPEN_BRACKET CLOSE_BRACKET • COLON func_body_suite

    ARROW_OPER  shift, and go to state 181
    COLON       shift, and go to state 182


State 163

   12 parameters: OPEN_BRACKET typedargslist • CLOSE_BRACKET
   14 typedargslist: typedargslist • COMMA typedarg

    CLOSE_BRACKET  shift, and go to state 183
    COMMA          shift, and go to state 184


State 164

   13 typedargslist: typedarg •

    $default  reduce using rule 13 (typedargslist)


State 165

   15 typedarg: tfpdef •
   16         | tfpdef • EQUAL test

    EQUAL  shift, and go to state 185

    $default  reduce using rule 15 (typedarg)


State 166

    9 funcdef: DEF NAME parameters ARROW_OPER • TYPE_HINT COLON func_body_suite

    TYPE_HINT  shift, and go to state 186


State 167

    8 funcdef: DEF NAME parameters COLON • func_body_suite

    NEWLINE        shift, and go to state 187
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 188
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    func_body_suite  go to state 189


State 168

  131 testlist_list: testlist_list COMMA test •

    $default  reduce using rule 131 (testlist_list)


State 169

   33 annassign: COLON test EQUAL • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 190
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 170

  140 argument: test EQUAL • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 191
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 171

  126 trailer: OPEN_BRACKET arglist CLOSE_BRACKET •

    $default  reduce using rule 126 (trailer)


State 172

  136 arglist: argument_list COMMA •
  138 argument_list: argument_list COMMA • argument

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 136 (arglist)

    test           go to state 147
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58
    argument       go to state 192


State 173

  127 trailer: SQUARE_OPEN test SQUARE_CLOSE •

    $default  reduce using rule 127 (trailer)


State 174

   48 if_stmt: IF test COLON M suite •
   49        | IF test COLON M suite • N ELSE COLON M suite
   50        | IF test COLON M suite • N nts_star

    ELSE      reduce using rule 2 (N)
    ELIF      reduce using rule 2 (N)
    $default  reduce using rule 48 (if_stmt)

    N  go to state 193


State 175

   51 while_stmt: WHILE M test COLON M • suite
   52           | WHILE M test COLON M • suite N ELSE COLON M suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 194
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 176

   53 for_stmt: FOR expr IN test COLON • suite
   54         | FOR expr IN test COLON • suite ELSE COLON suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 195
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 177

  133 classdef: CLASS NAME OPEN_BRACKET CLOSE_BRACKET COLON • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 196
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 178

  134 classdef: CLASS NAME OPEN_BRACKET arglist CLOSE_BRACKET • COLON suite

    COLON  shift, and go to state 197


State 179

   56 suite: NEWLINE INDENT • stmt_plus DEDENT
   57      | NEWLINE INDENT • stmt_plus NEWLINE DEDENT

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    funcdef          go to state 25
    stmt             go to state 198
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59
    stmt_plus        go to state 199


State 180

   18 tfpdef: NAME COLON • TYPE_HINT

    TYPE_HINT  shift, and go to state 200


State 181

   10 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER • TYPE_HINT COLON func_body_suite

    TYPE_HINT  shift, and go to state 201


State 182

   11 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET COLON • func_body_suite

    NEWLINE        shift, and go to state 187
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 188
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    func_body_suite  go to state 202


State 183

   12 parameters: OPEN_BRACKET typedargslist CLOSE_BRACKET •

    $default  reduce using rule 12 (parameters)


State 184

   14 typedargslist: typedargslist COMMA • typedarg

    NAME  shift, and go to state 161

    typedarg  go to state 203
    tfpdef    go to state 165


State 185

   16 typedarg: tfpdef EQUAL • test

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 204
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 186

    9 funcdef: DEF NAME parameters ARROW_OPER TYPE_HINT • COLON func_body_suite

    COLON  shift, and go to state 205


State 187

  142 func_body_suite: NEWLINE • INDENT stmt_plus DEDENT
  143                | NEWLINE • INDENT stmt_plus NEWLINE DEDENT

    INDENT  shift, and go to state 206


State 188

  141 func_body_suite: simple_stmt •

    $default  reduce using rule 141 (func_body_suite)


State 189

    8 funcdef: DEF NAME parameters COLON func_body_suite •

    $default  reduce using rule 8 (funcdef)


State 190

   33 annassign: COLON test EQUAL test •

    $default  reduce using rule 33 (annassign)


State 191

  140 argument: test EQUAL test •

    $default  reduce using rule 140 (argument)


State 192

  138 argument_list: argument_list COMMA argument •

    $default  reduce using rule 138 (argument_list)


State 193

   49 if_stmt: IF test COLON M suite N • ELSE COLON M suite
   50        | IF test COLON M suite N • nts_star

    ELSE  shift, and go to state 207
    ELIF  shift, and go to state 208

    nts_star  go to state 209


State 194

   51 while_stmt: WHILE M test COLON M suite •
   52           | WHILE M test COLON M suite • N ELSE COLON M suite

    ELSE      reduce using rule 2 (N)
    $default  reduce using rule 51 (while_stmt)

    N  go to state 210


State 195

   53 for_stmt: FOR expr IN test COLON suite •
   54         | FOR expr IN test COLON suite • ELSE COLON suite

    ELSE  shift, and go to state 211

    $default  reduce using rule 53 (for_stmt)


State 196

  133 classdef: CLASS NAME OPEN_BRACKET CLOSE_BRACKET COLON suite •

    $default  reduce using rule 133 (classdef)


State 197

  134 classdef: CLASS NAME OPEN_BRACKET arglist CLOSE_BRACKET COLON • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 212
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 198

  144 stmt_plus: stmt •
  145          | stmt • stmt_plus

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    $default  reduce using rule 144 (stmt_plus)

    funcdef          go to state 25
    stmt             go to state 198
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59
    stmt_plus        go to state 213


State 199

   56 suite: NEWLINE INDENT stmt_plus • DEDENT
   57      | NEWLINE INDENT stmt_plus • NEWLINE DEDENT

    NEWLINE  shift, and go to state 214
    DEDENT   shift, and go to state 215


State 200

   18 tfpdef: NAME COLON TYPE_HINT •

    $default  reduce using rule 18 (tfpdef)


State 201

   10 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT • COLON func_body_suite

    COLON  shift, and go to state 216


State 202

   11 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite •

    $default  reduce using rule 11 (funcdef)


State 203

   14 typedargslist: typedargslist COMMA typedarg •

    $default  reduce using rule 14 (typedargslist)


State 204

   16 typedarg: tfpdef EQUAL test •

    $default  reduce using rule 16 (typedarg)


State 205

    9 funcdef: DEF NAME parameters ARROW_OPER TYPE_HINT COLON • func_body_suite

    NEWLINE        shift, and go to state 187
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 188
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    func_body_suite  go to state 217


State 206

  142 func_body_suite: NEWLINE INDENT • stmt_plus DEDENT
  143                | NEWLINE INDENT • stmt_plus NEWLINE DEDENT

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    IF             shift, and go to state 4
    WHILE          shift, and go to state 5
    FOR            shift, and go to state 6
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    CLASS          shift, and go to state 11
    DEF            shift, and go to state 12
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    funcdef          go to state 25
    stmt             go to state 198
    simple_stmt      go to state 27
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    compound_stmt    go to state 36
    if_stmt          go to state 37
    while_stmt       go to state 38
    for_stmt         go to state 39
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    classdef         go to state 59
    stmt_plus        go to state 218


State 207

   49 if_stmt: IF test COLON M suite N ELSE • COLON M suite

    COLON  shift, and go to state 219


State 208

   58 nts_star: ELIF • test COLON M suite
   59         | ELIF • test COLON M suite N nts_star
   60         | ELIF • test COLON M suite N ELSE COLON M suite

    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    test           go to state 220
    or_test        go to state 41
    and_test_star  go to state 42
    and_test       go to state 43
    not_test_star  go to state 44
    not_test       go to state 45
    comparison     go to state 46
    expr           go to state 47
    xor_expr       go to state 48
    and_expr       go to state 49
    shift_expr     go to state 50
    arith_expr     go to state 51
    term           go to state 52
    factor         go to state 53
    factor_choice  go to state 54
    power          go to state 55
    atom_expr      go to state 56
    atom           go to state 57
    STRING_PLUS    go to state 58


State 209

   50 if_stmt: IF test COLON M suite N nts_star •

    $default  reduce using rule 50 (if_stmt)


State 210

   52 while_stmt: WHILE M test COLON M suite N • ELSE COLON M suite

    ELSE  shift, and go to state 221


State 211

   54 for_stmt: FOR expr IN test COLON suite ELSE • COLON suite

    COLON  shift, and go to state 222


State 212

  134 classdef: CLASS NAME OPEN_BRACKET arglist CLOSE_BRACKET COLON suite •

    $default  reduce using rule 134 (classdef)


State 213

  145 stmt_plus: stmt stmt_plus •

    $default  reduce using rule 145 (stmt_plus)


State 214

   57 suite: NEWLINE INDENT stmt_plus NEWLINE • DEDENT

    DEDENT  shift, and go to state 223


State 215

   56 suite: NEWLINE INDENT stmt_plus DEDENT •

    $default  reduce using rule 56 (suite)


State 216

   10 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON • func_body_suite

    NEWLINE        shift, and go to state 187
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 188
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58
    func_body_suite  go to state 224


State 217

    9 funcdef: DEF NAME parameters ARROW_OPER TYPE_HINT COLON func_body_suite •

    $default  reduce using rule 9 (funcdef)


State 218

  142 func_body_suite: NEWLINE INDENT stmt_plus • DEDENT
  143                | NEWLINE INDENT stmt_plus • NEWLINE DEDENT

    NEWLINE  shift, and go to state 225
    DEDENT   shift, and go to state 226


State 219

   49 if_stmt: IF test COLON M suite N ELSE COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 227


State 220

   58 nts_star: ELIF test • COLON M suite
   59         | ELIF test • COLON M suite N nts_star
   60         | ELIF test • COLON M suite N ELSE COLON M suite

    COLON  shift, and go to state 228


State 221

   52 while_stmt: WHILE M test COLON M suite N ELSE • COLON M suite

    COLON  shift, and go to state 229


State 222

   54 for_stmt: FOR expr IN test COLON suite ELSE COLON • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 230
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 223

   57 suite: NEWLINE INDENT stmt_plus NEWLINE DEDENT •

    $default  reduce using rule 57 (suite)


State 224

   10 funcdef: DEF NAME OPEN_BRACKET CLOSE_BRACKET ARROW_OPER TYPE_HINT COLON func_body_suite •

    $default  reduce using rule 10 (funcdef)


State 225

  143 func_body_suite: NEWLINE INDENT stmt_plus NEWLINE • DEDENT

    DEDENT  shift, and go to state 231


State 226

  142 func_body_suite: NEWLINE INDENT stmt_plus DEDENT •

    $default  reduce using rule 142 (func_body_suite)


State 227

   49 if_stmt: IF test COLON M suite N ELSE COLON M • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 232
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 228

   58 nts_star: ELIF test COLON • M suite
   59         | ELIF test COLON • M suite N nts_star
   60         | ELIF test COLON • M suite N ELSE COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 233


State 229

   52 while_stmt: WHILE M test COLON M suite N ELSE COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 234


State 230

   54 for_stmt: FOR expr IN test COLON suite ELSE COLON suite •

    $default  reduce using rule 54 (for_stmt)


State 231

  143 func_body_suite: NEWLINE INDENT stmt_plus NEWLINE DEDENT •

    $default  reduce using rule 143 (func_body_suite)


State 232

   49 if_stmt: IF test COLON M suite N ELSE COLON M suite •

    $default  reduce using rule 49 (if_stmt)


State 233

   58 nts_star: ELIF test COLON M • suite
   59         | ELIF test COLON M • suite N nts_star
   60         | ELIF test COLON M • suite N ELSE COLON M suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 235
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 234

   52 while_stmt: WHILE M test COLON M suite N ELSE COLON M • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 236
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 235

   58 nts_star: ELIF test COLON M suite •
   59         | ELIF test COLON M suite • N nts_star
   60         | ELIF test COLON M suite • N ELSE COLON M suite

    ELSE      reduce using rule 2 (N)
    ELIF      reduce using rule 2 (N)
    $default  reduce using rule 58 (nts_star)

    N  go to state 237


State 236

   52 while_stmt: WHILE M test COLON M suite N ELSE COLON M suite •

    $default  reduce using rule 52 (while_stmt)


State 237

   59 nts_star: ELIF test COLON M suite N • nts_star
   60         | ELIF test COLON M suite N • ELSE COLON M suite

    ELSE  shift, and go to state 238
    ELIF  shift, and go to state 208

    nts_star  go to state 239


State 238

   60 nts_star: ELIF test COLON M suite N ELSE • COLON M suite

    COLON  shift, and go to state 240


State 239

   59 nts_star: ELIF test COLON M suite N nts_star •

    $default  reduce using rule 59 (nts_star)


State 240

   60 nts_star: ELIF test COLON M suite N ELSE COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 241


State 241

   60 nts_star: ELIF test COLON M suite N ELSE COLON M • suite

    NEWLINE        shift, and go to state 158
    TYPE_HINT      shift, and go to state 2
    NAME           shift, and go to state 3
    NOT            shift, and go to state 7
    BREAK          shift, and go to state 8
    CONTINUE       shift, and go to state 9
    RETURN         shift, and go to state 10
    GLOBAL         shift, and go to state 13
    ATOM_KEYWORDS  shift, and go to state 14
    STRING         shift, and go to state 15
    NUMBER         shift, and go to state 16
    OPEN_BRACKET   shift, and go to state 17
    PLUS           shift, and go to state 18
    MINUS          shift, and go to state 19
    NEGATION       shift, and go to state 20
    CURLY_OPEN     shift, and go to state 21
    SQUARE_OPEN    shift, and go to state 22

    simple_stmt      go to state 159
    small_stmt_list  go to state 28
    small_stmt       go to state 29
    expr_stmt        go to state 30
    flow_stmt        go to state 31
    break_stmt       go to state 32
    continue_stmt    go to state 33
    return_stmt      go to state 34
    global_stmt      go to state 35
    suite            go to state 242
    test             go to state 40
    or_test          go to state 41
    and_test_star    go to state 42
    and_test         go to state 43
    not_test_star    go to state 44
    not_test         go to state 45
    comparison       go to state 46
    expr             go to state 47
    xor_expr         go to state 48
    and_expr         go to state 49
    shift_expr       go to state 50
    arith_expr       go to state 51
    term             go to state 52
    factor           go to state 53
    factor_choice    go to state 54
    power            go to state 55
    atom_expr        go to state 56
    atom             go to state 57
    STRING_PLUS      go to state 58


State 242

   60 nts_star: ELIF test COLON M suite N ELSE COLON M suite •

    $default  reduce using rule 60 (nts_star)
