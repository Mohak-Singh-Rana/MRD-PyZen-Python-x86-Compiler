Grammar

    0 $accept: file $end

    1 M: ε

    2 N: ε

    3 file: snippet

    4 snippet: NEWLINE
    5        | stmt
    6        | NEWLINE snippet
    7        | stmt snippet

    8 funcdef: DEF func_name parameters COLON func_body_suite
    9        | DEF func_name parameters ARROW_OPER func_ret_type COLON func_body_suite
   10        | DEF func_name OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite
   11        | DEF func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type COLON func_body_suite

   12 func_name: NAME

   13 func_ret_type: TYPE_HINT

   14 parameters: OPEN_BRACKET typedargslist CLOSE_BRACKET

   15 typedargslist: typedarg
   16              | typedargslist COMMA typedarg

   17 typedarg: tfpdef
   18         | tfpdef EQUAL test

   19 tfpdef: NAME
   20       | NAME COLON TYPE_HINT

   21 stmt: simple_stmt
   22     | compound_stmt

   23 simple_stmt: small_stmt_list SEMI_COLON NEWLINE
   24            | small_stmt_list NEWLINE

   25 small_stmt_list: small_stmt
   26                | small_stmt_list SEMI_COLON small_stmt

   27 small_stmt: expr_stmt
   28           | flow_stmt
   29           | global_stmt

   30 expr_stmt: test ASSIGN_OPERATOR test
   31          | test COLON TYPE_HINT ASSIGN_OPERATOR test
   32          | testlist
   33          | test EQUAL eq_testlist_star_expr_plus
   34          | test COLON TYPE_HINT EQUAL eq_testlist_star_expr_plus

   35 eq_testlist_star_expr_plus: test
   36                           | test EQUAL eq_testlist_star_expr_plus

   37 flow_stmt: break_stmt
   38          | continue_stmt
   39          | return_stmt

   40 break_stmt: BREAK

   41 continue_stmt: CONTINUE

   42 return_stmt: RETURN
   43            | RETURN test

   44 global_stmt: GLOBAL NAME
   45            | GLOBAL NAME comma_name_star

   46 comma_name_star: COMMA NAME
   47                | COMMA NAME comma_name_star

   48 compound_stmt: if_stmt
   49              | while_stmt
   50              | for_stmt
   51              | funcdef
   52              | classdef

   53 if_stmt: if_scope test COLON M suite
   54        | if_scope test COLON M suite N else_scope COLON M suite
   55        | if_scope test COLON M suite N nts_star

   56 if_scope: IF

   57 else_scope: ELSE

   58 else_if_scope: ELIF

   59 nts_star: else_if_scope test COLON M suite
   60         | else_if_scope test COLON M suite N nts_star
   61         | else_if_scope test COLON M suite N else_scope COLON M suite

   62 while_stmt: while_scope M while_expr COLON M suite
   63           | while_scope M while_expr COLON M suite N else_scope COLON M suite

   64 while_scope: WHILE

   65 while_expr: test

   66 for_stmt: for_scope for_core COLON M suite
   67         | for_scope for_core COLON M suite N ELSE COLON M suite

   68 for_core: expr IN range_stmt

   69 for_scope: FOR

   70 range_stmt: RANGE OPEN_BRACKET for_test CLOSE_BRACKET
   71           | RANGE OPEN_BRACKET for_test COMMA test CLOSE_BRACKET

   72 for_test: test

   73 suite: simple_stmt
   74      | NEWLINE INDENT stmt_plus DEDENT
   75      | NEWLINE INDENT stmt_plus NEWLINE DEDENT

   76 test: or_test

   77 or_test: and_test
   78        | and_test_star OR M and_test

   79 and_test_star: and_test_star OR M and_test
   80              | and_test

   81 and_test: not_test
   82         | not_test_star AND M not_test

   83 not_test_star: not_test_star AND M not_test
   84              | not_test

   85 not_test: NOT not_test
   86         | comparison

   87 comparison: expr
   88           | expr comp_op comparison

   89 comp_op: LESS_THAN
   90        | GREATER_THAN
   91        | EQUAL_EQUAL
   92        | GREATER_THAN_EQUAL
   93        | LESS_THAN_EQUAL
   94        | NOT_EQUAL_ARROW
   95        | NOT_EQUAL
   96        | IN
   97        | NOT IN
   98        | IS
   99        | IS NOT

  100 expr: xor_expr
  101     | xor_expr BIT_OR expr

  102 xor_expr: and_expr
  103         | and_expr BIT_XOR xor_expr

  104 and_expr: shift_expr
  105         | shift_expr BIT_AND and_expr

  106 shift_expr: arith_expr
  107           | arith_expr SHIFT_OPER shift_expr

  108 arith_expr: term
  109           | arith_expr PLUS term
  110           | arith_expr MINUS term

  111 term: factor
  112     | term term_choice factor

  113 term_choice: MULTIPLY
  114            | ATTHERATE
  115            | DIVIDE
  116            | REMAINDER
  117            | FLOOR_DIV_OPER

  118 factor: factor_choice factor
  119       | power

  120 factor_choice: PLUS
  121              | MINUS
  122              | NEGATION

  123 power: atom_expr
  124      | atom_expr POWER_OPERATOR factor

  125 atom_expr: atom
  126          | atom_expr trailer
  127          | atom_expr DOT NAME

  128 atom: OPEN_BRACKET testlist CLOSE_BRACKET
  129     | OPEN_BRACKET CLOSE_BRACKET
  130     | SQUARE_OPEN testlist SQUARE_CLOSE
  131     | SQUARE_OPEN SQUARE_CLOSE
  132     | CURLY_OPEN CURLY_CLOSE
  133     | NAME
  134     | NUMBER
  135     | STRING_PLUS
  136     | ATOM_KEYWORDS

  137 STRING_PLUS: STRING
  138            | STRING STRING_PLUS

  139 trailer: OPEN_BRACKET CLOSE_BRACKET
  140        | OPEN_BRACKET arglist CLOSE_BRACKET
  141        | SQUARE_OPEN test SQUARE_CLOSE

  142 testlist: testlist_list
  143         | testlist_list COMMA

  144 testlist_list: test
  145              | test COLON TYPE_HINT
  146              | testlist_list COMMA test
  147              | testlist_list COMMA test COLON TYPE_HINT

  148 classdef: CLASS class_name COLON suite
  149         | CLASS class_name OPEN_BRACKET CLOSE_BRACKET COLON suite
  150         | CLASS class_name OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

  151 class_name: NAME

  152 arglist: argument_list
  153        | argument_list COMMA

  154 argument_list: argument
  155              | argument_list COMMA argument

  156 argument: test
  157         | test EQUAL test

  158 func_body_suite: simple_stmt
  159                | NEWLINE INDENT stmt_plus DEDENT
  160                | NEWLINE INDENT stmt_plus NEWLINE DEDENT

  161 stmt_plus: stmt
  162          | stmt stmt_plus


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    RANGE <elem> (258) 70 71
    NEWLINE <elem> (259) 4 6 23 24 74 75 159 160
    INDENT <elem> (260) 74 75 159 160
    DEDENT <elem> (261) 74 75 159 160
    ASSIGN_OPERATOR <elem> (262) 30 31
    POWER_OPERATOR <elem> (263) 124
    SHIFT_OPER <elem> (264) 107
    FLOOR_DIV_OPER <elem> (265) 117
    ARROW_OPER <elem> (266) 9 11
    TYPE_HINT <elem> (267) 13 20 31 34 145 147
    NAME <elem> (268) 12 19 20 44 45 46 47 127 133 151
    IF <elem> (269) 56
    ELSE <elem> (270) 57 67
    ELIF <elem> (271) 58
    WHILE <elem> (272) 64
    FOR <elem> (273) 69
    IN <elem> (274) 68 96 97
    AND <elem> (275) 82 83
    OR <elem> (276) 78 79
    NOT <elem> (277) 85 97 99
    BREAK <elem> (278) 40
    CONTINUE <elem> (279) 41
    RETURN <elem> (280) 42 43
    CLASS <elem> (281) 148 149 150
    DEF <elem> (282) 8 9 10 11
    GLOBAL <elem> (283) 44 45
    ATOM_KEYWORDS <elem> (284) 136
    STRING <elem> (285) 137 138
    NUMBER <elem> (286) 134
    OPEN_BRACKET <elem> (287) 10 11 14 70 71 128 129 139 140 149 150
    CLOSE_BRACKET <elem> (288) 10 11 14 70 71 128 129 139 140 149 150
    EQUAL <elem> (289) 18 33 34 36 157
    SEMI_COLON <elem> (290) 23 26
    COLON <elem> (291) 8 9 10 11 20 31 34 53 54 55 59 60 61 62 63 66 67 145 147 148 149 150
    COMMA <elem> (292) 16 46 47 71 143 146 147 153 155
    PLUS <elem> (293) 109 120
    MINUS <elem> (294) 110 121
    MULTIPLY <elem> (295) 113
    DIVIDE <elem> (296) 115
    REMAINDER <elem> (297) 116
    ATTHERATE <elem> (298) 114
    NEGATION <elem> (299) 122
    BIT_AND <elem> (300) 105
    BIT_OR <elem> (301) 101
    BIT_XOR <elem> (302) 103
    DOT <elem> (303) 127
    CURLY_OPEN <elem> (304) 132
    CURLY_CLOSE <elem> (305) 132
    SQUARE_OPEN <elem> (306) 130 131 141
    SQUARE_CLOSE <elem> (307) 130 131 141
    LESS_THAN <elem> (308) 89
    GREATER_THAN <elem> (309) 90
    EQUAL_EQUAL <elem> (310) 91
    GREATER_THAN_EQUAL <elem> (311) 92
    LESS_THAN_EQUAL <elem> (312) 93
    NOT_EQUAL_ARROW <elem> (313) 94
    NOT_EQUAL <elem> (314) 95
    IS <elem> (315) 98 99


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    M <elem> (62)
        on left: 1
        on right: 53 54 55 59 60 61 62 63 66 67 78 79 82 83
    N <elem> (63)
        on left: 2
        on right: 54 55 60 61 63 67
    file <elem> (64)
        on left: 3
        on right: 0
    snippet <elem> (65)
        on left: 4 5 6 7
        on right: 3 6 7
    funcdef <elem> (66)
        on left: 8 9 10 11
        on right: 51
    func_name <elem> (67)
        on left: 12
        on right: 8 9 10 11
    func_ret_type <elem> (68)
        on left: 13
        on right: 9 11
    parameters <elem> (69)
        on left: 14
        on right: 8 9
    typedargslist <elem> (70)
        on left: 15 16
        on right: 14 16
    typedarg <elem> (71)
        on left: 17 18
        on right: 15 16
    tfpdef <elem> (72)
        on left: 19 20
        on right: 17 18
    stmt <elem> (73)
        on left: 21 22
        on right: 5 7 161 162
    simple_stmt <elem> (74)
        on left: 23 24
        on right: 21 73 158
    small_stmt_list <elem> (75)
        on left: 25 26
        on right: 23 24 26
    small_stmt <elem> (76)
        on left: 27 28 29
        on right: 25 26
    expr_stmt <elem> (77)
        on left: 30 31 32 33 34
        on right: 27
    eq_testlist_star_expr_plus <elem> (78)
        on left: 35 36
        on right: 33 34 36
    flow_stmt <elem> (79)
        on left: 37 38 39
        on right: 28
    break_stmt <elem> (80)
        on left: 40
        on right: 37
    continue_stmt <elem> (81)
        on left: 41
        on right: 38
    return_stmt <elem> (82)
        on left: 42 43
        on right: 39
    global_stmt <elem> (83)
        on left: 44 45
        on right: 29
    comma_name_star <elem> (84)
        on left: 46 47
        on right: 45 47
    compound_stmt <elem> (85)
        on left: 48 49 50 51 52
        on right: 22
    if_stmt <elem> (86)
        on left: 53 54 55
        on right: 48
    if_scope <elem> (87)
        on left: 56
        on right: 53 54 55
    else_scope <elem> (88)
        on left: 57
        on right: 54 61 63
    else_if_scope <elem> (89)
        on left: 58
        on right: 59 60 61
    nts_star <elem> (90)
        on left: 59 60 61
        on right: 55 60
    while_stmt <elem> (91)
        on left: 62 63
        on right: 49
    while_scope <elem> (92)
        on left: 64
        on right: 62 63
    while_expr <elem> (93)
        on left: 65
        on right: 62 63
    for_stmt <elem> (94)
        on left: 66 67
        on right: 50
    for_core <elem> (95)
        on left: 68
        on right: 66 67
    for_scope <elem> (96)
        on left: 69
        on right: 66 67
    range_stmt <elem> (97)
        on left: 70 71
        on right: 68
    for_test <elem> (98)
        on left: 72
        on right: 70 71
    suite <elem> (99)
        on left: 73 74 75
        on right: 53 54 55 59 60 61 62 63 66 67 148 149 150
    test <elem> (100)
        on left: 76
        on right: 18 30 31 33 34 35 36 43 53 54 55 59 60 61 65 71 72 141 144 145 146 147 156 157
    or_test <elem> (101)
        on left: 77 78
        on right: 76
    and_test_star <elem> (102)
        on left: 79 80
        on right: 78 79
    and_test <elem> (103)
        on left: 81 82
        on right: 77 78 79 80
    not_test_star <elem> (104)
        on left: 83 84
        on right: 82 83
    not_test <elem> (105)
        on left: 85 86
        on right: 81 82 83 84 85
    comparison <elem> (106)
        on left: 87 88
        on right: 86 88
    comp_op <elem> (107)
        on left: 89 90 91 92 93 94 95 96 97 98 99
        on right: 88
    expr <elem> (108)
        on left: 100 101
        on right: 68 87 88 101
    xor_expr <elem> (109)
        on left: 102 103
        on right: 100 101 103
    and_expr <elem> (110)
        on left: 104 105
        on right: 102 103 105
    shift_expr <elem> (111)
        on left: 106 107
        on right: 104 105 107
    arith_expr <elem> (112)
        on left: 108 109 110
        on right: 106 107 109 110
    term <elem> (113)
        on left: 111 112
        on right: 108 109 110 112
    term_choice <elem> (114)
        on left: 113 114 115 116 117
        on right: 112
    factor <elem> (115)
        on left: 118 119
        on right: 111 112 118 124
    factor_choice <elem> (116)
        on left: 120 121 122
        on right: 118
    power <elem> (117)
        on left: 123 124
        on right: 119
    atom_expr <elem> (118)
        on left: 125 126 127
        on right: 123 124 126 127
    atom <elem> (119)
        on left: 128 129 130 131 132 133 134 135 136
        on right: 125
    STRING_PLUS <elem> (120)
        on left: 137 138
        on right: 135 138
    trailer <elem> (121)
        on left: 139 140 141
        on right: 126
    testlist <elem> (122)
        on left: 142 143
        on right: 32 128 130
    testlist_list <elem> (123)
        on left: 144 145 146 147
        on right: 142 143 146 147
    classdef <elem> (124)
        on left: 148 149 150
        on right: 52
    class_name <elem> (125)
        on left: 151
        on right: 148 149 150
    arglist <elem> (126)
        on left: 152 153
        on right: 140 150
    argument_list <elem> (127)
        on left: 154 155
        on right: 152 153 155
    argument <elem> (128)
        on left: 156 157
        on right: 154 155
    func_body_suite <elem> (129)
        on left: 158 159 160
        on right: 8 9 10 11
    stmt_plus <elem> (130)
        on left: 161 162
        on right: 74 75 159 160 162


State 0

    0 $accept: • file $end

    NEWLINE        shift, and go to state 1
    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    file             go to state 22
    snippet          go to state 23
    funcdef          go to state 24
    stmt             go to state 25
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63


State 1

    4 snippet: NEWLINE •
    6        | NEWLINE • snippet

    NEWLINE        shift, and go to state 1
    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 4 (snippet)

    snippet          go to state 64
    funcdef          go to state 24
    stmt             go to state 25
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63


State 2

  133 atom: NAME •

    $default  reduce using rule 133 (atom)


State 3

   56 if_scope: IF •

    $default  reduce using rule 56 (if_scope)


State 4

   64 while_scope: WHILE •

    $default  reduce using rule 64 (while_scope)


State 5

   69 for_scope: FOR •

    $default  reduce using rule 69 (for_scope)


State 6

   85 not_test: NOT • not_test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    not_test       go to state 65
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 7

   40 break_stmt: BREAK •

    $default  reduce using rule 40 (break_stmt)


State 8

   41 continue_stmt: CONTINUE •

    $default  reduce using rule 41 (continue_stmt)


State 9

   42 return_stmt: RETURN •
   43            | RETURN • test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 42 (return_stmt)

    test           go to state 66
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 10

  148 classdef: CLASS • class_name COLON suite
  149         | CLASS • class_name OPEN_BRACKET CLOSE_BRACKET COLON suite
  150         | CLASS • class_name OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

    NAME  shift, and go to state 67

    class_name  go to state 68


State 11

    8 funcdef: DEF • func_name parameters COLON func_body_suite
    9        | DEF • func_name parameters ARROW_OPER func_ret_type COLON func_body_suite
   10        | DEF • func_name OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite
   11        | DEF • func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type COLON func_body_suite

    NAME  shift, and go to state 69

    func_name  go to state 70


State 12

   44 global_stmt: GLOBAL • NAME
   45            | GLOBAL • NAME comma_name_star

    NAME  shift, and go to state 71


State 13

  136 atom: ATOM_KEYWORDS •

    $default  reduce using rule 136 (atom)


State 14

  137 STRING_PLUS: STRING •
  138            | STRING • STRING_PLUS

    STRING  shift, and go to state 14

    $default  reduce using rule 137 (STRING_PLUS)

    STRING_PLUS  go to state 72


State 15

  134 atom: NUMBER •

    $default  reduce using rule 134 (atom)


State 16

  128 atom: OPEN_BRACKET • testlist CLOSE_BRACKET
  129     | OPEN_BRACKET • CLOSE_BRACKET

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    CLOSE_BRACKET  shift, and go to state 73
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 74
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    testlist       go to state 75
    testlist_list  go to state 62


State 17

  120 factor_choice: PLUS •

    $default  reduce using rule 120 (factor_choice)


State 18

  121 factor_choice: MINUS •

    $default  reduce using rule 121 (factor_choice)


State 19

  122 factor_choice: NEGATION •

    $default  reduce using rule 122 (factor_choice)


State 20

  132 atom: CURLY_OPEN • CURLY_CLOSE

    CURLY_CLOSE  shift, and go to state 76


State 21

  130 atom: SQUARE_OPEN • testlist SQUARE_CLOSE
  131     | SQUARE_OPEN • SQUARE_CLOSE

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21
    SQUARE_CLOSE   shift, and go to state 77

    test           go to state 74
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    testlist       go to state 78
    testlist_list  go to state 62


State 22

    0 $accept: file • $end

    $end  shift, and go to state 79


State 23

    3 file: snippet •

    $default  reduce using rule 3 (file)


State 24

   51 compound_stmt: funcdef •

    $default  reduce using rule 51 (compound_stmt)


State 25

    5 snippet: stmt •
    7        | stmt • snippet

    NEWLINE        shift, and go to state 1
    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 5 (snippet)

    snippet          go to state 80
    funcdef          go to state 24
    stmt             go to state 25
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63


State 26

   21 stmt: simple_stmt •

    $default  reduce using rule 21 (stmt)


State 27

   23 simple_stmt: small_stmt_list • SEMI_COLON NEWLINE
   24            | small_stmt_list • NEWLINE
   26 small_stmt_list: small_stmt_list • SEMI_COLON small_stmt

    NEWLINE     shift, and go to state 81
    SEMI_COLON  shift, and go to state 82


State 28

   25 small_stmt_list: small_stmt •

    $default  reduce using rule 25 (small_stmt_list)


State 29

   27 small_stmt: expr_stmt •

    $default  reduce using rule 27 (small_stmt)


State 30

   28 small_stmt: flow_stmt •

    $default  reduce using rule 28 (small_stmt)


State 31

   37 flow_stmt: break_stmt •

    $default  reduce using rule 37 (flow_stmt)


State 32

   38 flow_stmt: continue_stmt •

    $default  reduce using rule 38 (flow_stmt)


State 33

   39 flow_stmt: return_stmt •

    $default  reduce using rule 39 (flow_stmt)


State 34

   29 small_stmt: global_stmt •

    $default  reduce using rule 29 (small_stmt)


State 35

   22 stmt: compound_stmt •

    $default  reduce using rule 22 (stmt)


State 36

   48 compound_stmt: if_stmt •

    $default  reduce using rule 48 (compound_stmt)


State 37

   53 if_stmt: if_scope • test COLON M suite
   54        | if_scope • test COLON M suite N else_scope COLON M suite
   55        | if_scope • test COLON M suite N nts_star

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 83
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 38

   49 compound_stmt: while_stmt •

    $default  reduce using rule 49 (compound_stmt)


State 39

   62 while_stmt: while_scope • M while_expr COLON M suite
   63           | while_scope • M while_expr COLON M suite N else_scope COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 84


State 40

   50 compound_stmt: for_stmt •

    $default  reduce using rule 50 (compound_stmt)


State 41

   66 for_stmt: for_scope • for_core COLON M suite
   67         | for_scope • for_core COLON M suite N ELSE COLON M suite

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    for_core       go to state 85
    expr           go to state 86
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 42

   30 expr_stmt: test • ASSIGN_OPERATOR test
   31          | test • COLON TYPE_HINT ASSIGN_OPERATOR test
   33          | test • EQUAL eq_testlist_star_expr_plus
   34          | test • COLON TYPE_HINT EQUAL eq_testlist_star_expr_plus
  144 testlist_list: test •
  145              | test • COLON TYPE_HINT

    ASSIGN_OPERATOR  shift, and go to state 87
    EQUAL            shift, and go to state 88
    COLON            shift, and go to state 89

    $default  reduce using rule 144 (testlist_list)


State 43

   76 test: or_test •

    $default  reduce using rule 76 (test)


State 44

   78 or_test: and_test_star • OR M and_test
   79 and_test_star: and_test_star • OR M and_test

    OR  shift, and go to state 90


State 45

   77 or_test: and_test •
   80 and_test_star: and_test •

    OR        reduce using rule 80 (and_test_star)
    $default  reduce using rule 77 (or_test)


State 46

   82 and_test: not_test_star • AND M not_test
   83 not_test_star: not_test_star • AND M not_test

    AND  shift, and go to state 91


State 47

   81 and_test: not_test •
   84 not_test_star: not_test •

    AND       reduce using rule 84 (not_test_star)
    $default  reduce using rule 81 (and_test)


State 48

   86 not_test: comparison •

    $default  reduce using rule 86 (not_test)


State 49

   87 comparison: expr •
   88           | expr • comp_op comparison

    IN                  shift, and go to state 92
    NOT                 shift, and go to state 93
    LESS_THAN           shift, and go to state 94
    GREATER_THAN        shift, and go to state 95
    EQUAL_EQUAL         shift, and go to state 96
    GREATER_THAN_EQUAL  shift, and go to state 97
    LESS_THAN_EQUAL     shift, and go to state 98
    NOT_EQUAL_ARROW     shift, and go to state 99
    NOT_EQUAL           shift, and go to state 100
    IS                  shift, and go to state 101

    $default  reduce using rule 87 (comparison)

    comp_op  go to state 102


State 50

  100 expr: xor_expr •
  101     | xor_expr • BIT_OR expr

    BIT_OR  shift, and go to state 103

    $default  reduce using rule 100 (expr)


State 51

  102 xor_expr: and_expr •
  103         | and_expr • BIT_XOR xor_expr

    BIT_XOR  shift, and go to state 104

    $default  reduce using rule 102 (xor_expr)


State 52

  104 and_expr: shift_expr •
  105         | shift_expr • BIT_AND and_expr

    BIT_AND  shift, and go to state 105

    $default  reduce using rule 104 (and_expr)


State 53

  106 shift_expr: arith_expr •
  107           | arith_expr • SHIFT_OPER shift_expr
  109 arith_expr: arith_expr • PLUS term
  110           | arith_expr • MINUS term

    SHIFT_OPER  shift, and go to state 106
    PLUS        shift, and go to state 107
    MINUS       shift, and go to state 108

    $default  reduce using rule 106 (shift_expr)


State 54

  108 arith_expr: term •
  112 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 109
    MULTIPLY        shift, and go to state 110
    DIVIDE          shift, and go to state 111
    REMAINDER       shift, and go to state 112
    ATTHERATE       shift, and go to state 113

    $default  reduce using rule 108 (arith_expr)

    term_choice  go to state 114


State 55

  111 term: factor •

    $default  reduce using rule 111 (term)


State 56

  118 factor: factor_choice • factor

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    factor         go to state 115
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 57

  119 factor: power •

    $default  reduce using rule 119 (factor)


State 58

  123 power: atom_expr •
  124      | atom_expr • POWER_OPERATOR factor
  126 atom_expr: atom_expr • trailer
  127          | atom_expr • DOT NAME

    POWER_OPERATOR  shift, and go to state 116
    OPEN_BRACKET    shift, and go to state 117
    DOT             shift, and go to state 118
    SQUARE_OPEN     shift, and go to state 119

    $default  reduce using rule 123 (power)

    trailer  go to state 120


State 59

  125 atom_expr: atom •

    $default  reduce using rule 125 (atom_expr)


State 60

  135 atom: STRING_PLUS •

    $default  reduce using rule 135 (atom)


State 61

   32 expr_stmt: testlist •

    $default  reduce using rule 32 (expr_stmt)


State 62

  142 testlist: testlist_list •
  143         | testlist_list • COMMA
  146 testlist_list: testlist_list • COMMA test
  147              | testlist_list • COMMA test COLON TYPE_HINT

    COMMA  shift, and go to state 121

    $default  reduce using rule 142 (testlist)


State 63

   52 compound_stmt: classdef •

    $default  reduce using rule 52 (compound_stmt)


State 64

    6 snippet: NEWLINE snippet •

    $default  reduce using rule 6 (snippet)


State 65

   85 not_test: NOT not_test •

    $default  reduce using rule 85 (not_test)


State 66

   43 return_stmt: RETURN test •

    $default  reduce using rule 43 (return_stmt)


State 67

  151 class_name: NAME •

    $default  reduce using rule 151 (class_name)


State 68

  148 classdef: CLASS class_name • COLON suite
  149         | CLASS class_name • OPEN_BRACKET CLOSE_BRACKET COLON suite
  150         | CLASS class_name • OPEN_BRACKET arglist CLOSE_BRACKET COLON suite

    OPEN_BRACKET  shift, and go to state 122
    COLON         shift, and go to state 123


State 69

   12 func_name: NAME •

    $default  reduce using rule 12 (func_name)


State 70

    8 funcdef: DEF func_name • parameters COLON func_body_suite
    9        | DEF func_name • parameters ARROW_OPER func_ret_type COLON func_body_suite
   10        | DEF func_name • OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite
   11        | DEF func_name • OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type COLON func_body_suite

    OPEN_BRACKET  shift, and go to state 124

    parameters  go to state 125


State 71

   44 global_stmt: GLOBAL NAME •
   45            | GLOBAL NAME • comma_name_star

    COMMA  shift, and go to state 126

    $default  reduce using rule 44 (global_stmt)

    comma_name_star  go to state 127


State 72

  138 STRING_PLUS: STRING STRING_PLUS •

    $default  reduce using rule 138 (STRING_PLUS)


State 73

  129 atom: OPEN_BRACKET CLOSE_BRACKET •

    $default  reduce using rule 129 (atom)


State 74

  144 testlist_list: test •
  145              | test • COLON TYPE_HINT

    COLON  shift, and go to state 128

    $default  reduce using rule 144 (testlist_list)


State 75

  128 atom: OPEN_BRACKET testlist • CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 129


State 76

  132 atom: CURLY_OPEN CURLY_CLOSE •

    $default  reduce using rule 132 (atom)


State 77

  131 atom: SQUARE_OPEN SQUARE_CLOSE •

    $default  reduce using rule 131 (atom)


State 78

  130 atom: SQUARE_OPEN testlist • SQUARE_CLOSE

    SQUARE_CLOSE  shift, and go to state 130


State 79

    0 $accept: file $end •

    $default  accept


State 80

    7 snippet: stmt snippet •

    $default  reduce using rule 7 (snippet)


State 81

   24 simple_stmt: small_stmt_list NEWLINE •

    $default  reduce using rule 24 (simple_stmt)


State 82

   23 simple_stmt: small_stmt_list SEMI_COLON • NEWLINE
   26 small_stmt_list: small_stmt_list SEMI_COLON • small_stmt

    NEWLINE        shift, and go to state 131
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    small_stmt     go to state 132
    expr_stmt      go to state 29
    flow_stmt      go to state 30
    break_stmt     go to state 31
    continue_stmt  go to state 32
    return_stmt    go to state 33
    global_stmt    go to state 34
    test           go to state 42
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    testlist       go to state 61
    testlist_list  go to state 62


State 83

   53 if_stmt: if_scope test • COLON M suite
   54        | if_scope test • COLON M suite N else_scope COLON M suite
   55        | if_scope test • COLON M suite N nts_star

    COLON  shift, and go to state 133


State 84

   62 while_stmt: while_scope M • while_expr COLON M suite
   63           | while_scope M • while_expr COLON M suite N else_scope COLON M suite

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    while_expr     go to state 134
    test           go to state 135
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 85

   66 for_stmt: for_scope for_core • COLON M suite
   67         | for_scope for_core • COLON M suite N ELSE COLON M suite

    COLON  shift, and go to state 136


State 86

   68 for_core: expr • IN range_stmt

    IN  shift, and go to state 137


State 87

   30 expr_stmt: test ASSIGN_OPERATOR • test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 138
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 88

   33 expr_stmt: test EQUAL • eq_testlist_star_expr_plus

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    eq_testlist_star_expr_plus  go to state 139
    test                        go to state 140
    or_test                     go to state 43
    and_test_star               go to state 44
    and_test                    go to state 45
    not_test_star               go to state 46
    not_test                    go to state 47
    comparison                  go to state 48
    expr                        go to state 49
    xor_expr                    go to state 50
    and_expr                    go to state 51
    shift_expr                  go to state 52
    arith_expr                  go to state 53
    term                        go to state 54
    factor                      go to state 55
    factor_choice               go to state 56
    power                       go to state 57
    atom_expr                   go to state 58
    atom                        go to state 59
    STRING_PLUS                 go to state 60


State 89

   31 expr_stmt: test COLON • TYPE_HINT ASSIGN_OPERATOR test
   34          | test COLON • TYPE_HINT EQUAL eq_testlist_star_expr_plus
  145 testlist_list: test COLON • TYPE_HINT

    TYPE_HINT  shift, and go to state 141


State 90

   78 or_test: and_test_star OR • M and_test
   79 and_test_star: and_test_star OR • M and_test

    $default  reduce using rule 1 (M)

    M  go to state 142


State 91

   82 and_test: not_test_star AND • M not_test
   83 not_test_star: not_test_star AND • M not_test

    $default  reduce using rule 1 (M)

    M  go to state 143


State 92

   96 comp_op: IN •

    $default  reduce using rule 96 (comp_op)


State 93

   97 comp_op: NOT • IN

    IN  shift, and go to state 144


State 94

   89 comp_op: LESS_THAN •

    $default  reduce using rule 89 (comp_op)


State 95

   90 comp_op: GREATER_THAN •

    $default  reduce using rule 90 (comp_op)


State 96

   91 comp_op: EQUAL_EQUAL •

    $default  reduce using rule 91 (comp_op)


State 97

   92 comp_op: GREATER_THAN_EQUAL •

    $default  reduce using rule 92 (comp_op)


State 98

   93 comp_op: LESS_THAN_EQUAL •

    $default  reduce using rule 93 (comp_op)


State 99

   94 comp_op: NOT_EQUAL_ARROW •

    $default  reduce using rule 94 (comp_op)


State 100

   95 comp_op: NOT_EQUAL •

    $default  reduce using rule 95 (comp_op)


State 101

   98 comp_op: IS •
   99        | IS • NOT

    NOT  shift, and go to state 145

    $default  reduce using rule 98 (comp_op)


State 102

   88 comparison: expr comp_op • comparison

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    comparison     go to state 146
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 103

  101 expr: xor_expr BIT_OR • expr

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    expr           go to state 147
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 104

  103 xor_expr: and_expr BIT_XOR • xor_expr

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    xor_expr       go to state 148
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 105

  105 and_expr: shift_expr BIT_AND • and_expr

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    and_expr       go to state 149
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 106

  107 shift_expr: arith_expr SHIFT_OPER • shift_expr

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    shift_expr     go to state 150
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 107

  109 arith_expr: arith_expr PLUS • term

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    term           go to state 151
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 108

  110 arith_expr: arith_expr MINUS • term

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    term           go to state 152
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 109

  117 term_choice: FLOOR_DIV_OPER •

    $default  reduce using rule 117 (term_choice)


State 110

  113 term_choice: MULTIPLY •

    $default  reduce using rule 113 (term_choice)


State 111

  115 term_choice: DIVIDE •

    $default  reduce using rule 115 (term_choice)


State 112

  116 term_choice: REMAINDER •

    $default  reduce using rule 116 (term_choice)


State 113

  114 term_choice: ATTHERATE •

    $default  reduce using rule 114 (term_choice)


State 114

  112 term: term term_choice • factor

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    factor         go to state 153
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 115

  118 factor: factor_choice factor •

    $default  reduce using rule 118 (factor)


State 116

  124 power: atom_expr POWER_OPERATOR • factor

    NAME           shift, and go to state 2
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    factor         go to state 154
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 117

  139 trailer: OPEN_BRACKET • CLOSE_BRACKET
  140        | OPEN_BRACKET • arglist CLOSE_BRACKET

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    CLOSE_BRACKET  shift, and go to state 155
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 156
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    arglist        go to state 157
    argument_list  go to state 158
    argument       go to state 159


State 118

  127 atom_expr: atom_expr DOT • NAME

    NAME  shift, and go to state 160


State 119

  141 trailer: SQUARE_OPEN • test SQUARE_CLOSE

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 161
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 120

  126 atom_expr: atom_expr trailer •

    $default  reduce using rule 126 (atom_expr)


State 121

  143 testlist: testlist_list COMMA •
  146 testlist_list: testlist_list COMMA • test
  147              | testlist_list COMMA • test COLON TYPE_HINT

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 143 (testlist)

    test           go to state 162
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 122

  149 classdef: CLASS class_name OPEN_BRACKET • CLOSE_BRACKET COLON suite
  150         | CLASS class_name OPEN_BRACKET • arglist CLOSE_BRACKET COLON suite

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    CLOSE_BRACKET  shift, and go to state 163
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 156
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    arglist        go to state 164
    argument_list  go to state 158
    argument       go to state 159


State 123

  148 classdef: CLASS class_name COLON • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 167
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 124

   10 funcdef: DEF func_name OPEN_BRACKET • CLOSE_BRACKET COLON func_body_suite
   11        | DEF func_name OPEN_BRACKET • CLOSE_BRACKET ARROW_OPER func_ret_type COLON func_body_suite
   14 parameters: OPEN_BRACKET • typedargslist CLOSE_BRACKET

    NAME           shift, and go to state 168
    CLOSE_BRACKET  shift, and go to state 169

    typedargslist  go to state 170
    typedarg       go to state 171
    tfpdef         go to state 172


State 125

    8 funcdef: DEF func_name parameters • COLON func_body_suite
    9        | DEF func_name parameters • ARROW_OPER func_ret_type COLON func_body_suite

    ARROW_OPER  shift, and go to state 173
    COLON       shift, and go to state 174


State 126

   46 comma_name_star: COMMA • NAME
   47                | COMMA • NAME comma_name_star

    NAME  shift, and go to state 175


State 127

   45 global_stmt: GLOBAL NAME comma_name_star •

    $default  reduce using rule 45 (global_stmt)


State 128

  145 testlist_list: test COLON • TYPE_HINT

    TYPE_HINT  shift, and go to state 176


State 129

  128 atom: OPEN_BRACKET testlist CLOSE_BRACKET •

    $default  reduce using rule 128 (atom)


State 130

  130 atom: SQUARE_OPEN testlist SQUARE_CLOSE •

    $default  reduce using rule 130 (atom)


State 131

   23 simple_stmt: small_stmt_list SEMI_COLON NEWLINE •

    $default  reduce using rule 23 (simple_stmt)


State 132

   26 small_stmt_list: small_stmt_list SEMI_COLON small_stmt •

    $default  reduce using rule 26 (small_stmt_list)


State 133

   53 if_stmt: if_scope test COLON • M suite
   54        | if_scope test COLON • M suite N else_scope COLON M suite
   55        | if_scope test COLON • M suite N nts_star

    $default  reduce using rule 1 (M)

    M  go to state 177


State 134

   62 while_stmt: while_scope M while_expr • COLON M suite
   63           | while_scope M while_expr • COLON M suite N else_scope COLON M suite

    COLON  shift, and go to state 178


State 135

   65 while_expr: test •

    $default  reduce using rule 65 (while_expr)


State 136

   66 for_stmt: for_scope for_core COLON • M suite
   67         | for_scope for_core COLON • M suite N ELSE COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 179


State 137

   68 for_core: expr IN • range_stmt

    RANGE  shift, and go to state 180

    range_stmt  go to state 181


State 138

   30 expr_stmt: test ASSIGN_OPERATOR test •

    $default  reduce using rule 30 (expr_stmt)


State 139

   33 expr_stmt: test EQUAL eq_testlist_star_expr_plus •

    $default  reduce using rule 33 (expr_stmt)


State 140

   35 eq_testlist_star_expr_plus: test •
   36                           | test • EQUAL eq_testlist_star_expr_plus

    EQUAL  shift, and go to state 182

    $default  reduce using rule 35 (eq_testlist_star_expr_plus)


State 141

   31 expr_stmt: test COLON TYPE_HINT • ASSIGN_OPERATOR test
   34          | test COLON TYPE_HINT • EQUAL eq_testlist_star_expr_plus
  145 testlist_list: test COLON TYPE_HINT •

    ASSIGN_OPERATOR  shift, and go to state 183
    EQUAL            shift, and go to state 184

    $default  reduce using rule 145 (testlist_list)


State 142

   78 or_test: and_test_star OR M • and_test
   79 and_test_star: and_test_star OR M • and_test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    and_test       go to state 185
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 143

   82 and_test: not_test_star AND M • not_test
   83 not_test_star: not_test_star AND M • not_test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    not_test       go to state 186
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 144

   97 comp_op: NOT IN •

    $default  reduce using rule 97 (comp_op)


State 145

   99 comp_op: IS NOT •

    $default  reduce using rule 99 (comp_op)


State 146

   88 comparison: expr comp_op comparison •

    $default  reduce using rule 88 (comparison)


State 147

  101 expr: xor_expr BIT_OR expr •

    $default  reduce using rule 101 (expr)


State 148

  103 xor_expr: and_expr BIT_XOR xor_expr •

    $default  reduce using rule 103 (xor_expr)


State 149

  105 and_expr: shift_expr BIT_AND and_expr •

    $default  reduce using rule 105 (and_expr)


State 150

  107 shift_expr: arith_expr SHIFT_OPER shift_expr •

    $default  reduce using rule 107 (shift_expr)


State 151

  109 arith_expr: arith_expr PLUS term •
  112 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 109
    MULTIPLY        shift, and go to state 110
    DIVIDE          shift, and go to state 111
    REMAINDER       shift, and go to state 112
    ATTHERATE       shift, and go to state 113

    $default  reduce using rule 109 (arith_expr)

    term_choice  go to state 114


State 152

  110 arith_expr: arith_expr MINUS term •
  112 term: term • term_choice factor

    FLOOR_DIV_OPER  shift, and go to state 109
    MULTIPLY        shift, and go to state 110
    DIVIDE          shift, and go to state 111
    REMAINDER       shift, and go to state 112
    ATTHERATE       shift, and go to state 113

    $default  reduce using rule 110 (arith_expr)

    term_choice  go to state 114


State 153

  112 term: term term_choice factor •

    $default  reduce using rule 112 (term)


State 154

  124 power: atom_expr POWER_OPERATOR factor •

    $default  reduce using rule 124 (power)


State 155

  139 trailer: OPEN_BRACKET CLOSE_BRACKET •

    $default  reduce using rule 139 (trailer)


State 156

  156 argument: test •
  157         | test • EQUAL test

    EQUAL  shift, and go to state 187

    $default  reduce using rule 156 (argument)


State 157

  140 trailer: OPEN_BRACKET arglist • CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 188


State 158

  152 arglist: argument_list •
  153        | argument_list • COMMA
  155 argument_list: argument_list • COMMA argument

    COMMA  shift, and go to state 189

    $default  reduce using rule 152 (arglist)


State 159

  154 argument_list: argument •

    $default  reduce using rule 154 (argument_list)


State 160

  127 atom_expr: atom_expr DOT NAME •

    $default  reduce using rule 127 (atom_expr)


State 161

  141 trailer: SQUARE_OPEN test • SQUARE_CLOSE

    SQUARE_CLOSE  shift, and go to state 190


State 162

  146 testlist_list: testlist_list COMMA test •
  147              | testlist_list COMMA test • COLON TYPE_HINT

    COLON  shift, and go to state 191

    $default  reduce using rule 146 (testlist_list)


State 163

  149 classdef: CLASS class_name OPEN_BRACKET CLOSE_BRACKET • COLON suite

    COLON  shift, and go to state 192


State 164

  150 classdef: CLASS class_name OPEN_BRACKET arglist • CLOSE_BRACKET COLON suite

    CLOSE_BRACKET  shift, and go to state 193


State 165

   74 suite: NEWLINE • INDENT stmt_plus DEDENT
   75      | NEWLINE • INDENT stmt_plus NEWLINE DEDENT

    INDENT  shift, and go to state 194


State 166

   73 suite: simple_stmt •

    $default  reduce using rule 73 (suite)


State 167

  148 classdef: CLASS class_name COLON suite •

    $default  reduce using rule 148 (classdef)


State 168

   19 tfpdef: NAME •
   20       | NAME • COLON TYPE_HINT

    COLON  shift, and go to state 195

    $default  reduce using rule 19 (tfpdef)


State 169

   10 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET • COLON func_body_suite
   11        | DEF func_name OPEN_BRACKET CLOSE_BRACKET • ARROW_OPER func_ret_type COLON func_body_suite

    ARROW_OPER  shift, and go to state 196
    COLON       shift, and go to state 197


State 170

   14 parameters: OPEN_BRACKET typedargslist • CLOSE_BRACKET
   16 typedargslist: typedargslist • COMMA typedarg

    CLOSE_BRACKET  shift, and go to state 198
    COMMA          shift, and go to state 199


State 171

   15 typedargslist: typedarg •

    $default  reduce using rule 15 (typedargslist)


State 172

   17 typedarg: tfpdef •
   18         | tfpdef • EQUAL test

    EQUAL  shift, and go to state 200

    $default  reduce using rule 17 (typedarg)


State 173

    9 funcdef: DEF func_name parameters ARROW_OPER • func_ret_type COLON func_body_suite

    TYPE_HINT  shift, and go to state 201

    func_ret_type  go to state 202


State 174

    8 funcdef: DEF func_name parameters COLON • func_body_suite

    NEWLINE        shift, and go to state 203
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 204
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    func_body_suite  go to state 205


State 175

   46 comma_name_star: COMMA NAME •
   47                | COMMA NAME • comma_name_star

    COMMA  shift, and go to state 126

    $default  reduce using rule 46 (comma_name_star)

    comma_name_star  go to state 206


State 176

  145 testlist_list: test COLON TYPE_HINT •

    $default  reduce using rule 145 (testlist_list)


State 177

   53 if_stmt: if_scope test COLON M • suite
   54        | if_scope test COLON M • suite N else_scope COLON M suite
   55        | if_scope test COLON M • suite N nts_star

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 207
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 178

   62 while_stmt: while_scope M while_expr COLON • M suite
   63           | while_scope M while_expr COLON • M suite N else_scope COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 208


State 179

   66 for_stmt: for_scope for_core COLON M • suite
   67         | for_scope for_core COLON M • suite N ELSE COLON M suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 209
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 180

   70 range_stmt: RANGE • OPEN_BRACKET for_test CLOSE_BRACKET
   71           | RANGE • OPEN_BRACKET for_test COMMA test CLOSE_BRACKET

    OPEN_BRACKET  shift, and go to state 210


State 181

   68 for_core: expr IN range_stmt •

    $default  reduce using rule 68 (for_core)


State 182

   36 eq_testlist_star_expr_plus: test EQUAL • eq_testlist_star_expr_plus

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    eq_testlist_star_expr_plus  go to state 211
    test                        go to state 140
    or_test                     go to state 43
    and_test_star               go to state 44
    and_test                    go to state 45
    not_test_star               go to state 46
    not_test                    go to state 47
    comparison                  go to state 48
    expr                        go to state 49
    xor_expr                    go to state 50
    and_expr                    go to state 51
    shift_expr                  go to state 52
    arith_expr                  go to state 53
    term                        go to state 54
    factor                      go to state 55
    factor_choice               go to state 56
    power                       go to state 57
    atom_expr                   go to state 58
    atom                        go to state 59
    STRING_PLUS                 go to state 60


State 183

   31 expr_stmt: test COLON TYPE_HINT ASSIGN_OPERATOR • test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 212
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 184

   34 expr_stmt: test COLON TYPE_HINT EQUAL • eq_testlist_star_expr_plus

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    eq_testlist_star_expr_plus  go to state 213
    test                        go to state 140
    or_test                     go to state 43
    and_test_star               go to state 44
    and_test                    go to state 45
    not_test_star               go to state 46
    not_test                    go to state 47
    comparison                  go to state 48
    expr                        go to state 49
    xor_expr                    go to state 50
    and_expr                    go to state 51
    shift_expr                  go to state 52
    arith_expr                  go to state 53
    term                        go to state 54
    factor                      go to state 55
    factor_choice               go to state 56
    power                       go to state 57
    atom_expr                   go to state 58
    atom                        go to state 59
    STRING_PLUS                 go to state 60


State 185

   78 or_test: and_test_star OR M and_test •
   79 and_test_star: and_test_star OR M and_test •

    OR        reduce using rule 79 (and_test_star)
    $default  reduce using rule 78 (or_test)


State 186

   82 and_test: not_test_star AND M not_test •
   83 not_test_star: not_test_star AND M not_test •

    AND       reduce using rule 83 (not_test_star)
    $default  reduce using rule 82 (and_test)


State 187

  157 argument: test EQUAL • test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 214
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 188

  140 trailer: OPEN_BRACKET arglist CLOSE_BRACKET •

    $default  reduce using rule 140 (trailer)


State 189

  153 arglist: argument_list COMMA •
  155 argument_list: argument_list COMMA • argument

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 153 (arglist)

    test           go to state 156
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60
    argument       go to state 215


State 190

  141 trailer: SQUARE_OPEN test SQUARE_CLOSE •

    $default  reduce using rule 141 (trailer)


State 191

  147 testlist_list: testlist_list COMMA test COLON • TYPE_HINT

    TYPE_HINT  shift, and go to state 216


State 192

  149 classdef: CLASS class_name OPEN_BRACKET CLOSE_BRACKET COLON • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 217
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 193

  150 classdef: CLASS class_name OPEN_BRACKET arglist CLOSE_BRACKET • COLON suite

    COLON  shift, and go to state 218


State 194

   74 suite: NEWLINE INDENT • stmt_plus DEDENT
   75      | NEWLINE INDENT • stmt_plus NEWLINE DEDENT

    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    funcdef          go to state 24
    stmt             go to state 219
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63
    stmt_plus        go to state 220


State 195

   20 tfpdef: NAME COLON • TYPE_HINT

    TYPE_HINT  shift, and go to state 221


State 196

   11 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER • func_ret_type COLON func_body_suite

    TYPE_HINT  shift, and go to state 201

    func_ret_type  go to state 222


State 197

   10 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET COLON • func_body_suite

    NEWLINE        shift, and go to state 203
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 204
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    func_body_suite  go to state 223


State 198

   14 parameters: OPEN_BRACKET typedargslist CLOSE_BRACKET •

    $default  reduce using rule 14 (parameters)


State 199

   16 typedargslist: typedargslist COMMA • typedarg

    NAME  shift, and go to state 168

    typedarg  go to state 224
    tfpdef    go to state 172


State 200

   18 typedarg: tfpdef EQUAL • test

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 225
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 201

   13 func_ret_type: TYPE_HINT •

    $default  reduce using rule 13 (func_ret_type)


State 202

    9 funcdef: DEF func_name parameters ARROW_OPER func_ret_type • COLON func_body_suite

    COLON  shift, and go to state 226


State 203

  159 func_body_suite: NEWLINE • INDENT stmt_plus DEDENT
  160                | NEWLINE • INDENT stmt_plus NEWLINE DEDENT

    INDENT  shift, and go to state 227


State 204

  158 func_body_suite: simple_stmt •

    $default  reduce using rule 158 (func_body_suite)


State 205

    8 funcdef: DEF func_name parameters COLON func_body_suite •

    $default  reduce using rule 8 (funcdef)


State 206

   47 comma_name_star: COMMA NAME comma_name_star •

    $default  reduce using rule 47 (comma_name_star)


State 207

   53 if_stmt: if_scope test COLON M suite •
   54        | if_scope test COLON M suite • N else_scope COLON M suite
   55        | if_scope test COLON M suite • N nts_star

    ELSE      reduce using rule 2 (N)
    ELIF      reduce using rule 2 (N)
    $default  reduce using rule 53 (if_stmt)

    N  go to state 228


State 208

   62 while_stmt: while_scope M while_expr COLON M • suite
   63           | while_scope M while_expr COLON M • suite N else_scope COLON M suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 229
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 209

   66 for_stmt: for_scope for_core COLON M suite •
   67         | for_scope for_core COLON M suite • N ELSE COLON M suite

    ELSE      reduce using rule 2 (N)
    $default  reduce using rule 66 (for_stmt)

    N  go to state 230


State 210

   70 range_stmt: RANGE OPEN_BRACKET • for_test CLOSE_BRACKET
   71           | RANGE OPEN_BRACKET • for_test COMMA test CLOSE_BRACKET

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    for_test       go to state 231
    test           go to state 232
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 211

   36 eq_testlist_star_expr_plus: test EQUAL eq_testlist_star_expr_plus •

    $default  reduce using rule 36 (eq_testlist_star_expr_plus)


State 212

   31 expr_stmt: test COLON TYPE_HINT ASSIGN_OPERATOR test •

    $default  reduce using rule 31 (expr_stmt)


State 213

   34 expr_stmt: test COLON TYPE_HINT EQUAL eq_testlist_star_expr_plus •

    $default  reduce using rule 34 (expr_stmt)


State 214

  157 argument: test EQUAL test •

    $default  reduce using rule 157 (argument)


State 215

  155 argument_list: argument_list COMMA argument •

    $default  reduce using rule 155 (argument_list)


State 216

  147 testlist_list: testlist_list COMMA test COLON TYPE_HINT •

    $default  reduce using rule 147 (testlist_list)


State 217

  149 classdef: CLASS class_name OPEN_BRACKET CLOSE_BRACKET COLON suite •

    $default  reduce using rule 149 (classdef)


State 218

  150 classdef: CLASS class_name OPEN_BRACKET arglist CLOSE_BRACKET COLON • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 233
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 219

  161 stmt_plus: stmt •
  162          | stmt • stmt_plus

    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    $default  reduce using rule 161 (stmt_plus)

    funcdef          go to state 24
    stmt             go to state 219
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63
    stmt_plus        go to state 234


State 220

   74 suite: NEWLINE INDENT stmt_plus • DEDENT
   75      | NEWLINE INDENT stmt_plus • NEWLINE DEDENT

    NEWLINE  shift, and go to state 235
    DEDENT   shift, and go to state 236


State 221

   20 tfpdef: NAME COLON TYPE_HINT •

    $default  reduce using rule 20 (tfpdef)


State 222

   11 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type • COLON func_body_suite

    COLON  shift, and go to state 237


State 223

   10 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET COLON func_body_suite •

    $default  reduce using rule 10 (funcdef)


State 224

   16 typedargslist: typedargslist COMMA typedarg •

    $default  reduce using rule 16 (typedargslist)


State 225

   18 typedarg: tfpdef EQUAL test •

    $default  reduce using rule 18 (typedarg)


State 226

    9 funcdef: DEF func_name parameters ARROW_OPER func_ret_type COLON • func_body_suite

    NEWLINE        shift, and go to state 203
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 204
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    func_body_suite  go to state 238


State 227

  159 func_body_suite: NEWLINE INDENT • stmt_plus DEDENT
  160                | NEWLINE INDENT • stmt_plus NEWLINE DEDENT

    NAME           shift, and go to state 2
    IF             shift, and go to state 3
    WHILE          shift, and go to state 4
    FOR            shift, and go to state 5
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    CLASS          shift, and go to state 10
    DEF            shift, and go to state 11
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    funcdef          go to state 24
    stmt             go to state 219
    simple_stmt      go to state 26
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    compound_stmt    go to state 35
    if_stmt          go to state 36
    if_scope         go to state 37
    while_stmt       go to state 38
    while_scope      go to state 39
    for_stmt         go to state 40
    for_scope        go to state 41
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    classdef         go to state 63
    stmt_plus        go to state 239


State 228

   54 if_stmt: if_scope test COLON M suite N • else_scope COLON M suite
   55        | if_scope test COLON M suite N • nts_star

    ELSE  shift, and go to state 240
    ELIF  shift, and go to state 241

    else_scope     go to state 242
    else_if_scope  go to state 243
    nts_star       go to state 244


State 229

   62 while_stmt: while_scope M while_expr COLON M suite •
   63           | while_scope M while_expr COLON M suite • N else_scope COLON M suite

    ELSE      reduce using rule 2 (N)
    $default  reduce using rule 62 (while_stmt)

    N  go to state 245


State 230

   67 for_stmt: for_scope for_core COLON M suite N • ELSE COLON M suite

    ELSE  shift, and go to state 246


State 231

   70 range_stmt: RANGE OPEN_BRACKET for_test • CLOSE_BRACKET
   71           | RANGE OPEN_BRACKET for_test • COMMA test CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 247
    COMMA          shift, and go to state 248


State 232

   72 for_test: test •

    $default  reduce using rule 72 (for_test)


State 233

  150 classdef: CLASS class_name OPEN_BRACKET arglist CLOSE_BRACKET COLON suite •

    $default  reduce using rule 150 (classdef)


State 234

  162 stmt_plus: stmt stmt_plus •

    $default  reduce using rule 162 (stmt_plus)


State 235

   75 suite: NEWLINE INDENT stmt_plus NEWLINE • DEDENT

    DEDENT  shift, and go to state 249


State 236

   74 suite: NEWLINE INDENT stmt_plus DEDENT •

    $default  reduce using rule 74 (suite)


State 237

   11 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type COLON • func_body_suite

    NEWLINE        shift, and go to state 203
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 204
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62
    func_body_suite  go to state 250


State 238

    9 funcdef: DEF func_name parameters ARROW_OPER func_ret_type COLON func_body_suite •

    $default  reduce using rule 9 (funcdef)


State 239

  159 func_body_suite: NEWLINE INDENT stmt_plus • DEDENT
  160                | NEWLINE INDENT stmt_plus • NEWLINE DEDENT

    NEWLINE  shift, and go to state 251
    DEDENT   shift, and go to state 252


State 240

   57 else_scope: ELSE •

    $default  reduce using rule 57 (else_scope)


State 241

   58 else_if_scope: ELIF •

    $default  reduce using rule 58 (else_if_scope)


State 242

   54 if_stmt: if_scope test COLON M suite N else_scope • COLON M suite

    COLON  shift, and go to state 253


State 243

   59 nts_star: else_if_scope • test COLON M suite
   60         | else_if_scope • test COLON M suite N nts_star
   61         | else_if_scope • test COLON M suite N else_scope COLON M suite

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 254
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 244

   55 if_stmt: if_scope test COLON M suite N nts_star •

    $default  reduce using rule 55 (if_stmt)


State 245

   63 while_stmt: while_scope M while_expr COLON M suite N • else_scope COLON M suite

    ELSE  shift, and go to state 240

    else_scope  go to state 255


State 246

   67 for_stmt: for_scope for_core COLON M suite N ELSE • COLON M suite

    COLON  shift, and go to state 256


State 247

   70 range_stmt: RANGE OPEN_BRACKET for_test CLOSE_BRACKET •

    $default  reduce using rule 70 (range_stmt)


State 248

   71 range_stmt: RANGE OPEN_BRACKET for_test COMMA • test CLOSE_BRACKET

    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    test           go to state 257
    or_test        go to state 43
    and_test_star  go to state 44
    and_test       go to state 45
    not_test_star  go to state 46
    not_test       go to state 47
    comparison     go to state 48
    expr           go to state 49
    xor_expr       go to state 50
    and_expr       go to state 51
    shift_expr     go to state 52
    arith_expr     go to state 53
    term           go to state 54
    factor         go to state 55
    factor_choice  go to state 56
    power          go to state 57
    atom_expr      go to state 58
    atom           go to state 59
    STRING_PLUS    go to state 60


State 249

   75 suite: NEWLINE INDENT stmt_plus NEWLINE DEDENT •

    $default  reduce using rule 75 (suite)


State 250

   11 funcdef: DEF func_name OPEN_BRACKET CLOSE_BRACKET ARROW_OPER func_ret_type COLON func_body_suite •

    $default  reduce using rule 11 (funcdef)


State 251

  160 func_body_suite: NEWLINE INDENT stmt_plus NEWLINE • DEDENT

    DEDENT  shift, and go to state 258


State 252

  159 func_body_suite: NEWLINE INDENT stmt_plus DEDENT •

    $default  reduce using rule 159 (func_body_suite)


State 253

   54 if_stmt: if_scope test COLON M suite N else_scope COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 259


State 254

   59 nts_star: else_if_scope test • COLON M suite
   60         | else_if_scope test • COLON M suite N nts_star
   61         | else_if_scope test • COLON M suite N else_scope COLON M suite

    COLON  shift, and go to state 260


State 255

   63 while_stmt: while_scope M while_expr COLON M suite N else_scope • COLON M suite

    COLON  shift, and go to state 261


State 256

   67 for_stmt: for_scope for_core COLON M suite N ELSE COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 262


State 257

   71 range_stmt: RANGE OPEN_BRACKET for_test COMMA test • CLOSE_BRACKET

    CLOSE_BRACKET  shift, and go to state 263


State 258

  160 func_body_suite: NEWLINE INDENT stmt_plus NEWLINE DEDENT •

    $default  reduce using rule 160 (func_body_suite)


State 259

   54 if_stmt: if_scope test COLON M suite N else_scope COLON M • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 264
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 260

   59 nts_star: else_if_scope test COLON • M suite
   60         | else_if_scope test COLON • M suite N nts_star
   61         | else_if_scope test COLON • M suite N else_scope COLON M suite

    $default  reduce using rule 1 (M)

    M  go to state 265


State 261

   63 while_stmt: while_scope M while_expr COLON M suite N else_scope COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 266


State 262

   67 for_stmt: for_scope for_core COLON M suite N ELSE COLON M • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 267
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 263

   71 range_stmt: RANGE OPEN_BRACKET for_test COMMA test CLOSE_BRACKET •

    $default  reduce using rule 71 (range_stmt)


State 264

   54 if_stmt: if_scope test COLON M suite N else_scope COLON M suite •

    $default  reduce using rule 54 (if_stmt)


State 265

   59 nts_star: else_if_scope test COLON M • suite
   60         | else_if_scope test COLON M • suite N nts_star
   61         | else_if_scope test COLON M • suite N else_scope COLON M suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 268
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 266

   63 while_stmt: while_scope M while_expr COLON M suite N else_scope COLON M • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 269
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 267

   67 for_stmt: for_scope for_core COLON M suite N ELSE COLON M suite •

    $default  reduce using rule 67 (for_stmt)


State 268

   59 nts_star: else_if_scope test COLON M suite •
   60         | else_if_scope test COLON M suite • N nts_star
   61         | else_if_scope test COLON M suite • N else_scope COLON M suite

    ELSE      reduce using rule 2 (N)
    ELIF      reduce using rule 2 (N)
    $default  reduce using rule 59 (nts_star)

    N  go to state 270


State 269

   63 while_stmt: while_scope M while_expr COLON M suite N else_scope COLON M suite •

    $default  reduce using rule 63 (while_stmt)


State 270

   60 nts_star: else_if_scope test COLON M suite N • nts_star
   61         | else_if_scope test COLON M suite N • else_scope COLON M suite

    ELSE  shift, and go to state 240
    ELIF  shift, and go to state 241

    else_scope     go to state 271
    else_if_scope  go to state 243
    nts_star       go to state 272


State 271

   61 nts_star: else_if_scope test COLON M suite N else_scope • COLON M suite

    COLON  shift, and go to state 273


State 272

   60 nts_star: else_if_scope test COLON M suite N nts_star •

    $default  reduce using rule 60 (nts_star)


State 273

   61 nts_star: else_if_scope test COLON M suite N else_scope COLON • M suite

    $default  reduce using rule 1 (M)

    M  go to state 274


State 274

   61 nts_star: else_if_scope test COLON M suite N else_scope COLON M • suite

    NEWLINE        shift, and go to state 165
    NAME           shift, and go to state 2
    NOT            shift, and go to state 6
    BREAK          shift, and go to state 7
    CONTINUE       shift, and go to state 8
    RETURN         shift, and go to state 9
    GLOBAL         shift, and go to state 12
    ATOM_KEYWORDS  shift, and go to state 13
    STRING         shift, and go to state 14
    NUMBER         shift, and go to state 15
    OPEN_BRACKET   shift, and go to state 16
    PLUS           shift, and go to state 17
    MINUS          shift, and go to state 18
    NEGATION       shift, and go to state 19
    CURLY_OPEN     shift, and go to state 20
    SQUARE_OPEN    shift, and go to state 21

    simple_stmt      go to state 166
    small_stmt_list  go to state 27
    small_stmt       go to state 28
    expr_stmt        go to state 29
    flow_stmt        go to state 30
    break_stmt       go to state 31
    continue_stmt    go to state 32
    return_stmt      go to state 33
    global_stmt      go to state 34
    suite            go to state 275
    test             go to state 42
    or_test          go to state 43
    and_test_star    go to state 44
    and_test         go to state 45
    not_test_star    go to state 46
    not_test         go to state 47
    comparison       go to state 48
    expr             go to state 49
    xor_expr         go to state 50
    and_expr         go to state 51
    shift_expr       go to state 52
    arith_expr       go to state 53
    term             go to state 54
    factor           go to state 55
    factor_choice    go to state 56
    power            go to state 57
    atom_expr        go to state 58
    atom             go to state 59
    STRING_PLUS      go to state 60
    testlist         go to state 61
    testlist_list    go to state 62


State 275

   61 nts_star: else_if_scope test COLON M suite N else_scope COLON M suite •

    $default  reduce using rule 61 (nts_star)
