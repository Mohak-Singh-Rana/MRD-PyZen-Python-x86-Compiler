Starting parse
Entering state 0
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 76
Reducing stack by rule 14 (line 269):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Stack now 0 11
Entering state 77
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 137
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 190
Reading a token: Next token is token COLON ()
Reducing stack by rule 13 (line 265):
-> $$ = nterm T ()
Stack now 0 11 77 137 190
Entering state 227
Next token is token COLON ()
Shifting token COLON ()
Entering state 255
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
Reading a token: Next token is token COMMA ()
Reducing stack by rule 22 (line 411):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 10 75 136 187 224 11 77 137 191 229
Entering state 193
Reducing stack by rule 20 (line 379):
   $1 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 10 75 136 187 224 11 77 137 191 229
Entering state 256
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 231
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 189
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 225
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 253
Reducing stack by rule 25 (line 458):
   $1 = token NAME ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
-> $$ = nterm tfpdef ()
Stack now 0 10 75 136 187 224 11 77 137 191 229 256 231
Entering state 194
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 22 (line 411):
   $1 = nterm tfpdef ()
-> $$ = nterm typedarg ()
Stack now 0 10 75 136 187 224 11 77 137 191 229 256 231
Entering state 257
Reducing stack by rule 21 (line 388):
   $1 = nterm typedargslist ()
   $2 = token COMMA ()
   $3 = nterm typedarg ()
-> $$ = nterm typedargslist ()
Stack now 0 10 75 136 187 224 11 77 137 191 229
Entering state 256
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 273
Reducing stack by rule 18 (line 352):
   $1 = token OPEN_BRACKET ()
   $2 = token SELF ()
   $3 = token COMMA ()
   $4 = nterm typedargslist ()
   $5 = token CLOSE_BRACKET ()
-> $$ = nterm parameters ()
Stack now 0 10 75 136 187 224 11 77
Entering state 138
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 196
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2306):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2543):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2523):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2306):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2543):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2523):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 261
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2332):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 261
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2332):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2916):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2919):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 280
Reducing stack by rule 181 (line 2919):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 280
Reducing stack by rule 181 (line 2919):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 10 75 136 187 224 11 77 138 196 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 10 75 136 187 224 11 77 138 196
Entering state 236
Reducing stack by rule 9 (line 159):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Stack now 0 10 75 136 187 224
Entering state 251
Reducing stack by rule 173 (line 2825):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Stack now 0 10 75 136 187 224
Entering state 252
Reading a token: Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 269
Reducing stack by rule 171 (line 2815):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Stack now 0 10 75 136
Entering state 188
Reducing stack by rule 167 (line 2665):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Stack now 0
Entering state 70
Reducing stack by rule 59 (line 1040):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Stack now 0
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0
Entering state 31
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 76
Reducing stack by rule 14 (line 269):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Stack now 0 31 11
Entering state 77
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 137
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 190
Reading a token: Next token is token COLON ()
Reducing stack by rule 13 (line 265):
-> $$ = nterm T ()
Stack now 0 31 11 77 137 190
Entering state 227
Next token is token COLON ()
Shifting token COLON ()
Entering state 255
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 155 (line 2464):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 67
Reducing stack by rule 152 (line 2443):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 11 77 137 190 227 255 205 240 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 155 (line 2464):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 67
Reducing stack by rule 152 (line 2443):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 65
Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 49 102
Entering state 162
Reducing stack by rule 41 (line 888):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = nterm test ()
a
-> $$ = nterm obj_dec ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 36
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 92
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 65
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 130
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 65
Reading a token: Next token is token COMMA ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 59
Next token is token COMMA ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 58
Next token is token COMMA ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 56
Next token is token COMMA ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 54
Next token is token COMMA ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 52
Next token is token COMMA ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 178
Next token is token COMMA ()
Reducing stack by rule 178 (line 2895):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 181
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 155 (line 2464):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 67
Reducing stack by rule 152 (line 2443):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 178
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 178 (line 2895):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 181
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 176 (line 2863):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130 181 220
Entering state 248
Reducing stack by rule 177 (line 2874):
   $1 = nterm argument ()
   $2 = token COMMA ()
   $3 = nterm argument_list ()
-> $$ = nterm argument_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 180
Reducing stack by rule 175 (line 2856):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65 130
Entering state 179
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 219
Reducing stack by rule 158 (line 2498):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92 65
Entering state 133
Reducing stack by rule 138 (line 1962):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 36 92
Entering state 150
Reducing stack by rule 40 (line 845):
   $1 = nterm obj_dec ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 65
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 131
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 182
Reducing stack by rule 140 (line 2199):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2306):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2543):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2523):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2408):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 65
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 131
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 182
Reducing stack by rule 140 (line 2199):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2306):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2543):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2523):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2916):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2919):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token NEWLINE ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 61
Next token is token PLUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 65
Reading a token: Next token is token MULTIPLY ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MULTIPLY ()
Shifting token MULTIPLY ()
Entering state 123
Reducing stack by rule 125 (line 1885):
   $1 = token MULTIPLY ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120 172
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121 173
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token PLUS ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token NEWLINE ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 61
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 61
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 61
Next token is token PLUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 65
Reading a token: Next token is token MULTIPLY ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MULTIPLY ()
Shifting token MULTIPLY ()
Entering state 123
Reducing stack by rule 125 (line 1885):
   $1 = token MULTIPLY ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120 172
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121 173
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token PLUS ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token NEWLINE ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token MULTIPLY ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 61
Next token is token MULTIPLY ()
Shifting token MULTIPLY ()
Entering state 123
Reducing stack by rule 125 (line 1885):
   $1 = token MULTIPLY ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 61
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 61
Next token is token MINUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121 173
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121 173 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token PLUS ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120 172
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120 172 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213 60 121
Entering state 173
Next token is token NEWLINE ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token PLUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 120
Entering state 65
Reading a token: Next token is token MINUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 120
Entering state 172
Next token is token MINUS ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 121
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 121
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 121
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 121
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 121
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101 60 121
Entering state 173
Next token is token NEWLINE ()
Reducing stack by rule 122 (line 1797):
   $1 = nterm arith_expr ()
   $2 = token MINUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token MULTIPLY ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token MULTIPLY ()
Shifting token MULTIPLY ()
Entering state 123
Reducing stack by rule 125 (line 1885):
   $1 = token MULTIPLY ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 65
Reading a token: Next token is token DIVIDE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token DIVIDE ()
Shifting token DIVIDE ()
Entering state 124
Reducing stack by rule 127 (line 1891):
   $1 = token DIVIDE ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 65
Reading a token: Next token is token REMAINDER ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token REMAINDER ()
Shifting token REMAINDER ()
Entering state 125
Reducing stack by rule 128 (line 1894):
   $1 = token REMAINDER ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61
Entering state 127
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token POWER_OPERATOR ()
Shifting token POWER_OPERATOR ()
Entering state 129
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 15
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 61
Next token is token PLUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NUMBER ()
Shifting token NUMBER ()
Entering state 23
Reducing stack by rule 151 (line 2425):
   $1 = token NUMBER ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15 60 120
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15 60 120
Entering state 172
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 81
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 163 (line 2531):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 69
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 161 (line 2511):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129 15
Entering state 82
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 142
Reducing stack by rule 145 (line 2356):
   $1 = token OPEN_BRACKET ()
   $2 = nterm testlist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101 65 129
Entering state 175
Reducing stack by rule 136 (line 1938):
   $1 = nterm atom_expr ()
   $2 = token POWER_OPERATOR ()
   $3 = nterm factor ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token FLOOR_DIV_OPER ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token FLOOR_DIV_OPER ()
Shifting token FLOOR_DIV_OPER ()
Entering state 122
Reducing stack by rule 129 (line 1897):
   $1 = token FLOOR_DIV_OPER ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101 61
Entering state 127
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token MULTIPLY ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token MULTIPLY ()
Shifting token MULTIPLY ()
Entering state 123
Reducing stack by rule 125 (line 1885):
   $1 = token MULTIPLY ()
-> $$ = nterm term_choice ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61
Entering state 127
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 15
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 65
Reading a token: Next token is token PLUS ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 61
Next token is token PLUS ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 60
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 120
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15 60 120
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15 60 120
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15 60 120
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15 60 120
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15 60 120
Entering state 172
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 121 (line 1757):
   $1 = nterm arith_expr ()
   $2 = token PLUS ()
   $3 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 81
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 163 (line 2531):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 69
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 161 (line 2511):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127 15
Entering state 82
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 142
Reducing stack by rule 145 (line 2356):
   $1 = token OPEN_BRACKET ()
   $2 = nterm testlist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101 61 127
Entering state 174
Reducing stack by rule 124 (line 1841):
   $1 = nterm term ()
   $2 = nterm term_choice ()
   $3 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 101
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 65
Reading a token: Next token is token SHIFT_OPER ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 61
Next token is token SHIFT_OPER ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 60
Next token is token SHIFT_OPER ()
Shifting token SHIFT_OPER ()
Entering state 119
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101 60 119
Entering state 171
Reducing stack by rule 119 (line 1716):
   $1 = nterm arith_expr ()
   $2 = token SHIFT_OPER ()
   $3 = nterm shift_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 49 101
Entering state 160
Reducing stack by rule 38 (line 664):
   $1 = nterm test ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2306):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2531):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2511):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2904):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240 261
Entering state 280
Reducing stack by rule 181 (line 2907):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 11 77 137 190 227 255 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 11 77 137 190 227 255
Entering state 272
Reducing stack by rule 11 (line 217):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = token OPEN_BRACKET ()
   $4 = token CLOSE_BRACKET ()
   $5 = nterm T ()
   $6 = token COLON ()
   $7 = nterm suite ()
-> $$ = nterm funcdef ()
Stack now 0
Entering state 30
Reducing stack by rule 58 (line 1037):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0
Entering state 31
Reading a token: Next token is token IF ()
Shifting token IF ()
Entering state 3
Reducing stack by rule 66 (line 1126):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Stack now 0 31
Entering state 44
Reading a token: Next token is token D_NAME ()
Shifting token D_NAME ()
Entering state 93
Reading a token: Next token is token EQUAL_EQUAL ()
Shifting token EQUAL_EQUAL ()
Entering state 152
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 203
Reducing stack by rule 65 (line 1114):
   $1 = token D_NAME ()
   $2 = token EQUAL_EQUAL ()
   $3 = token STRING ()
-> $$ = nterm d_expr ()
Stack now 0 31 44
Entering state 95
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 154
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2396):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 44 95 154 205 240
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 65
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 130
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 176
Reducing stack by rule 157 (line 2478):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 44 95 154 205 240 65
Entering state 133
Reducing stack by rule 138 (line 1962):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 44 95 154 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 44 95 154 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 44 95 154 205 240
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 44 95 154 205 240
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 44 95 154 205 240
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 44 95 154 205 240
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 44 95 154 205 240
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 44 95 154 205 240
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 44 95 154 205 240
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 44 95 154 205 240
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2531):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 44 95 154 205 240
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2511):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 44 95 154 205 240
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 44 95 154 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 44 95 154 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 44 95 154 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 44 95 154 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 44 95 154 205 240
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2904):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 44 95 154 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 44 95 154
Entering state 207
Reducing stack by rule 63 (line 1099):
   $1 = nterm if_scope ()
   $2 = nterm d_expr ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Stack now 0 31
Entering state 43
Reducing stack by rule 55 (line 1024):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31
Entering state 31
Reading a token: Now at end of input.
Reducing stack by rule 6 (line 146):
   $1 = nterm stmt ()
-> $$ = nterm snippet ()
Stack now 0 31
Entering state 89
Reducing stack by rule 8 (line 152):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Stack now 0
Entering state 29
Reducing stack by rule 4 (line 135):
   $1 = nterm snippet ()
-> $$ = nterm file ()
Stack now 0
Entering state 28
Now at end of input.
Shifting token $end ()
Entering state 88
Stack now 0 28 88
Cleanup: popping token $end ()
Cleanup: popping nterm file ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2319):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2305):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2530):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2510):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 261
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2319):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2319):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2305):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2530):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2510):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 261
Reading a token: Next token is token SELF ()
Shifting token SELF ()
Entering state 27
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 87
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 147
Reducing stack by rule 143 (line 2319):
   $1 = token SELF ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token TYPE_HINT ()
Shifting token TYPE_HINT ()
Entering state 161
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 213
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261 49 102 161 213
Entering state 245
Reducing stack by rule 39 (line 719):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = token TYPE_HINT ()
   $4 = token EQUAL ()
   $5 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2903):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2906):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261 261
Entering state 280
Reducing stack by rule 181 (line 2906):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261 261
Entering state 280
Reducing stack by rule 181 (line 2906):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240 261
Entering state 280
Reducing stack by rule 181 (line 2906):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 10 75 136 187 224 11 77 138 196 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 10 75 136 187 224 11 77 138 196
Entering state 236
Reducing stack by rule 9 (line 159):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = nterm parameters ()
   $4 = token COLON ()
   $5 = nterm suite ()
-> $$ = nterm funcdef ()
Stack now 0 31 10 75 136 187 224
Entering state 251
Reducing stack by rule 173 (line 2812):
   $1 = nterm funcdef ()
-> $$ = nterm funcdef_plus ()
Stack now 0 31 10 75 136 187 224
Entering state 252
Reading a token: Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 269
Reducing stack by rule 171 (line 2802):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm funcdef_plus ()
   $4 = token DEDENT ()
-> $$ = nterm class_body_suite ()
Stack now 0 31 10 75 136
Entering state 188
Reducing stack by rule 167 (line 2652):
   $1 = token CLASS ()
   $2 = nterm class_declare ()
   $3 = token COLON ()
   $4 = nterm class_body_suite ()
-> $$ = nterm classdef ()
Stack now 0 31
Entering state 70
Reducing stack by rule 59 (line 1040):
   $1 = nterm classdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 31
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31
Entering state 31
Reading a token: Next token is token DEF ()
Shifting token DEF ()
Entering state 11
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 76
Reducing stack by rule 14 (line 269):
   $1 = token NAME ()
-> $$ = nterm func_name ()
Stack now 0 31 31 11
Entering state 77
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 137
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 190
Reading a token: Next token is token COLON ()
Reducing stack by rule 13 (line 265):
-> $$ = nterm T ()
Stack now 0 31 31 11 77 137 190
Entering state 227
Next token is token COLON ()
Shifting token COLON ()
Entering state 255
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 65
Reading a token: Next token is token COLON ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 61
Next token is token COLON ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 60
Next token is token COLON ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 59
Next token is token COLON ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 58
Next token is token COLON ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 57
Next token is token COLON ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 56
Next token is token COLON ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 54
Next token is token COLON ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 52
Next token is token COLON ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 49
Next token is token COLON ()
Shifting token COLON ()
Entering state 102
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 65
Reading a token: Next token is token EQUAL ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 61
Next token is token EQUAL ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 60
Next token is token EQUAL ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 59
Next token is token EQUAL ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 58
Next token is token EQUAL ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 57
Next token is token EQUAL ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 56
Next token is token EQUAL ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 54
Next token is token EQUAL ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 52
Next token is token EQUAL ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 49 102
Entering state 162
Reducing stack by rule 41 (line 888):
   $1 = nterm test ()
   $2 = token COLON ()
   $3 = nterm test ()
obj
-> $$ = nterm obj_dec ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 36
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 92
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 65
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 130
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token COMMA ()
Reducing stack by rule 155 (line 2451):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 67
Reducing stack by rule 152 (line 2430):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 59
Next token is token COMMA ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 58
Next token is token COMMA ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 56
Next token is token COMMA ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 54
Next token is token COMMA ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 52
Next token is token COMMA ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 178
Next token is token COMMA ()
Reducing stack by rule 178 (line 2882):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 181
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token COMMA ()
Reducing stack by rule 155 (line 2451):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 67
Reducing stack by rule 152 (line 2430):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 65
Next token is token COMMA ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 61
Next token is token COMMA ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 60
Next token is token COMMA ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 59
Next token is token COMMA ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 58
Next token is token COMMA ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 57
Next token is token COMMA ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 56
Next token is token COMMA ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 54
Next token is token COMMA ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 52
Next token is token COMMA ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 178
Next token is token COMMA ()
Reducing stack by rule 178 (line 2882):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 181
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 14
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 155 (line 2451):
   $1 = token STRING ()
-> $$ = nterm STRING_PLUS ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 67
Reducing stack by rule 152 (line 2430):
   $1 = nterm STRING_PLUS ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 65
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 178
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 178 (line 2882):
   $1 = nterm test ()
-> $$ = nterm argument ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 181
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 176 (line 2850):
   $1 = nterm argument ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220 181 220
Entering state 248
Reducing stack by rule 177 (line 2861):
   $1 = nterm argument ()
   $2 = token COMMA ()
   $3 = nterm argument_list ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130 181 220
Entering state 248
Reducing stack by rule 177 (line 2861):
   $1 = nterm argument ()
   $2 = token COMMA ()
   $3 = nterm argument_list ()
-> $$ = nterm argument_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 180
Reducing stack by rule 175 (line 2843):
   $1 = nterm argument_list ()
-> $$ = nterm arglist ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65 130
Entering state 179
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 219
Reducing stack by rule 158 (line 2485):
   $1 = token OPEN_BRACKET ()
   $2 = nterm arglist ()
   $3 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92 65
Entering state 133
Reducing stack by rule 138 (line 1962):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 151
Next token is token NEWLINE ()
Reducing stack by rule 42 (line 921):
   $1 = nterm test ()
-> $$ = nterm eq_testlist_star_expr_plus ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 36 92
Entering state 150
Reducing stack by rule 40 (line 845):
   $1 = nterm obj_dec ()
   $2 = token EQUAL ()
   $3 = nterm eq_testlist_star_expr_plus ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 261
Reading a token: Next token is token PRINT ()
Shifting token PRINT ()
Entering state 26
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 86
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 65
Reading a token: Next token is token DOT ()
Shifting token DOT ()
Entering state 131
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 182
Reducing stack by rule 140 (line 2199):
   $1 = nterm atom_expr ()
   $2 = token DOT ()
   $3 = token NAME ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 65
Reading a token: Next token is token CLOSE_BRACKET ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 61
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 60
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 59
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 58
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 57
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 56
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 54
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 52
Next token is token CLOSE_BRACKET ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261 26 86
Entering state 146
Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 201
Reducing stack by rule 142 (line 2305):
   $1 = token PRINT ()
   $2 = token OPEN_BRACKET ()
   $3 = nterm test ()
   $4 = token CLOSE_BRACKET ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2530):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2510):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2903):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 31 11 77 137 190 227 255 205 240 261
Entering state 280
Reducing stack by rule 181 (line 2906):
   $1 = nterm stmt ()
   $2 = nterm stmt_plus ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 31 11 77 137 190 227 255 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 31 11 77 137 190 227 255
Entering state 272
Reducing stack by rule 11 (line 217):
   $1 = token DEF ()
   $2 = nterm func_name ()
   $3 = token OPEN_BRACKET ()
   $4 = token CLOSE_BRACKET ()
   $5 = nterm T ()
   $6 = token COLON ()
   $7 = nterm suite ()
-> $$ = nterm funcdef ()
Stack now 0 31 31
Entering state 30
Reducing stack by rule 58 (line 1037):
   $1 = nterm funcdef ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 31
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31
Entering state 31
Reading a token: Next token is token IF ()
Shifting token IF ()
Entering state 3
Reducing stack by rule 66 (line 1126):
   $1 = token IF ()
-> $$ = nterm if_scope ()
Stack now 0 31 31 31
Entering state 44
Reading a token: Next token is token D_NAME ()
Shifting token D_NAME ()
Entering state 93
Reading a token: Next token is token EQUAL_EQUAL ()
Shifting token EQUAL_EQUAL ()
Entering state 152
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 203
Reducing stack by rule 65 (line 1114):
   $1 = token D_NAME ()
   $2 = token EQUAL_EQUAL ()
   $3 = token STRING ()
-> $$ = nterm d_expr ()
Stack now 0 31 31 31 44
Entering state 95
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 154
Reading a token: Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 205
Reading a token: Next token is token INDENT ()
Shifting token INDENT ()
Entering state 240
Reading a token: Next token is token NAME ()
Shifting token NAME ()
Entering state 2
Reducing stack by rule 150 (line 2395):
   $1 = token NAME ()
-> $$ = nterm atom ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 66
Reducing stack by rule 137 (line 1959):
   $1 = nterm atom ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 65
Reading a token: Next token is token OPEN_BRACKET ()
Shifting token OPEN_BRACKET ()
Entering state 130
Reading a token: Next token is token CLOSE_BRACKET ()
Shifting token CLOSE_BRACKET ()
Entering state 176
Reducing stack by rule 157 (line 2477):
   $1 = token OPEN_BRACKET ()
   $2 = token CLOSE_BRACKET ()
-> $$ = nterm trailer ()
Stack now 0 31 31 31 44 95 154 205 240 65
Entering state 133
Reducing stack by rule 138 (line 1962):
   $1 = nterm atom_expr ()
   $2 = nterm trailer ()
-> $$ = nterm atom_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 65
Reading a token: Next token is token NEWLINE ()
Reducing stack by rule 135 (line 1935):
   $1 = nterm atom_expr ()
-> $$ = nterm power ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 64
Reducing stack by rule 131 (line 1921):
   $1 = nterm power ()
-> $$ = nterm factor ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 62
Reducing stack by rule 123 (line 1838):
   $1 = nterm factor ()
-> $$ = nterm term ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 61
Next token is token NEWLINE ()
Reducing stack by rule 120 (line 1754):
   $1 = nterm term ()
-> $$ = nterm arith_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 60
Next token is token NEWLINE ()
Reducing stack by rule 118 (line 1713):
   $1 = nterm arith_expr ()
-> $$ = nterm shift_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 59
Next token is token NEWLINE ()
Reducing stack by rule 116 (line 1672):
   $1 = nterm shift_expr ()
-> $$ = nterm and_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 58
Next token is token NEWLINE ()
Reducing stack by rule 114 (line 1632):
   $1 = nterm and_expr ()
-> $$ = nterm xor_expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 57
Next token is token NEWLINE ()
Reducing stack by rule 112 (line 1592):
   $1 = nterm xor_expr ()
-> $$ = nterm expr ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 56
Next token is token NEWLINE ()
Reducing stack by rule 99 (line 1520):
   $1 = nterm expr ()
-> $$ = nterm comparison ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 55
Reducing stack by rule 96 (line 1495):
   $1 = nterm comparison ()
-> $$ = nterm not_test ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 54
Next token is token NEWLINE ()
Reducing stack by rule 91 (line 1451):
   $1 = nterm not_test ()
-> $$ = nterm and_test ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 52
Next token is token NEWLINE ()
Reducing stack by rule 87 (line 1418):
   $1 = nterm and_test ()
-> $$ = nterm or_test ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 50
Reducing stack by rule 86 (line 1413):
   $1 = nterm or_test ()
-> $$ = nterm test ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 49
Next token is token NEWLINE ()
Reducing stack by rule 163 (line 2530):
   $1 = nterm test ()
-> $$ = nterm testlist_list ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 69
Next token is token NEWLINE ()
Reducing stack by rule 161 (line 2510):
   $1 = nterm testlist_list ()
-> $$ = nterm testlist ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 68
Reducing stack by rule 37 (line 661):
   $1 = nterm testlist ()
-> $$ = nterm expr_stmt ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 35
Reducing stack by rule 32 (line 528):
   $1 = nterm expr_stmt ()
-> $$ = nterm small_stmt ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 34
Reducing stack by rule 30 (line 513):
   $1 = nterm small_stmt ()
-> $$ = nterm small_stmt_list ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 33
Next token is token NEWLINE ()
Shifting token NEWLINE ()
Entering state 90
Reducing stack by rule 29 (line 508):
   $1 = nterm small_stmt_list ()
   $2 = token NEWLINE ()
-> $$ = nterm simple_stmt ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 32
Reducing stack by rule 26 (line 497):
   $1 = nterm simple_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 261
Reading a token: Next token is token DEDENT ()
Reducing stack by rule 180 (line 2903):
   $1 = nterm stmt ()
-> $$ = nterm stmt_plus ()
Stack now 0 31 31 31 44 95 154 205 240
Entering state 262
Next token is token DEDENT ()
Shifting token DEDENT ()
Entering state 282
Reducing stack by rule 84 (line 1404):
   $1 = token NEWLINE ()
   $2 = token INDENT ()
   $3 = nterm stmt_plus ()
   $4 = token DEDENT ()
-> $$ = nterm suite ()
Stack now 0 31 31 31 44 95 154
Entering state 207
Reducing stack by rule 63 (line 1099):
   $1 = nterm if_scope ()
   $2 = nterm d_expr ()
   $3 = token COLON ()
   $4 = nterm suite ()
-> $$ = nterm if_stmt ()
Stack now 0 31 31 31
Entering state 43
Reducing stack by rule 55 (line 1024):
   $1 = nterm if_stmt ()
-> $$ = nterm compound_stmt ()
Stack now 0 31 31 31
Entering state 42
Reducing stack by rule 27 (line 500):
   $1 = nterm compound_stmt ()
-> $$ = nterm stmt ()
Stack now 0 31 31 31
Entering state 31
Reading a token: Now at end of input.
Reducing stack by rule 6 (line 146):
   $1 = nterm stmt ()
-> $$ = nterm snippet ()
Stack now 0 31 31 31
Entering state 89
Reducing stack by rule 8 (line 152):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Stack now 0 31 31
Entering state 89
Reducing stack by rule 8 (line 152):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Stack now 0 31
Entering state 89
Reducing stack by rule 8 (line 152):
   $1 = nterm stmt ()
   $2 = nterm snippet ()
-> $$ = nterm snippet ()
Stack now 0
Entering state 29
Reducing stack by rule 4 (line 135):
   $1 = nterm snippet ()
-> $$ = nterm file ()
Stack now 0
Entering state 28
Now at end of input.
Shifting token $end ()
Entering state 88
Stack now 0 28 88
Cleanup: popping token $end ()
Cleanup: popping nterm file ()
