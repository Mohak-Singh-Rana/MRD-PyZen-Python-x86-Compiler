digraph ASTVisual {
 ordering = out ;
10 [ label="NAME
 (n)", color = "red", shape="box"]
20 [ label="STRING
 (\"\"\"Recursive function to calculate the factorial of a number.\"\"\")", color = "red", shape="box"]
30 [ label="NAME
 (n)", color = "red", shape="box"]
40 [ label="EQUAL_EQUAL
(==)"]
50 [ label="NUMBER
 (0)", color = "red", shape="box"]
60 [ label="NUMBER
 (1)", color = "red", shape="box"]
70 [ label="RETURN"]
80 [ label="NAME
 (n)", color = "red", shape="box"]
90 [ label="MULTIPLY
(*)"]
100 [ label="NAME
 (factorial)", color = "red", shape="box"]
110 [ label="NAME
 (n)", color = "red", shape="box"]
120 [ label="NUMBER
 (1)", color = "red", shape="box"]
130 [ label="MINUS
(-)"]
140 [ label="ATOM_EXPR"]
150 [ label="RETURN"]
160 [ label="IF_ELSE"]
170 [ label="MANY_STMT"]
180 [ label="FUNCTION"]
190 [ label="NAME
 (factorial)", color = "red", shape="box"]
200 [ label="NAME
 (n)", color = "red", shape="box"]
210 [ label="STRING
 (\"\"\"Recursive function to calculate the nth Fibonacci number.\"\"\")", color = "red", shape="box"]
220 [ label="NAME
 (n)", color = "red", shape="box"]
230 [ label="LESS_THAN_EQUAL
(<=)"]
240 [ label="NUMBER
 (1)", color = "red", shape="box"]
250 [ label="NAME
 (n)", color = "red", shape="box"]
260 [ label="RETURN"]
270 [ label="NAME
 (fibonacci)", color = "red", shape="box"]
280 [ label="NAME
 (n)", color = "red", shape="box"]
290 [ label="NUMBER
 (1)", color = "red", shape="box"]
300 [ label="MINUS
(-)"]
310 [ label="ATOM_EXPR"]
320 [ label="NAME
 (fibonacci)", color = "red", shape="box"]
330 [ label="NAME
 (n)", color = "red", shape="box"]
340 [ label="NUMBER
 (2)", color = "red", shape="box"]
350 [ label="MINUS
(-)"]
360 [ label="ATOM_EXPR"]
370 [ label="PLUS
(+)"]
380 [ label="RETURN"]
390 [ label="IF_ELSE"]
400 [ label="MANY_STMT"]
410 [ label="FUNCTION"]
420 [ label="NAME
 (fibonacci)", color = "red", shape="box"]
430 [ label="NAME
 (s)", color = "red", shape="box"]
440 [ label="STRING
 (\"\"\"Recursive function to check if a string is a palindrome.\"\"\")", color = "red", shape="box"]
450 [ label="NAME
 (len)", color = "red", shape="box"]
460 [ label="NAME
 (s)", color = "red", shape="box"]
470 [ label="ATOM_EXPR"]
480 [ label="LESS_THAN_EQUAL
(<=)"]
490 [ label="NUMBER
 (1)", color = "red", shape="box"]
500 [ label="ATOM_KEYWORD
 (True)", color = "red", shape="box"]
510 [ label="RETURN"]
520 [ label="NAME
 (s)", color = "red", shape="box"]
530 [ label="NUMBER
 (0)", color = "red", shape="box"]
540 [ label="ATOM_EXPR"]
550 [ label="NOT_EQUAL
(!=)"]
560 [ label="NAME
 (s)", color = "red", shape="box"]
570 [ label="MINUS
(-)", color = "red", shape="box"]
580 [ label="NUMBER
 (1)", color = "red", shape="box"]
590 [ label="ATOM_EXPR"]
600 [ label="ATOM_KEYWORD
 (False)", color = "red", shape="box"]
610 [ label="RETURN"]
620 [ label="ELIF"]
630 [ label="NAME
 (is_palindrome)", color = "red", shape="box"]
640 [ label="NAME
 (s)", color = "red", shape="box"]
650 [ label="NUMBER
 (1)", color = "red", shape="box"]
660 [ label="MINUS
(-)", color = "red", shape="box"]
670 [ label="NUMBER
 (1)", color = "red", shape="box"]
680 [ label="SUBSCRIPT"]
690 [ label="ATOM_EXPR"]
700 [ label="ATOM_EXPR"]
710 [ label="RETURN"]
720 [ label="IF_ELIF_ELSE"]
730 [ label="MANY_STMT"]
740 [ label="FUNCTION"]
750 [ label="NAME
 (is_palindrome)", color = "red", shape="box"]
760 [ label="ATOM_KEYWORD
 (True)", color = "red", shape="box"]
770 [ label="NAME
 (print)", color = "red", shape="box"]
780 [ label="STRING
 (\"\\nRecursive Functions Demo\")", color = "red", shape="box"]
790 [ label="ATOM_EXPR"]
800 [ label="NAME
 (print)", color = "red", shape="box"]
810 [ label="STRING
 (\"1. Calculate factorial\")", color = "red", shape="box"]
820 [ label="ATOM_EXPR"]
830 [ label="NAME
 (print)", color = "red", shape="box"]
840 [ label="STRING
 (\"2. Calculate nth Fibonacci number\")", color = "red", shape="box"]
850 [ label="ATOM_EXPR"]
860 [ label="NAME
 (print)", color = "red", shape="box"]
870 [ label="STRING
 (\"3. Check if a string is a palindrome\")", color = "red", shape="box"]
880 [ label="ATOM_EXPR"]
890 [ label="NAME
 (print)", color = "red", shape="box"]
900 [ label="STRING
 (\"4. Quit\")", color = "red", shape="box"]
910 [ label="ATOM_EXPR"]
920 [ label="NAME
 (choice)", color = "red", shape="box"]
930 [ label="NAME
 (input)", color = "red", shape="box"]
940 [ label="STRING
 (\"Enter your choice (1-5): \")", color = "red", shape="box"]
950 [ label="ATOM_EXPR"]
960 [ label="EQUAL
(=)"]
970 [ label="NAME
 (choice)", color = "red", shape="box"]
980 [ label="EQUAL_EQUAL
(==)"]
990 [ label="STRING
 ('1')", color = "red", shape="box"]
1000 [ label="NAME
 (num)", color = "red", shape="box"]
1010 [ label="TYPE
 (int)", color = "red", shape="box"]
1020 [ label="NAME
 (input)", color = "red", shape="box"]
1030 [ label="STRING
 (\"Enter a non-negative integer: \")", color = "red", shape="box"]
1040 [ label="ATOM_EXPR"]
1050 [ label="ATOM_EXPR"]
1060 [ label="EQUAL
(=)"]
1070 [ label="NAME
 (num)", color = "red", shape="box"]
1080 [ label="LESS_THAN
(<)"]
1090 [ label="NUMBER
 (0)", color = "red", shape="box"]
1100 [ label="NAME
 (print)", color = "red", shape="box"]
1110 [ label="STRING
 (\"Error: Please enter a non-negative integer.\")", color = "red", shape="box"]
1120 [ label="ATOM_EXPR"]
1130 [ label="NAME
 (result)", color = "red", shape="box"]
1140 [ label="NAME
 (factorial)", color = "red", shape="box"]
1150 [ label="NAME
 (num)", color = "red", shape="box"]
1160 [ label="ATOM_EXPR"]
1170 [ label="EQUAL
(=)"]
1180 [ label="NAME
 (print)", color = "red", shape="box"]
1190 [ label="STRING
 (f\"The factorial of {num} is: {result}\")", color = "red", shape="box"]
1200 [ label="ATOM_EXPR"]
1210 [ label="MANY_STMT"]
1220 [ label="IF_ELSE"]
1230 [ label="MANY_STMT"]
1240 [ label="NAME
 (choice)", color = "red", shape="box"]
1250 [ label="EQUAL_EQUAL
(==)"]
1260 [ label="STRING
 ('2')", color = "red", shape="box"]
1270 [ label="NAME
 (num)", color = "red", shape="box"]
1280 [ label="TYPE
 (int)", color = "red", shape="box"]
1290 [ label="NAME
 (input)", color = "red", shape="box"]
1300 [ label="STRING
 (\"Enter the value of n for Fibonacci sequence: \")", color = "red", shape="box"]
1310 [ label="ATOM_EXPR"]
1320 [ label="ATOM_EXPR"]
1330 [ label="EQUAL
(=)"]
1340 [ label="NAME
 (num)", color = "red", shape="box"]
1350 [ label="LESS_THAN
(<)"]
1360 [ label="NUMBER
 (0)", color = "red", shape="box"]
1370 [ label="NAME
 (print)", color = "red", shape="box"]
1380 [ label="STRING
 (\"Error: Please enter a non-negative integer.\")", color = "red", shape="box"]
1390 [ label="ATOM_EXPR"]
1400 [ label="NAME
 (result)", color = "red", shape="box"]
1410 [ label="NAME
 (fibonacci)", color = "red", shape="box"]
1420 [ label="NAME
 (num)", color = "red", shape="box"]
1430 [ label="ATOM_EXPR"]
1440 [ label="EQUAL
(=)"]
1450 [ label="NAME
 (print)", color = "red", shape="box"]
1460 [ label="STRING
 (f\"The {num}th Fibonacci number is: {result}\")", color = "red", shape="box"]
1470 [ label="ATOM_EXPR"]
1480 [ label="MANY_STMT"]
1490 [ label="IF_ELSE"]
1500 [ label="MANY_STMT"]
1510 [ label="NAME
 (choice)", color = "red", shape="box"]
1520 [ label="EQUAL_EQUAL
(==)"]
1530 [ label="STRING
 ('3')", color = "red", shape="box"]
1540 [ label="NAME
 (string)", color = "red", shape="box"]
1550 [ label="NAME
 (input)", color = "red", shape="box"]
1560 [ label="STRING
 (\"Enter a string: \")", color = "red", shape="box"]
1570 [ label="ATOM_EXPR"]
1580 [ label="EQUAL
(=)"]
1590 [ label="NAME
 (is_palindrome)", color = "red", shape="box"]
1600 [ label="NAME
 (string)", color = "red", shape="box"]
1610 [ label="ATOM_EXPR"]
1620 [ label="NAME
 (print)", color = "red", shape="box"]
1630 [ label="STRING
 (\"The string is a palindrome.\")", color = "red", shape="box"]
1640 [ label="ATOM_EXPR"]
1650 [ label="NAME
 (print)", color = "red", shape="box"]
1660 [ label="STRING
 (\"The string is not a palindrome.\")", color = "red", shape="box"]
1670 [ label="ATOM_EXPR"]
1680 [ label="IF_ELSE"]
1690 [ label="MANY_STMT"]
1700 [ label="NAME
 (choice)", color = "red", shape="box"]
1710 [ label="EQUAL_EQUAL
(==)"]
1720 [ label="STRING
 ('4')", color = "red", shape="box"]
1730 [ label="NAME
 (x)", color = "red", shape="box"]
1740 [ label="NAME
 (y)", color = "red", shape="box"]
1750 [ label="EQUAL
(=)"]
1760 [ label="NAME
 (print)", color = "red", shape="box"]
1770 [ label="STRING
 (\"Exiting program. Goodbye!\")", color = "red", shape="box"]
1780 [ label="ATOM_EXPR"]
1790 [ label="BREAK
(break)", color = "red", shape="box"]
1800 [ label="MANY_STMT"]
1810 [ label="MANY_STMT"]
1820 [ label="ELIF"]
1830 [ label="ELIF"]
1840 [ label="ELIF"]
1850 [ label="NAME
 (print)", color = "red", shape="box"]
1860 [ label="STRING
 (\"Invalid choice. Please enter a valid option.\")", color = "red", shape="box"]
1870 [ label="ATOM_EXPR"]
1880 [ label="IF_ELIF_ELSE"]
1890 [ label="MANY_STMT"]
1900 [ label="MANY_STMT"]
1910 [ label="MANY_STMT"]
1920 [ label="MANY_STMT"]
1930 [ label="MANY_STMT"]
1940 [ label="MANY_STMT"]
1950 [ label="WHILE"]
1960 [ label="FUNCTION"]
1970 [ label="NAME
 (main)", color = "red", shape="box"]
1980 [ label="NAME
 (__name__)", color = "red", shape="box"]
1990 [ label="EQUAL_EQUAL
(==)"]
2000 [ label="STRING
 (\"__main__\")", color = "red", shape="box"]
2010 [ label="NAME
 (main)", color = "red", shape="box"]
2030 [ label="ATOM_EXPR"]
2040 [ label="IF"]
2050 [ label="SNIPPET"]
2060 [ label="SNIPPET"]
2070 [ label="SNIPPET"]
2080 [ label="SNIPPET"]
40 -> 30[ label=""]
40 -> 50[ label=""]
70 -> 60[ label=""]
130 -> 110[ label=""]
130 -> 120[ label=""]
140 -> 100[ label=""]
140 -> 130[ label=""]
90 -> 80[ label=""]
90 -> 140[ label=""]
150 -> 90[ label=""]
160 -> 40[ label="IF_EXPR"]
160 -> 70[ label="IF_SUITE"]
160 -> 150[ label="ELSE_SUITE"]
170 -> 20[ label=""]
170 -> 160[ label=""]
180 -> 190[ label=""]
180 -> 10[ label=""]
180 -> 170[ label=""]
230 -> 220[ label=""]
230 -> 240[ label=""]
260 -> 250[ label=""]
300 -> 280[ label=""]
300 -> 290[ label=""]
310 -> 270[ label=""]
310 -> 300[ label=""]
350 -> 330[ label=""]
350 -> 340[ label=""]
360 -> 320[ label=""]
360 -> 350[ label=""]
370 -> 310[ label=""]
370 -> 360[ label=""]
380 -> 370[ label=""]
390 -> 230[ label="IF_EXPR"]
390 -> 260[ label="IF_SUITE"]
390 -> 380[ label="ELSE_SUITE"]
400 -> 210[ label=""]
400 -> 390[ label=""]
410 -> 420[ label=""]
410 -> 200[ label=""]
410 -> 400[ label=""]
470 -> 450[ label=""]
470 -> 460[ label=""]
480 -> 470[ label=""]
480 -> 490[ label=""]
510 -> 500[ label=""]
540 -> 520[ label=""]
540 -> 530[ label=""]
570 -> 580[ label=""]
590 -> 560[ label=""]
590 -> 570[ label=""]
550 -> 540[ label=""]
550 -> 590[ label=""]
610 -> 600[ label=""]
620 -> 550[ label="EXPRESSION"]
620 -> 610[ label="SUITE"]
660 -> 670[ label=""]
680 -> 650[ label="TEST"]
680 -> 660[ label="TEST"]
690 -> 640[ label=""]
690 -> 680[ label=""]
700 -> 630[ label=""]
700 -> 690[ label=""]
710 -> 700[ label=""]
720 -> 480[ label="IF_EXPR"]
720 -> 510[ label="IF_SUITE"]
720 -> 620[ label="ELIF"]
720 -> 710[ label="ELSE_SUITE"]
730 -> 440[ label=""]
730 -> 720[ label=""]
740 -> 750[ label=""]
740 -> 430[ label=""]
740 -> 730[ label=""]
790 -> 770[ label=""]
790 -> 780[ label=""]
820 -> 800[ label=""]
820 -> 810[ label=""]
850 -> 830[ label=""]
850 -> 840[ label=""]
880 -> 860[ label=""]
880 -> 870[ label=""]
910 -> 890[ label=""]
910 -> 900[ label=""]
950 -> 930[ label=""]
950 -> 940[ label=""]
960 -> 920[ label=""]
960 -> 950[ label=""]
980 -> 970[ label=""]
980 -> 990[ label=""]
1040 -> 1020[ label=""]
1040 -> 1030[ label=""]
1050 -> 1010[ label=""]
1050 -> 1040[ label=""]
1060 -> 1000[ label=""]
1060 -> 1050[ label=""]
1080 -> 1070[ label=""]
1080 -> 1090[ label=""]
1120 -> 1100[ label=""]
1120 -> 1110[ label=""]
1160 -> 1140[ label=""]
1160 -> 1150[ label=""]
1170 -> 1130[ label=""]
1170 -> 1160[ label=""]
1200 -> 1180[ label=""]
1200 -> 1190[ label=""]
1210 -> 1170[ label=""]
1210 -> 1200[ label=""]
1220 -> 1080[ label="IF_EXPR"]
1220 -> 1120[ label="IF_SUITE"]
1220 -> 1210[ label="ELSE_SUITE"]
1230 -> 1060[ label=""]
1230 -> 1220[ label=""]
1250 -> 1240[ label=""]
1250 -> 1260[ label=""]
1310 -> 1290[ label=""]
1310 -> 1300[ label=""]
1320 -> 1280[ label=""]
1320 -> 1310[ label=""]
1330 -> 1270[ label=""]
1330 -> 1320[ label=""]
1350 -> 1340[ label=""]
1350 -> 1360[ label=""]
1390 -> 1370[ label=""]
1390 -> 1380[ label=""]
1430 -> 1410[ label=""]
1430 -> 1420[ label=""]
1440 -> 1400[ label=""]
1440 -> 1430[ label=""]
1470 -> 1450[ label=""]
1470 -> 1460[ label=""]
1480 -> 1440[ label=""]
1480 -> 1470[ label=""]
1490 -> 1350[ label="IF_EXPR"]
1490 -> 1390[ label="IF_SUITE"]
1490 -> 1480[ label="ELSE_SUITE"]
1500 -> 1330[ label=""]
1500 -> 1490[ label=""]
1520 -> 1510[ label=""]
1520 -> 1530[ label=""]
1570 -> 1550[ label=""]
1570 -> 1560[ label=""]
1580 -> 1540[ label=""]
1580 -> 1570[ label=""]
1610 -> 1590[ label=""]
1610 -> 1600[ label=""]
1640 -> 1620[ label=""]
1640 -> 1630[ label=""]
1670 -> 1650[ label=""]
1670 -> 1660[ label=""]
1680 -> 1610[ label="IF_EXPR"]
1680 -> 1640[ label="IF_SUITE"]
1680 -> 1670[ label="ELSE_SUITE"]
1690 -> 1580[ label=""]
1690 -> 1680[ label=""]
1710 -> 1700[ label=""]
1710 -> 1720[ label=""]
1750 -> 1730[ label=""]
1750 -> 1740[ label=""]
1780 -> 1760[ label=""]
1780 -> 1770[ label=""]
1800 -> 1780[ label=""]
1800 -> 1790[ label=""]
1810 -> 1750[ label=""]
1810 -> 1800[ label=""]
1820 -> 1710[ label="EXPRESSION"]
1820 -> 1810[ label="SUITE"]
1830 -> 1520[ label="EXPRESSION"]
1830 -> 1690[ label="SUITE"]
1830 -> 1820[ label=""]
1840 -> 1250[ label="EXPRESSION"]
1840 -> 1500[ label="SUITE"]
1840 -> 1830[ label=""]
1870 -> 1850[ label=""]
1870 -> 1860[ label=""]
1880 -> 980[ label="IF_EXPR"]
1880 -> 1230[ label="IF_SUITE"]
1880 -> 1840[ label="ELIF"]
1880 -> 1870[ label="ELSE_SUITE"]
1890 -> 960[ label=""]
1890 -> 1880[ label=""]
1900 -> 910[ label=""]
1900 -> 1890[ label=""]
1910 -> 880[ label=""]
1910 -> 1900[ label=""]
1920 -> 850[ label=""]
1920 -> 1910[ label=""]
1930 -> 820[ label=""]
1930 -> 1920[ label=""]
1940 -> 790[ label=""]
1940 -> 1930[ label=""]
1950 -> 760[ label="EPRESSION"]
1950 -> 1940[ label="SUITE"]
1960 -> 1970[ label=""]
1960 -> 1950[ label=""]
1990 -> 1980[ label=""]
1990 -> 2000[ label=""]
2030 -> 2010[ label=""]
2040 -> 1990[ label="EXPRESSION"]
2040 -> 2030[ label="SUITE"]
2050 -> 1960[ label=""]
2050 -> 2040[ label=""]
2060 -> 740[ label=""]
2060 -> 2050[ label=""]
2070 -> 410[ label=""]
2070 -> 2060[ label=""]
2080 -> 180[ label=""]
2080 -> 2070[ label=""]
  }
